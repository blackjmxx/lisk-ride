{"ast":null,"code":"var _jsxFileName = \"/Users/blackjmxx/Devs/LiskRide/src/components/nuka-carousel/index.js\";\n\n/* eslint-disable */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ExecutionEnvironment from 'exenv';\nimport Animate from 'react-move/Animate';\nimport * as easing from 'd3-ease';\nimport { PagingDots, PreviousButton, NextButton } from './default-controls';\nimport Transitions from './all-transitions';\nimport AnnounceSlide, { defaultRenderAnnounceSlideMessage } from './announce-slide';\nimport { addEvent, removeEvent, getPropsByTransitionMode, swipeDirection, shouldUpdate, calcSomeInitialState } from './utilities/utilities';\nimport { getImgTagStyles, getDecoratorStyles, getSliderStyles, getFrameStyles, getTransitionProps } from './utilities/style-utilities';\nimport { addAccessibility, getValidChildren, getSlideHeight } from './utilities/bootstrapping-utilities';\nexport default class Carousel extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.displayName = 'Carousel';\n    this.clickDisabled = false;\n    this.isTransitioning = false;\n    this.timers = [];\n    this.touchObject = {};\n    this.controlsMap = [{\n      funcName: 'renderTopLeftControls',\n      key: 'TopLeft'\n    }, {\n      funcName: 'renderTopCenterControls',\n      key: 'TopCenter'\n    }, {\n      funcName: 'renderTopRightControls',\n      key: 'TopRight'\n    }, {\n      funcName: 'renderCenterLeftControls',\n      key: 'CenterLeft'\n    }, {\n      funcName: 'renderCenterCenterControls',\n      key: 'CenterCenter'\n    }, {\n      funcName: 'renderCenterRightControls',\n      key: 'CenterRight'\n    }, {\n      funcName: 'renderBottomLeftControls',\n      key: 'BottomLeft'\n    }, {\n      funcName: 'renderBottomCenterControls',\n      key: 'BottomCenter'\n    }, {\n      funcName: 'renderBottomRightControls',\n      key: 'BottomRight'\n    }];\n    this.childNodesMutationObs = null;\n    this.state = {\n      currentSlide: this.props.slideIndex,\n      dragging: false,\n      easing: this.props.disableAnimation ? '' : easing.easeCircleOut,\n      hasInteraction: false,\n      // to remove animation from the initial slide on the page load when non-default slideIndex is used\n      isWrappingAround: false,\n      left: 0,\n      resetWrapAroundPosition: false,\n      slideCount: getValidChildren(this.props.children).length,\n      top: 0,\n      wrapToIndex: null,\n      readyStateChanged: 0,\n      ...calcSomeInitialState(this.props)\n    };\n    this.autoplayIterator = this.autoplayIterator.bind(this);\n    this.calcSlideHeightAndWidth = this.calcSlideHeightAndWidth.bind(this);\n    this.getChildNodes = this.getChildNodes.bind(this);\n    this.getMouseEvents = this.getMouseEvents.bind(this);\n    this.getOffsetDeltas = this.getOffsetDeltas.bind(this);\n    this.getTargetLeft = this.getTargetLeft.bind(this);\n    this.getTouchEvents = this.getTouchEvents.bind(this);\n    this.goToSlide = this.goToSlide.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleMouseOut = this.handleMouseOut.bind(this);\n    this.handleMouseOver = this.handleMouseOver.bind(this);\n    this.handleSwipe = this.handleSwipe.bind(this);\n    this.nextSlide = this.nextSlide.bind(this);\n    this.onReadyStateChange = this.onReadyStateChange.bind(this);\n    this.onResize = this.onResize.bind(this);\n    this.onVisibilityChange = this.onVisibilityChange.bind(this);\n    this.previousSlide = this.previousSlide.bind(this);\n    this.renderControls = this.renderControls.bind(this);\n    this.resetAutoplay = this.resetAutoplay.bind(this);\n    this.setDimensions = this.setDimensions.bind(this);\n    this.setLeft = this.setLeft.bind(this);\n    this.setSlideHeightAndWidth = this.setSlideHeightAndWidth.bind(this);\n    this.startAutoplay = this.startAutoplay.bind(this);\n    this.stopAutoplay = this.stopAutoplay.bind(this);\n    this.establishChildNodesMutationObserver = this.establishChildNodesMutationObserver.bind(this);\n  }\n\n  componentDidMount() {\n    // see https://github.com/facebook/react/issues/3417#issuecomment-121649937\n    this.mounted = true;\n    this.setLeft();\n    this.setDimensions();\n    this.bindEvents();\n    this.establishChildNodesMutationObserver();\n\n    if (this.props.autoplay) {\n      this.startAutoplay();\n    }\n\n    this.getlockScrollEvents().lockTouchScroll();\n  } // @TODO Remove deprecated componentWillReceiveProps with getDerivedStateFromProps\n  // eslint-disable-next-line react/no-deprecated\n  // eslint-disable-next-line camelcase\n\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const slideCount = getValidChildren(nextProps.children).length;\n    const slideCountChanged = slideCount !== this.state.slideCount;\n    this.setState(prevState => ({\n      slideCount,\n      currentSlide: slideCountChanged ? nextProps.slideIndex : prevState.currentSlide\n    }));\n\n    if (slideCount <= this.state.currentSlide) {\n      this.goToSlide(Math.max(slideCount - 1, 0), nextProps);\n    }\n\n    const updateDimensions = slideCountChanged || shouldUpdate(this.props, nextProps, ['cellSpacing', 'vertical', 'slideWidth', 'slideHeight', 'heightMode', 'slidesToScroll', 'slidesToShow', 'transitionMode', 'cellAlign']);\n\n    if (updateDimensions) {\n      this.setDimensions(nextProps);\n    }\n\n    if (this.props.slideIndex !== nextProps.slideIndex && nextProps.slideIndex !== this.state.currentSlide && !this.state.isWrappingAround) {\n      this.goToSlide(nextProps.slideIndex, this.props);\n    }\n\n    if (this.props.autoplay !== nextProps.autoplay) {\n      if (nextProps.autoplay) {\n        this.startAutoplay();\n      } else {\n        this.stopAutoplay();\n      }\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const slideChanged = prevState.currentSlide !== this.state.currentSlide;\n    const heightModeChanged = prevProps.heightMode !== this.props.heightMode;\n    const axisChanged = prevProps.vertical !== this.props.vertical;\n\n    if (axisChanged) {\n      this.onResize();\n    } else if (slideChanged || heightModeChanged) {\n      const image = this.getCurrentChildNodeImg();\n\n      if (image) {\n        image.addEventListener('load', this.setSlideHeightAndWidth);\n        image.removeEventListener('load', this.setSlideHeightAndWidth);\n      } else {\n        this.setSlideHeightAndWidth();\n      }\n    }\n\n    const {\n      slideHeight\n    } = this.calcSlideHeightAndWidth();\n    const heightMismatches = slideHeight !== prevState.slideHeight; // When using dynamic content in a slide, it is possible for the slide height to be inaccurate. Here, double check that the height is correct once the component has mounted and the `readyStateChange` event has fired.\n    // See #521 and https://github.com/FormidableLabs/nuka-carousel/blob/fea63242a8b2fb69c65689efe615d0feb9b2d1ff/README.md#resizing-height-issue\n\n    if (this.mounted && prevState.readyStateChanged > 0 && heightMismatches) {\n      this.setDimensions();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unbindEvents();\n    this.disconnectChildNodesMutationObserver();\n    this.stopAutoplay(); // see https://github.com/facebook/react/issues/3417#issuecomment-121649937\n\n    this.mounted = false;\n\n    for (let i = 0; i < this.timers.length; i++) {\n      clearTimeout(this.timers[i]);\n    }\n\n    this.getlockScrollEvents().unlockTouchScroll();\n  }\n\n  establishChildNodesMutationObserver() {\n    const childNodes = this.getChildNodes();\n\n    if (childNodes.length && 'MutationObserver' in window) {\n      this.childNodesMutationObs = new MutationObserver(mutations => {\n        mutations.forEach(() => {\n          this.setSlideHeightAndWidth();\n        });\n      });\n\n      const observeChildNodeMutation = node => {\n        this.childNodesMutationObs.observe(node, {\n          attributes: true,\n          attributeFilter: ['style'],\n          attributeOldValue: false,\n          characterData: false,\n          characterDataOldValue: false,\n          childList: false,\n          subtree: false\n        });\n      };\n\n      const childNodesArray = Array.from(childNodes);\n\n      for (const node of childNodesArray) {\n        observeChildNodeMutation(node);\n      }\n    }\n  }\n\n  disconnectChildNodesMutationObserver() {\n    if (this.childNodesMutationObs instanceof MutationObserver) {\n      this.childNodesMutationObs.disconnect();\n    }\n  }\n\n  getlockScrollEvents() {\n    const blockEvent = e => {\n      if (this.state.dragging) {\n        const direction = swipeDirection(this.touchObject.startX, e.touches[0].pageX, this.touchObject.startY, e.touches[0].pageY, this.props.vertical);\n\n        if (direction !== 0) {\n          e.preventDefault();\n        }\n      }\n    };\n\n    const lockTouchScroll = () => {\n      document.addEventListener('touchmove', blockEvent, {\n        passive: false\n      });\n    };\n\n    const unlockTouchScroll = () => {\n      document.addEventListener('touchmove', blockEvent, {\n        passive: false\n      });\n    };\n\n    return {\n      lockTouchScroll,\n      unlockTouchScroll\n    };\n  }\n\n  getTouchEvents() {\n    if (this.props.swiping === false) {\n      return {\n        onTouchStart: this.handleMouseOver,\n        onTouchEnd: this.handleMouseOut\n      };\n    }\n\n    return {\n      onTouchStart: e => {\n        this.touchObject = {\n          startX: e.touches[0].pageX,\n          startY: e.touches[0].pageY\n        };\n        this.handleMouseOver();\n        this.setState({\n          dragging: true\n        });\n      },\n      onTouchMove: e => {\n        const direction = swipeDirection(this.touchObject.startX, e.touches[0].pageX, this.touchObject.startY, e.touches[0].pageY, this.props.vertical);\n\n        if (direction !== 0) {\n          e.preventDefault();\n        }\n\n        const length = this.props.vertical ? Math.round(Math.sqrt(Math.pow(e.touches[0].pageY - this.touchObject.startY, 2))) : Math.round(Math.sqrt(Math.pow(e.touches[0].pageX - this.touchObject.startX, 2)));\n\n        if (length >= 10) {\n          if (this.clickDisabled === false) this.props.onDragStart(e);\n          this.clickDisabled = true;\n        }\n\n        this.touchObject = {\n          startX: this.touchObject.startX,\n          startY: this.touchObject.startY,\n          endX: e.touches[0].pageX,\n          endY: e.touches[0].pageY,\n          length,\n          direction\n        };\n        this.setState({\n          left: this.props.vertical ? 0 : this.getTargetLeft(this.touchObject.length * this.touchObject.direction),\n          top: this.props.vertical ? this.getTargetLeft(this.touchObject.length * this.touchObject.direction) : 0\n        });\n      },\n      onTouchEnd: e => {\n        this.handleSwipe(e);\n        this.handleMouseOut();\n      },\n      onTouchCancel: e => {\n        this.handleSwipe(e);\n      }\n    };\n  }\n\n  getMouseEvents() {\n    if (this.props.dragging === false) {\n      return {\n        onMouseOver: this.handleMouseOver,\n        onMouseOut: this.handleMouseOut\n      };\n    }\n\n    return {\n      onMouseOver: this.handleMouseOver,\n      onMouseOut: this.handleMouseOut,\n      onMouseDown: e => {\n        if (e.preventDefault) {\n          e.preventDefault();\n        }\n\n        this.touchObject = {\n          startX: e.clientX,\n          startY: e.clientY\n        };\n        this.setState({\n          dragging: true\n        });\n      },\n      onMouseMove: e => {\n        if (!this.state.dragging) {\n          return;\n        }\n\n        const direction = swipeDirection(this.touchObject.startX, e.clientX, this.touchObject.startY, e.clientY, this.props.vertical);\n\n        if (direction !== 0) {\n          e.preventDefault();\n        }\n\n        const length = this.props.vertical ? Math.round(Math.sqrt(Math.pow(e.clientY - this.touchObject.startY, 2))) : Math.round(Math.sqrt(Math.pow(e.clientX - this.touchObject.startX, 2))); // prevents disabling click just because mouse moves a fraction of a pixel\n\n        if (length >= 10) {\n          if (this.clickDisabled === false) this.props.onDragStart(e);\n          this.clickDisabled = true;\n        }\n\n        this.touchObject = {\n          startX: this.touchObject.startX,\n          startY: this.touchObject.startY,\n          endX: e.clientX,\n          endY: e.clientY,\n          length,\n          direction\n        };\n        this.setState({\n          left: this.props.vertical ? 0 : this.getTargetLeft(this.touchObject.length * this.touchObject.direction),\n          top: this.props.vertical ? this.getTargetLeft(this.touchObject.length * this.touchObject.direction) : 0\n        });\n      },\n      onMouseUp: e => {\n        if (this.touchObject.length === 0 || this.touchObject.length === undefined) {\n          this.setState({\n            dragging: false\n          });\n          return;\n        }\n\n        this.handleSwipe(e);\n      },\n      onMouseLeave: e => {\n        if (!this.state.dragging) {\n          return;\n        }\n\n        this.handleSwipe(e);\n      }\n    };\n  }\n\n  pauseAutoplay() {\n    if (this.props.autoplay) {\n      this.autoplayPaused = true;\n      this.stopAutoplay();\n    }\n  }\n\n  unpauseAutoplay() {\n    if (this.props.autoplay && this.autoplayPaused) {\n      this.startAutoplay();\n      this.autoplayPaused = null;\n    }\n  }\n\n  handleMouseOver() {\n    if (this.props.pauseOnHover) {\n      this.pauseAutoplay();\n    }\n  }\n\n  handleMouseOut() {\n    if (this.autoplayPaused) {\n      this.unpauseAutoplay();\n    }\n  }\n\n  handleClick(event) {\n    if (this.clickDisabled === true) {\n      if (event.metaKey || event.shiftKey || event.altKey || event.ctrlKey) {\n        return;\n      }\n\n      event.preventDefault();\n      event.stopPropagation();\n\n      if (event.nativeEvent) {\n        event.nativeEvent.stopPropagation();\n      }\n    }\n  }\n\n  handleSwipe() {\n    let slidesToShow = this.state.slidesToShow;\n\n    if (this.props.slidesToScroll === 'auto') {\n      slidesToShow = this.state.slidesToScroll;\n    }\n\n    if (this.touchObject.length > this.state.slideWidth / slidesToShow / 5) {\n      if (this.touchObject.direction === 1) {\n        if (this.state.currentSlide + 1 >= this.state.slideCount && !this.props.wrapAround) {\n          this.setState({\n            easing: easing[this.props.edgeEasing]\n          });\n        } else {\n          this.nextSlide();\n        }\n      } else if (this.touchObject.direction === -1) {\n        if (this.state.currentSlide <= 0 && !this.props.wrapAround) {\n          this.setState({\n            easing: easing[this.props.edgeEasing]\n          });\n        } else {\n          this.previousSlide();\n        }\n      }\n    } else {\n      this.goToSlide(this.state.currentSlide);\n    } // wait for `handleClick` event before resetting clickDisabled\n\n\n    this.timers.push(setTimeout(() => {\n      this.clickDisabled = false;\n    }, 0));\n    this.touchObject = {};\n    this.setState({\n      dragging: false\n    });\n  } // eslint-disable-next-line complexity\n\n\n  handleKeyPress(e) {\n    if (this.props.enableKeyboardControls) {\n      switch (e.keyCode) {\n        case 39:\n        case 68:\n        case 38:\n        case 87:\n          this.nextSlide();\n          break;\n\n        case 37:\n        case 65:\n        case 40:\n        case 83:\n          this.previousSlide();\n          break;\n\n        case 81:\n          this.goToSlide(0, this.props);\n          break;\n\n        case 69:\n          this.goToSlide(this.state.slideCount - 1, this.props);\n          break;\n\n        case 32:\n          if (this.state.pauseOnHover && this.props.autoplay) {\n            this.setState({\n              pauseOnHover: false\n            });\n            this.pauseAutoplay();\n            break;\n          } else {\n            this.setState({\n              pauseOnHover: true\n            });\n            this.unpauseAutoplay();\n            break;\n          }\n\n      }\n    }\n  }\n\n  autoplayIterator() {\n    if (this.props.wrapAround) {\n      if (this.props.autoplayReverse) {\n        this.previousSlide();\n      } else {\n        this.nextSlide();\n      }\n\n      return;\n    }\n\n    if (this.props.autoplayReverse) {\n      if (this.state.currentSlide !== 0) {\n        this.previousSlide();\n      } else {\n        this.stopAutoplay();\n      }\n    } else if (this.state.currentSlide !== this.state.slideCount - this.state.slidesToShow) {\n      this.nextSlide();\n    } else {\n      this.stopAutoplay();\n    }\n  }\n\n  startAutoplay() {\n    this.autoplayID = setInterval(this.autoplayIterator, this.props.autoplayInterval);\n  }\n\n  resetAutoplay() {\n    if (this.props.autoplay && !this.autoplayPaused) {\n      this.stopAutoplay();\n      this.startAutoplay();\n    }\n  }\n\n  stopAutoplay() {\n    if (this.autoplayID) {\n      clearInterval(this.autoplayID);\n    }\n  } // Animation Method\n\n\n  getTargetLeft(touchOffset, slide) {\n    let offset;\n    const target = slide || this.state.currentSlide;\n\n    switch (this.state.cellAlign) {\n      case 'left':\n        {\n          offset = 0;\n          offset -= this.props.cellSpacing * target;\n          break;\n        }\n\n      case 'center':\n        {\n          offset = (this.state.frameWidth - this.state.slideWidth) / 2;\n          offset -= this.props.cellSpacing * target;\n          break;\n        }\n\n      case 'right':\n        {\n          offset = this.state.frameWidth - this.state.slideWidth;\n          offset -= this.props.cellSpacing * target;\n          break;\n        }\n    }\n\n    let left = this.state.slideWidth * target;\n    const lastSlide = this.state.currentSlide > 0 && target + this.state.slidesToScroll >= this.state.slideCount;\n\n    if (lastSlide && this.props.slideWidth !== 1 && !this.props.wrapAround && this.props.slidesToScroll === 'auto') {\n      left = this.state.slideWidth * this.state.slideCount - this.state.frameWidth;\n      offset = 0;\n      offset -= this.props.cellSpacing * (this.state.slideCount - 1);\n    }\n\n    offset -= touchOffset || 0;\n    return (left - offset) * -1;\n  }\n\n  getOffsetDeltas() {\n    let offset = 0;\n\n    if (this.state.isWrappingAround) {\n      offset = this.getTargetLeft(null, this.state.wrapToIndex);\n    } else {\n      offset = this.getTargetLeft(this.touchObject.length * this.touchObject.direction);\n    }\n\n    return {\n      tx: [this.props.vertical ? 0 : offset],\n      ty: [this.props.vertical ? offset : 0]\n    };\n  }\n\n  isEdgeSwiping() {\n    const {\n      slideCount,\n      slideWidth,\n      slideHeight,\n      slidesToShow\n    } = this.state;\n    const {\n      tx,\n      ty\n    } = this.getOffsetDeltas();\n\n    if (this.props.vertical) {\n      const rowHeight = slideHeight / slidesToShow;\n      const slidesLeftToShow = slideCount - slidesToShow;\n      const lastSlideLimit = rowHeight * slidesLeftToShow; // returns true if ty offset is outside first or last slide\n\n      return ty > 0 || -ty > lastSlideLimit;\n    } // returns true if tx offset is outside first or last slide\n\n\n    return tx > 0 || -tx > slideWidth * (slideCount - 1);\n  } // Action Methods\n\n\n  goToSlide(index, props) {\n    if (props === undefined) {\n      props = this.props;\n    }\n\n    if (this.isTransitioning) {\n      return;\n    }\n\n    this.setState({\n      hasInteraction: true,\n      easing: easing[props.easing]\n    });\n    this.isTransitioning = true;\n    const previousSlide = this.state.currentSlide;\n\n    if (index >= this.state.slideCount || index < 0) {\n      if (!props.wrapAround) {\n        this.isTransitioning = false;\n        return;\n      }\n\n      if (index >= this.state.slideCount) {\n        props.beforeSlide(this.state.currentSlide, 0);\n        this.setState(prevState => ({\n          left: props.vertical ? 0 : this.getTargetLeft(this.state.slideWidth, prevState.currentSlide),\n          top: props.vertical ? this.getTargetLeft(this.state.slideWidth, prevState.currentSlide) : 0,\n          currentSlide: 0,\n          isWrappingAround: true,\n          wrapToIndex: this.state.slideCount\n        }), () => {\n          this.timers.push(setTimeout(() => {\n            this.resetAutoplay();\n            this.isTransitioning = false;\n\n            if (index !== previousSlide) {\n              this.props.afterSlide(0);\n            }\n          }, props.speed));\n        });\n        return;\n      } else {\n        const endSlide = index < 0 ? this.state.slideCount + index : this.state.slideCount - this.state.slidesToScroll;\n        props.beforeSlide(this.state.currentSlide, endSlide);\n        this.setState(prevState => ({\n          left: props.vertical ? 0 : this.getTargetLeft(0, prevState.currentSlide),\n          top: props.vertical ? this.getTargetLeft(0, prevState.currentSlide) : 0,\n          currentSlide: endSlide,\n          isWrappingAround: true,\n          wrapToIndex: index\n        }), () => {\n          this.timers.push(setTimeout(() => {\n            this.resetAutoplay();\n            this.isTransitioning = false;\n\n            if (index !== previousSlide) {\n              this.props.afterSlide(this.state.slideCount - 1);\n            }\n          }, props.speed));\n        });\n        return;\n      }\n    }\n\n    this.props.beforeSlide(this.state.currentSlide, index);\n    this.setState({\n      currentSlide: index\n    }, () => this.timers.push(setTimeout(() => {\n      this.resetAutoplay();\n      this.isTransitioning = false;\n\n      if (index !== previousSlide) {\n        this.props.afterSlide(index);\n      }\n    }, props.speed)));\n  }\n\n  nextSlide() {\n    const childrenCount = this.state.slideCount;\n    let slidesToShow = this.state.slidesToShow;\n\n    if (this.props.slidesToScroll === 'auto') {\n      slidesToShow = this.state.slidesToScroll;\n    }\n\n    if (this.state.currentSlide >= childrenCount - slidesToShow && !this.props.wrapAround && this.props.cellAlign === 'left') {\n      return;\n    }\n\n    if (this.props.wrapAround) {\n      this.goToSlide(this.state.currentSlide + this.state.slidesToScroll);\n    } else {\n      if (this.props.slideWidth !== 1) {\n        this.goToSlide(this.state.currentSlide + this.state.slidesToScroll);\n        return;\n      }\n\n      const offset = this.state.currentSlide + this.state.slidesToScroll;\n      const nextSlideIndex = this.props.cellAlign !== 'left' ? offset : Math.min(offset, childrenCount - slidesToShow);\n      this.goToSlide(nextSlideIndex);\n    }\n  }\n\n  previousSlide() {\n    if (this.state.currentSlide <= 0 && !this.props.wrapAround) {\n      return;\n    }\n\n    if (this.props.wrapAround) {\n      this.goToSlide(this.state.currentSlide - this.state.slidesToScroll);\n    } else {\n      this.goToSlide(Math.max(0, this.state.currentSlide - this.state.slidesToScroll));\n    }\n  } // Bootstrapping\n\n\n  bindEvents() {\n    if (ExecutionEnvironment.canUseDOM) {\n      addEvent(window, 'resize', this.onResize);\n      addEvent(document, 'readystatechange', this.onReadyStateChange);\n      addEvent(document, 'visibilitychange', this.onVisibilityChange);\n      addEvent(document, 'keydown', this.handleKeyPress);\n    }\n  }\n\n  onResize() {\n    this.setDimensions(null, this.props.onResize);\n  }\n\n  onReadyStateChange() {\n    // When using dynamic content in a slide, it is possible that `readystatechange` will fire before the component has finished mounting, which means `this.state.slideHeight` remains 0, instead of the correct height. Tracking this in state will trigger `componentDidUpdate` which can set the correct height.\n    // See #521 and https://github.com/FormidableLabs/nuka-carousel/blob/fea63242a8b2fb69c65689efe615d0feb9b2d1ff/README.md#resizing-height-issue\n    this.setState({\n      readyStateChanged: this.state.readyStateChanged + 1\n    });\n    this.setDimensions();\n  }\n\n  onVisibilityChange() {\n    if (document.hidden) {\n      this.pauseAutoplay();\n    } else {\n      this.unpauseAutoplay();\n    }\n  }\n\n  unbindEvents() {\n    if (ExecutionEnvironment.canUseDOM) {\n      removeEvent(window, 'resize', this.onResize);\n      removeEvent(document, 'readystatechange', this.onReadyStateChange);\n      removeEvent(document, 'visibilitychange', this.onVisibilityChange);\n      removeEvent(document, 'keydown', this.handleKeyPress);\n    }\n  }\n\n  calcSlideHeightAndWidth(props) {\n    // slide height\n    props = props || this.props;\n    const childNodes = this.getChildNodes();\n    const slideHeight = getSlideHeight(props, this.state, childNodes); //slide width\n\n    const {\n      slidesToShow\n    } = getPropsByTransitionMode(props, ['slidesToShow']);\n    const frame = this.frame;\n    let slideWidth;\n\n    if (this.props.animation === 'zoom') {\n      slideWidth = frame.offsetWidth - frame.offsetWidth * 15 / 100;\n    } else if (typeof props.slideWidth !== 'number') {\n      slideWidth = parseInt(props.slideWidth);\n    } else if (props.vertical) {\n      slideWidth = slideHeight / slidesToShow * props.slideWidth;\n    } else {\n      slideWidth = frame.offsetWidth / slidesToShow * props.slideWidth;\n    }\n\n    if (!props.vertical) {\n      slideWidth -= props.cellSpacing * ((100 - 100 / slidesToShow) / 100);\n    }\n\n    return {\n      slideHeight,\n      slideWidth\n    };\n  }\n\n  setSlideHeightAndWidth() {\n    const {\n      slideWidth,\n      slideHeight\n    } = this.calcSlideHeightAndWidth();\n\n    if (slideWidth !== this.state.slideWidth || slideHeight !== this.state.slideHeight) {\n      this.setState({\n        slideWidth,\n        slideHeight\n      });\n    }\n  }\n\n  setDimensions(props, stateCb = () => {}) {\n    props = props || this.props;\n    const {\n      slidesToShow,\n      cellAlign\n    } = getPropsByTransitionMode(props, ['slidesToShow', 'cellAlign']);\n    const frame = this.frame;\n    const {\n      slideHeight,\n      slideWidth\n    } = this.calcSlideHeightAndWidth(props);\n    const frameHeight = slideHeight + props.cellSpacing * (slidesToShow - 1);\n    const frameWidth = props.vertical ? frameHeight : frame.offsetWidth;\n    let {\n      slidesToScroll\n    } = getPropsByTransitionMode(props, ['slidesToScroll']);\n\n    if (slidesToScroll === 'auto') {\n      slidesToScroll = Math.floor(frameWidth / (slideWidth + props.cellSpacing));\n    }\n\n    this.setState({\n      frameWidth,\n      slideHeight,\n      slidesToScroll,\n      slidesToShow,\n      slideWidth,\n      cellAlign,\n      left: props.vertical ? 0 : this.getTargetLeft(),\n      top: props.vertical ? this.getTargetLeft() : 0\n    }, () => {\n      stateCb();\n      this.setLeft();\n    });\n  }\n\n  getChildNodes() {\n    return this.frame.childNodes[0].childNodes;\n  }\n\n  getCurrentChildNodeImg() {\n    const childNodes = this.getChildNodes();\n    const currentChildNode = childNodes[this.props.slideIndex];\n    return currentChildNode ? currentChildNode.getElementsByTagName('img')[0] : null;\n  }\n\n  setLeft() {\n    const newLeft = this.props.vertical ? 0 : this.getTargetLeft();\n    const newTop = this.props.vertical ? this.getTargetLeft() : 0;\n\n    if (newLeft !== this.state.left || newTop !== this.state.top) {\n      this.setState({\n        left: newLeft,\n        top: newTop\n      });\n    }\n  }\n\n  renderControls() {\n    if (this.props.withoutControls) {\n      return this.controlsMap.map(() => null);\n    } else {\n      return this.controlsMap.map(({\n        funcName,\n        key\n      }) => {\n        const func = this.props[funcName];\n        const controlChildren = func && typeof func === 'function' && func({\n          cellAlign: this.props.cellAlign,\n          cellSpacing: this.props.cellSpacing,\n          currentSlide: this.state.currentSlide,\n          frameWidth: this.state.frameWidth,\n          goToSlide: index => this.goToSlide(index),\n          nextSlide: () => this.nextSlide(),\n          previousSlide: () => this.previousSlide(),\n          slideCount: this.state.slideCount,\n          slidesToScroll: this.state.slidesToScroll,\n          slidesToShow: this.state.slidesToShow,\n          slideWidth: this.state.slideWidth,\n          wrapAround: this.props.wrapAround\n        });\n        return controlChildren && /*#__PURE__*/React.createElement(\"div\", {\n          className: `slider-control-${key.toLowerCase()}`,\n          style: getDecoratorStyles(key),\n          key: key,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1020,\n            columnNumber: 13\n          }\n        }, controlChildren);\n      });\n    }\n  }\n\n  render() {\n    const {\n      currentSlide,\n      slideCount,\n      frameWidth\n    } = this.state;\n    const {\n      frameOverflow,\n      vertical,\n      framePadding,\n      slidesToShow,\n      renderAnnounceSlideMessage,\n      disableAnimation\n    } = this.props;\n    const duration = this.state.dragging || !this.state.dragging && this.state.resetWrapAroundPosition && this.props.wrapAround || disableAnimation || !this.state.hasInteraction ? 0 : this.props.speed;\n    const frameStyles = getFrameStyles(frameOverflow, vertical, framePadding, frameWidth);\n    const touchEvents = this.getTouchEvents();\n    const mouseEvents = this.getMouseEvents();\n    const TransitionControl = Transitions[this.props.transitionMode];\n    const validChildren = getValidChildren(this.props.children);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: ['slider', this.props.className || ''].join(' ').trim(),\n      style: Object.assign({}, getSliderStyles(this.props.width, this.props.height), this.props.style),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1064,\n        columnNumber: 7\n      }\n    }, !this.props.autoplay && /*#__PURE__*/React.createElement(AnnounceSlide, {\n      message: renderAnnounceSlideMessage({\n        currentSlide,\n        slideCount\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1073,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", Object.assign({\n      className: \"slider-frame\",\n      ref: frame => this.frame = frame,\n      style: frameStyles\n    }, touchEvents, mouseEvents, {\n      onClickCapture: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1077,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Animate, {\n      show: true,\n      start: {\n        tx: 0,\n        ty: 0\n      },\n      update: () => {\n        const {\n          tx,\n          ty\n        } = this.getOffsetDeltas();\n\n        if (this.props.disableEdgeSwiping && !this.props.wrapAround && this.isEdgeSwiping()) {\n          return {};\n        } else {\n          return {\n            tx,\n            ty,\n            timing: {\n              duration,\n              ease: this.state.easing\n            },\n            events: {\n              end: () => {\n                const newLeft = this.props.vertical ? 0 : this.getTargetLeft();\n                const newTop = this.props.vertical ? this.getTargetLeft() : 0;\n\n                if (newLeft !== this.state.left || newTop !== this.state.top) {\n                  this.setState({\n                    left: newLeft,\n                    top: newTop,\n                    isWrappingAround: false,\n                    resetWrapAroundPosition: true\n                  }, () => {\n                    this.setState({\n                      resetWrapAroundPosition: false\n                    });\n                  });\n                }\n              }\n            }\n          };\n        }\n      },\n      children: ({\n        tx,\n        ty\n      }) => /*#__PURE__*/React.createElement(TransitionControl, Object.assign({}, getTransitionProps(this.props, this.state), {\n        deltaX: tx,\n        deltaY: ty,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1138,\n          columnNumber: 15\n        }\n      }), addAccessibility(validChildren, slidesToShow, currentSlide)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1085,\n        columnNumber: 11\n      }\n    })), this.renderControls(), this.props.autoGenerateStyleTag && /*#__PURE__*/React.createElement(\"style\", {\n      type: \"text/css\",\n      dangerouslySetInnerHTML: {\n        __html: getImgTagStyles()\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1152,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\nCarousel.propTypes = {\n  afterSlide: PropTypes.func,\n  animation: PropTypes.oneOf(['zoom']),\n  autoGenerateStyleTag: PropTypes.bool,\n  autoplay: PropTypes.bool,\n  autoplayInterval: PropTypes.number,\n  autoplayReverse: PropTypes.bool,\n  beforeSlide: PropTypes.func,\n  cellAlign: PropTypes.oneOf(['left', 'center', 'right']),\n  cellSpacing: PropTypes.number,\n  enableKeyboardControls: PropTypes.bool,\n  disableAnimation: PropTypes.bool,\n  disableEdgeSwiping: PropTypes.bool,\n  dragging: PropTypes.bool,\n  easing: PropTypes.string,\n  edgeEasing: PropTypes.string,\n  frameOverflow: PropTypes.string,\n  framePadding: PropTypes.string,\n  height: PropTypes.string,\n  heightMode: PropTypes.oneOf(['first', 'current', 'max']),\n  initialSlideHeight: PropTypes.number,\n  initialSlideWidth: PropTypes.number,\n  onDragStart: PropTypes.func,\n  onResize: PropTypes.func,\n  pauseOnHover: PropTypes.bool,\n  renderAnnounceSlideMessage: PropTypes.func,\n  renderBottomCenterControls: PropTypes.func,\n  renderBottomLeftControls: PropTypes.func,\n  renderBottomRightControls: PropTypes.func,\n  renderCenterCenterControls: PropTypes.func,\n  renderCenterLeftControls: PropTypes.func,\n  renderCenterRightControls: PropTypes.func,\n  renderTopCenterControls: PropTypes.func,\n  renderTopLeftControls: PropTypes.func,\n  renderTopRightControls: PropTypes.func,\n  slideIndex: PropTypes.number,\n  slideOffset: PropTypes.number,\n  slidesToScroll: PropTypes.oneOfType([PropTypes.number, PropTypes.oneOf(['auto'])]),\n  slidesToShow: PropTypes.number,\n  slideWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  speed: PropTypes.number,\n  swiping: PropTypes.bool,\n  transitionMode: PropTypes.oneOf(['scroll', 'fade', 'scroll3d']),\n  vertical: PropTypes.bool,\n  width: PropTypes.string,\n  withoutControls: PropTypes.bool,\n  wrapAround: PropTypes.bool,\n  opacityScale: PropTypes.number,\n  slideListMargin: PropTypes.number\n};\nCarousel.defaultProps = {\n  afterSlide() {},\n\n  autoGenerateStyleTag: true,\n  autoplay: false,\n  autoplayInterval: 3000,\n  autoplayReverse: false,\n\n  beforeSlide() {},\n\n  cellAlign: 'left',\n  cellSpacing: 0,\n  enableKeyboardControls: false,\n  disableAnimation: false,\n  disableEdgeSwiping: false,\n  dragging: true,\n  easing: 'easeCircleOut',\n  edgeEasing: 'easeElasticOut',\n  frameOverflow: 'hidden',\n  framePadding: '0px',\n  height: 'inherit',\n  heightMode: 'max',\n\n  onDragStart() {},\n\n  onResize() {},\n\n  pauseOnHover: true,\n  renderAnnounceSlideMessage: defaultRenderAnnounceSlideMessage,\n  renderBottomCenterControls: props => /*#__PURE__*/React.createElement(PagingDots, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1239,\n      columnNumber: 40\n    }\n  })),\n  renderCenterLeftControls: props => /*#__PURE__*/React.createElement(PreviousButton, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1240,\n      columnNumber: 38\n    }\n  })),\n  renderCenterRightControls: props => /*#__PURE__*/React.createElement(NextButton, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1241,\n      columnNumber: 39\n    }\n  })),\n  slideIndex: 0,\n  slideOffset: 25,\n  slidesToScroll: 1,\n  slidesToShow: 1,\n  slideWidth: 1,\n  speed: 500,\n  style: {},\n  swiping: true,\n  transitionMode: 'scroll',\n  vertical: false,\n  width: '100%',\n  withoutControls: false,\n  wrapAround: false,\n  slideListMargin: 10\n};\nexport { NextButton, PreviousButton, PagingDots };","map":{"version":3,"sources":["/Users/blackjmxx/Devs/LiskRide/src/components/nuka-carousel/index.js"],"names":["React","PropTypes","ExecutionEnvironment","Animate","easing","PagingDots","PreviousButton","NextButton","Transitions","AnnounceSlide","defaultRenderAnnounceSlideMessage","addEvent","removeEvent","getPropsByTransitionMode","swipeDirection","shouldUpdate","calcSomeInitialState","getImgTagStyles","getDecoratorStyles","getSliderStyles","getFrameStyles","getTransitionProps","addAccessibility","getValidChildren","getSlideHeight","Carousel","Component","constructor","arguments","displayName","clickDisabled","isTransitioning","timers","touchObject","controlsMap","funcName","key","childNodesMutationObs","state","currentSlide","props","slideIndex","dragging","disableAnimation","easeCircleOut","hasInteraction","isWrappingAround","left","resetWrapAroundPosition","slideCount","children","length","top","wrapToIndex","readyStateChanged","autoplayIterator","bind","calcSlideHeightAndWidth","getChildNodes","getMouseEvents","getOffsetDeltas","getTargetLeft","getTouchEvents","goToSlide","handleClick","handleKeyPress","handleMouseOut","handleMouseOver","handleSwipe","nextSlide","onReadyStateChange","onResize","onVisibilityChange","previousSlide","renderControls","resetAutoplay","setDimensions","setLeft","setSlideHeightAndWidth","startAutoplay","stopAutoplay","establishChildNodesMutationObserver","componentDidMount","mounted","bindEvents","autoplay","getlockScrollEvents","lockTouchScroll","UNSAFE_componentWillReceiveProps","nextProps","slideCountChanged","setState","prevState","Math","max","updateDimensions","componentDidUpdate","prevProps","slideChanged","heightModeChanged","heightMode","axisChanged","vertical","image","getCurrentChildNodeImg","addEventListener","removeEventListener","slideHeight","heightMismatches","componentWillUnmount","unbindEvents","disconnectChildNodesMutationObserver","i","clearTimeout","unlockTouchScroll","childNodes","window","MutationObserver","mutations","forEach","observeChildNodeMutation","node","observe","attributes","attributeFilter","attributeOldValue","characterData","characterDataOldValue","childList","subtree","childNodesArray","Array","from","disconnect","blockEvent","e","direction","startX","touches","pageX","startY","pageY","preventDefault","document","passive","swiping","onTouchStart","onTouchEnd","onTouchMove","round","sqrt","pow","onDragStart","endX","endY","onTouchCancel","onMouseOver","onMouseOut","onMouseDown","clientX","clientY","onMouseMove","onMouseUp","undefined","onMouseLeave","pauseAutoplay","autoplayPaused","unpauseAutoplay","pauseOnHover","event","metaKey","shiftKey","altKey","ctrlKey","stopPropagation","nativeEvent","slidesToShow","slidesToScroll","slideWidth","wrapAround","edgeEasing","push","setTimeout","enableKeyboardControls","keyCode","autoplayReverse","autoplayID","setInterval","autoplayInterval","clearInterval","touchOffset","slide","offset","target","cellAlign","cellSpacing","frameWidth","lastSlide","tx","ty","isEdgeSwiping","rowHeight","slidesLeftToShow","lastSlideLimit","index","beforeSlide","afterSlide","speed","endSlide","childrenCount","nextSlideIndex","min","canUseDOM","hidden","frame","animation","offsetWidth","parseInt","stateCb","frameHeight","floor","currentChildNode","getElementsByTagName","newLeft","newTop","withoutControls","map","func","controlChildren","toLowerCase","render","frameOverflow","framePadding","renderAnnounceSlideMessage","duration","frameStyles","touchEvents","mouseEvents","TransitionControl","transitionMode","validChildren","className","join","trim","Object","assign","width","height","style","disableEdgeSwiping","timing","ease","events","end","autoGenerateStyleTag","__html","propTypes","oneOf","bool","number","string","initialSlideHeight","initialSlideWidth","renderBottomCenterControls","renderBottomLeftControls","renderBottomRightControls","renderCenterCenterControls","renderCenterLeftControls","renderCenterRightControls","renderTopCenterControls","renderTopLeftControls","renderTopRightControls","slideOffset","oneOfType","opacityScale","slideListMargin","defaultProps"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ExecutionEnvironment from 'exenv';\nimport Animate from 'react-move/Animate';\nimport * as easing from 'd3-ease';\nimport { PagingDots, PreviousButton, NextButton } from './default-controls';\nimport Transitions from './all-transitions';\nimport AnnounceSlide, {\n  defaultRenderAnnounceSlideMessage\n} from './announce-slide';\nimport {\n  addEvent,\n  removeEvent,\n  getPropsByTransitionMode,\n  swipeDirection,\n  shouldUpdate,\n  calcSomeInitialState\n} from './utilities/utilities';\nimport {\n  getImgTagStyles,\n  getDecoratorStyles,\n  getSliderStyles,\n  getFrameStyles,\n  getTransitionProps\n} from './utilities/style-utilities';\nimport {\n  addAccessibility,\n  getValidChildren,\n  getSlideHeight\n} from './utilities/bootstrapping-utilities';\n\nexport default class Carousel extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.displayName = 'Carousel';\n    this.clickDisabled = false;\n    this.isTransitioning = false;\n    this.timers = [];\n    this.touchObject = {};\n    this.controlsMap = [\n      { funcName: 'renderTopLeftControls', key: 'TopLeft' },\n      { funcName: 'renderTopCenterControls', key: 'TopCenter' },\n      { funcName: 'renderTopRightControls', key: 'TopRight' },\n      { funcName: 'renderCenterLeftControls', key: 'CenterLeft' },\n      { funcName: 'renderCenterCenterControls', key: 'CenterCenter' },\n      { funcName: 'renderCenterRightControls', key: 'CenterRight' },\n      { funcName: 'renderBottomLeftControls', key: 'BottomLeft' },\n      { funcName: 'renderBottomCenterControls', key: 'BottomCenter' },\n      { funcName: 'renderBottomRightControls', key: 'BottomRight' }\n    ];\n    this.childNodesMutationObs = null;\n\n    this.state = {\n      currentSlide: this.props.slideIndex,\n      dragging: false,\n      easing: this.props.disableAnimation ? '' : easing.easeCircleOut,\n      hasInteraction: false, // to remove animation from the initial slide on the page load when non-default slideIndex is used\n      isWrappingAround: false,\n      left: 0,\n      resetWrapAroundPosition: false,\n      slideCount: getValidChildren(this.props.children).length,\n      top: 0,\n      wrapToIndex: null,\n      readyStateChanged: 0,\n      ...calcSomeInitialState(this.props)\n    };\n\n    this.autoplayIterator = this.autoplayIterator.bind(this);\n    this.calcSlideHeightAndWidth = this.calcSlideHeightAndWidth.bind(this);\n    this.getChildNodes = this.getChildNodes.bind(this);\n    this.getMouseEvents = this.getMouseEvents.bind(this);\n    this.getOffsetDeltas = this.getOffsetDeltas.bind(this);\n    this.getTargetLeft = this.getTargetLeft.bind(this);\n    this.getTouchEvents = this.getTouchEvents.bind(this);\n    this.goToSlide = this.goToSlide.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleMouseOut = this.handleMouseOut.bind(this);\n    this.handleMouseOver = this.handleMouseOver.bind(this);\n    this.handleSwipe = this.handleSwipe.bind(this);\n    this.nextSlide = this.nextSlide.bind(this);\n    this.onReadyStateChange = this.onReadyStateChange.bind(this);\n    this.onResize = this.onResize.bind(this);\n    this.onVisibilityChange = this.onVisibilityChange.bind(this);\n    this.previousSlide = this.previousSlide.bind(this);\n    this.renderControls = this.renderControls.bind(this);\n    this.resetAutoplay = this.resetAutoplay.bind(this);\n    this.setDimensions = this.setDimensions.bind(this);\n    this.setLeft = this.setLeft.bind(this);\n    this.setSlideHeightAndWidth = this.setSlideHeightAndWidth.bind(this);\n    this.startAutoplay = this.startAutoplay.bind(this);\n    this.stopAutoplay = this.stopAutoplay.bind(this);\n    this.establishChildNodesMutationObserver = this.establishChildNodesMutationObserver.bind(\n      this\n    );\n  }\n\n  componentDidMount() {\n    // see https://github.com/facebook/react/issues/3417#issuecomment-121649937\n    this.mounted = true;\n    this.setLeft();\n    this.setDimensions();\n    this.bindEvents();\n    this.establishChildNodesMutationObserver();\n    if (this.props.autoplay) {\n      this.startAutoplay();\n    }\n    this.getlockScrollEvents().lockTouchScroll();\n  }\n\n  // @TODO Remove deprecated componentWillReceiveProps with getDerivedStateFromProps\n  // eslint-disable-next-line react/no-deprecated\n  // eslint-disable-next-line camelcase\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const slideCount = getValidChildren(nextProps.children).length;\n    const slideCountChanged = slideCount !== this.state.slideCount;\n    this.setState(prevState => ({\n      slideCount,\n      currentSlide: slideCountChanged\n        ? nextProps.slideIndex\n        : prevState.currentSlide\n    }));\n\n    if (slideCount <= this.state.currentSlide) {\n      this.goToSlide(Math.max(slideCount - 1, 0), nextProps);\n    }\n\n    const updateDimensions =\n      slideCountChanged ||\n      shouldUpdate(this.props, nextProps, [\n        'cellSpacing',\n        'vertical',\n        'slideWidth',\n        'slideHeight',\n        'heightMode',\n        'slidesToScroll',\n        'slidesToShow',\n        'transitionMode',\n        'cellAlign'\n      ]);\n\n    if (updateDimensions) {\n      this.setDimensions(nextProps);\n    }\n\n    if (\n      this.props.slideIndex !== nextProps.slideIndex &&\n      nextProps.slideIndex !== this.state.currentSlide &&\n      !this.state.isWrappingAround\n    ) {\n      this.goToSlide(nextProps.slideIndex, this.props);\n    }\n\n    if (this.props.autoplay !== nextProps.autoplay) {\n      if (nextProps.autoplay) {\n        this.startAutoplay();\n      } else {\n        this.stopAutoplay();\n      }\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const slideChanged = prevState.currentSlide !== this.state.currentSlide;\n    const heightModeChanged = prevProps.heightMode !== this.props.heightMode;\n    const axisChanged = prevProps.vertical !== this.props.vertical;\n    if (axisChanged) {\n      this.onResize();\n    } else if (slideChanged || heightModeChanged) {\n      const image = this.getCurrentChildNodeImg();\n      if (image) {\n        image.addEventListener('load', this.setSlideHeightAndWidth);\n        image.removeEventListener('load', this.setSlideHeightAndWidth);\n      } else {\n        this.setSlideHeightAndWidth();\n      }\n    }\n\n    const { slideHeight } = this.calcSlideHeightAndWidth();\n    const heightMismatches = slideHeight !== prevState.slideHeight;\n    // When using dynamic content in a slide, it is possible for the slide height to be inaccurate. Here, double check that the height is correct once the component has mounted and the `readyStateChange` event has fired.\n    // See #521 and https://github.com/FormidableLabs/nuka-carousel/blob/fea63242a8b2fb69c65689efe615d0feb9b2d1ff/README.md#resizing-height-issue\n    if (this.mounted && prevState.readyStateChanged > 0 && heightMismatches) {\n      this.setDimensions();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unbindEvents();\n    this.disconnectChildNodesMutationObserver();\n    this.stopAutoplay();\n    // see https://github.com/facebook/react/issues/3417#issuecomment-121649937\n    this.mounted = false;\n    for (let i = 0; i < this.timers.length; i++) {\n      clearTimeout(this.timers[i]);\n    }\n    this.getlockScrollEvents().unlockTouchScroll();\n  }\n\n  establishChildNodesMutationObserver() {\n    const childNodes = this.getChildNodes();\n    if (childNodes.length && 'MutationObserver' in window) {\n      this.childNodesMutationObs = new MutationObserver(mutations => {\n        mutations.forEach(() => {\n          this.setSlideHeightAndWidth();\n        });\n      });\n\n      const observeChildNodeMutation = node => {\n        this.childNodesMutationObs.observe(node, {\n          attributes: true,\n          attributeFilter: ['style'],\n          attributeOldValue: false,\n          characterData: false,\n          characterDataOldValue: false,\n          childList: false,\n          subtree: false\n        });\n      };\n\n      const childNodesArray = Array.from(childNodes);\n\n      for (const node of childNodesArray) {\n        observeChildNodeMutation(node);\n      }\n    }\n  }\n\n  disconnectChildNodesMutationObserver() {\n    if (this.childNodesMutationObs instanceof MutationObserver) {\n      this.childNodesMutationObs.disconnect();\n    }\n  }\n\n  getlockScrollEvents() {\n    const blockEvent = e => {\n      if (this.state.dragging) {\n        const direction = swipeDirection(\n          this.touchObject.startX,\n          e.touches[0].pageX,\n          this.touchObject.startY,\n          e.touches[0].pageY,\n          this.props.vertical\n        );\n        if (direction !== 0) {\n          e.preventDefault();\n        }\n      }\n    };\n\n    const lockTouchScroll = () => {\n      document.addEventListener('touchmove', blockEvent, {\n        passive: false\n      });\n    };\n\n    const unlockTouchScroll = () => {\n      document.addEventListener('touchmove', blockEvent, {\n        passive: false\n      });\n    };\n\n    return {\n      lockTouchScroll,\n      unlockTouchScroll\n    };\n  }\n\n  getTouchEvents() {\n    if (this.props.swiping === false) {\n      return {\n        onTouchStart: this.handleMouseOver,\n        onTouchEnd: this.handleMouseOut\n      };\n    }\n\n    return {\n      onTouchStart: e => {\n        this.touchObject = {\n          startX: e.touches[0].pageX,\n          startY: e.touches[0].pageY\n        };\n        this.handleMouseOver();\n\n        this.setState({\n          dragging: true\n        });\n      },\n      onTouchMove: e => {\n        const direction = swipeDirection(\n          this.touchObject.startX,\n          e.touches[0].pageX,\n          this.touchObject.startY,\n          e.touches[0].pageY,\n          this.props.vertical\n        );\n\n        if (direction !== 0) {\n          e.preventDefault();\n        }\n\n        const length = this.props.vertical\n          ? Math.round(\n              Math.sqrt(\n                Math.pow(e.touches[0].pageY - this.touchObject.startY, 2)\n              )\n            )\n          : Math.round(\n              Math.sqrt(\n                Math.pow(e.touches[0].pageX - this.touchObject.startX, 2)\n              )\n            );\n\n        if (length >= 10) {\n          if (this.clickDisabled === false) this.props.onDragStart(e);\n          this.clickDisabled = true;\n        }\n\n        this.touchObject = {\n          startX: this.touchObject.startX,\n          startY: this.touchObject.startY,\n          endX: e.touches[0].pageX,\n          endY: e.touches[0].pageY,\n          length,\n          direction\n        };\n\n        this.setState({\n          left: this.props.vertical\n            ? 0\n            : this.getTargetLeft(\n                this.touchObject.length * this.touchObject.direction\n              ),\n          top: this.props.vertical\n            ? this.getTargetLeft(\n                this.touchObject.length * this.touchObject.direction\n              )\n            : 0\n        });\n      },\n      onTouchEnd: e => {\n        this.handleSwipe(e);\n        this.handleMouseOut();\n      },\n      onTouchCancel: e => {\n        this.handleSwipe(e);\n      }\n    };\n  }\n\n  getMouseEvents() {\n    if (this.props.dragging === false) {\n      return {\n        onMouseOver: this.handleMouseOver,\n\n        onMouseOut: this.handleMouseOut\n      };\n    }\n\n    return {\n      onMouseOver: this.handleMouseOver,\n\n      onMouseOut: this.handleMouseOut,\n\n      onMouseDown: e => {\n        if (e.preventDefault) {\n          e.preventDefault();\n        }\n\n        this.touchObject = {\n          startX: e.clientX,\n          startY: e.clientY\n        };\n\n        this.setState({\n          dragging: true\n        });\n      },\n\n      onMouseMove: e => {\n        if (!this.state.dragging) {\n          return;\n        }\n\n        const direction = swipeDirection(\n          this.touchObject.startX,\n          e.clientX,\n          this.touchObject.startY,\n          e.clientY,\n          this.props.vertical\n        );\n\n        if (direction !== 0) {\n          e.preventDefault();\n        }\n\n        const length = this.props.vertical\n          ? Math.round(\n              Math.sqrt(Math.pow(e.clientY - this.touchObject.startY, 2))\n            )\n          : Math.round(\n              Math.sqrt(Math.pow(e.clientX - this.touchObject.startX, 2))\n            );\n\n        // prevents disabling click just because mouse moves a fraction of a pixel\n        if (length >= 10) {\n          if (this.clickDisabled === false) this.props.onDragStart(e);\n          this.clickDisabled = true;\n        }\n\n        this.touchObject = {\n          startX: this.touchObject.startX,\n          startY: this.touchObject.startY,\n          endX: e.clientX,\n          endY: e.clientY,\n          length,\n          direction\n        };\n\n        this.setState({\n          left: this.props.vertical\n            ? 0\n            : this.getTargetLeft(\n                this.touchObject.length * this.touchObject.direction\n              ),\n          top: this.props.vertical\n            ? this.getTargetLeft(\n                this.touchObject.length * this.touchObject.direction\n              )\n            : 0\n        });\n      },\n\n      onMouseUp: e => {\n        if (\n          this.touchObject.length === 0 ||\n          this.touchObject.length === undefined\n        ) {\n          this.setState({ dragging: false });\n          return;\n        }\n\n        this.handleSwipe(e);\n      },\n\n      onMouseLeave: e => {\n        if (!this.state.dragging) {\n          return;\n        }\n\n        this.handleSwipe(e);\n      }\n    };\n  }\n\n  pauseAutoplay() {\n    if (this.props.autoplay) {\n      this.autoplayPaused = true;\n      this.stopAutoplay();\n    }\n  }\n\n  unpauseAutoplay() {\n    if (this.props.autoplay && this.autoplayPaused) {\n      this.startAutoplay();\n      this.autoplayPaused = null;\n    }\n  }\n\n  handleMouseOver() {\n    if (this.props.pauseOnHover) {\n      this.pauseAutoplay();\n    }\n  }\n\n  handleMouseOut() {\n    if (this.autoplayPaused) {\n      this.unpauseAutoplay();\n    }\n  }\n\n  handleClick(event) {\n    if (this.clickDisabled === true) {\n      if (event.metaKey || event.shiftKey || event.altKey || event.ctrlKey) {\n        return;\n      }\n      event.preventDefault();\n      event.stopPropagation();\n\n      if (event.nativeEvent) {\n        event.nativeEvent.stopPropagation();\n      }\n    }\n  }\n\n  handleSwipe() {\n    let slidesToShow = this.state.slidesToShow;\n    if (this.props.slidesToScroll === 'auto') {\n      slidesToShow = this.state.slidesToScroll;\n    }\n\n    if (this.touchObject.length > this.state.slideWidth / slidesToShow / 5) {\n      if (this.touchObject.direction === 1) {\n        if (\n          this.state.currentSlide + 1 >= this.state.slideCount &&\n          !this.props.wrapAround\n        ) {\n          this.setState({ easing: easing[this.props.edgeEasing] });\n        } else {\n          this.nextSlide();\n        }\n      } else if (this.touchObject.direction === -1) {\n        if (this.state.currentSlide <= 0 && !this.props.wrapAround) {\n          this.setState({ easing: easing[this.props.edgeEasing] });\n        } else {\n          this.previousSlide();\n        }\n      }\n    } else {\n      this.goToSlide(this.state.currentSlide);\n    }\n\n    // wait for `handleClick` event before resetting clickDisabled\n    this.timers.push(\n      setTimeout(() => {\n        this.clickDisabled = false;\n      }, 0)\n    );\n    this.touchObject = {};\n\n    this.setState({\n      dragging: false\n    });\n  }\n  // eslint-disable-next-line complexity\n  handleKeyPress(e) {\n    if (this.props.enableKeyboardControls) {\n      switch (e.keyCode) {\n        case 39:\n        case 68:\n        case 38:\n        case 87:\n          this.nextSlide();\n          break;\n        case 37:\n        case 65:\n        case 40:\n        case 83:\n          this.previousSlide();\n          break;\n        case 81:\n          this.goToSlide(0, this.props);\n          break;\n        case 69:\n          this.goToSlide(this.state.slideCount - 1, this.props);\n          break;\n        case 32:\n          if (this.state.pauseOnHover && this.props.autoplay) {\n            this.setState({ pauseOnHover: false });\n            this.pauseAutoplay();\n            break;\n          } else {\n            this.setState({ pauseOnHover: true });\n            this.unpauseAutoplay();\n            break;\n          }\n      }\n    }\n  }\n\n  autoplayIterator() {\n    if (this.props.wrapAround) {\n      if (this.props.autoplayReverse) {\n        this.previousSlide();\n      } else {\n        this.nextSlide();\n      }\n      return;\n    }\n    if (this.props.autoplayReverse) {\n      if (this.state.currentSlide !== 0) {\n        this.previousSlide();\n      } else {\n        this.stopAutoplay();\n      }\n    } else if (\n      this.state.currentSlide !==\n      this.state.slideCount - this.state.slidesToShow\n    ) {\n      this.nextSlide();\n    } else {\n      this.stopAutoplay();\n    }\n  }\n\n  startAutoplay() {\n    this.autoplayID = setInterval(\n      this.autoplayIterator,\n      this.props.autoplayInterval\n    );\n  }\n\n  resetAutoplay() {\n    if (this.props.autoplay && !this.autoplayPaused) {\n      this.stopAutoplay();\n      this.startAutoplay();\n    }\n  }\n\n  stopAutoplay() {\n    if (this.autoplayID) {\n      clearInterval(this.autoplayID);\n    }\n  }\n\n  // Animation Method\n\n  getTargetLeft(touchOffset, slide) {\n    let offset;\n    const target = slide || this.state.currentSlide;\n    switch (this.state.cellAlign) {\n      case 'left': {\n        offset = 0;\n        offset -= this.props.cellSpacing * target;\n        break;\n      }\n      case 'center': {\n        offset = (this.state.frameWidth - this.state.slideWidth) / 2;\n        offset -= this.props.cellSpacing * target;\n        break;\n      }\n      case 'right': {\n        offset = this.state.frameWidth - this.state.slideWidth;\n        offset -= this.props.cellSpacing * target;\n        break;\n      }\n    }\n\n    let left = this.state.slideWidth * target;\n\n    const lastSlide =\n      this.state.currentSlide > 0 &&\n      target + this.state.slidesToScroll >= this.state.slideCount;\n\n    if (\n      lastSlide &&\n      this.props.slideWidth !== 1 &&\n      !this.props.wrapAround &&\n      this.props.slidesToScroll === 'auto'\n    ) {\n      left =\n        this.state.slideWidth * this.state.slideCount - this.state.frameWidth;\n      offset = 0;\n      offset -= this.props.cellSpacing * (this.state.slideCount - 1);\n    }\n\n    offset -= touchOffset || 0;\n\n    return (left - offset) * -1;\n  }\n\n  getOffsetDeltas() {\n    let offset = 0;\n\n    if (this.state.isWrappingAround) {\n      offset = this.getTargetLeft(null, this.state.wrapToIndex);\n    } else {\n      offset = this.getTargetLeft(\n        this.touchObject.length * this.touchObject.direction\n      );\n    }\n\n    return {\n      tx: [this.props.vertical ? 0 : offset],\n      ty: [this.props.vertical ? offset : 0]\n    };\n  }\n\n  isEdgeSwiping() {\n    const { slideCount, slideWidth, slideHeight, slidesToShow } = this.state;\n    const { tx, ty } = this.getOffsetDeltas();\n    if (this.props.vertical) {\n      const rowHeight = slideHeight / slidesToShow;\n      const slidesLeftToShow = slideCount - slidesToShow;\n      const lastSlideLimit = rowHeight * slidesLeftToShow;\n\n      // returns true if ty offset is outside first or last slide\n      return ty > 0 || -ty > lastSlideLimit;\n    }\n\n    // returns true if tx offset is outside first or last slide\n    return tx > 0 || -tx > slideWidth * (slideCount - 1);\n  }\n\n  // Action Methods\n\n  goToSlide(index, props) {\n    if (props === undefined) {\n      props = this.props;\n    }\n\n    if (this.isTransitioning) {\n      return;\n    }\n\n    this.setState({ hasInteraction: true, easing: easing[props.easing] });\n    this.isTransitioning = true;\n    const previousSlide = this.state.currentSlide;\n\n    if (index >= this.state.slideCount || index < 0) {\n      if (!props.wrapAround) {\n        this.isTransitioning = false;\n        return;\n      }\n      if (index >= this.state.slideCount) {\n        props.beforeSlide(this.state.currentSlide, 0);\n        this.setState(\n          prevState => ({\n            left: props.vertical\n              ? 0\n              : this.getTargetLeft(\n                  this.state.slideWidth,\n                  prevState.currentSlide\n                ),\n            top: props.vertical\n              ? this.getTargetLeft(\n                  this.state.slideWidth,\n                  prevState.currentSlide\n                )\n              : 0,\n            currentSlide: 0,\n            isWrappingAround: true,\n            wrapToIndex: this.state.slideCount\n          }),\n          () => {\n            this.timers.push(\n              setTimeout(() => {\n                this.resetAutoplay();\n                this.isTransitioning = false;\n                if (index !== previousSlide) {\n                  this.props.afterSlide(0);\n                }\n              }, props.speed)\n            );\n          }\n        );\n        return;\n      } else {\n        const endSlide =\n          index < 0\n            ? this.state.slideCount + index\n            : this.state.slideCount - this.state.slidesToScroll;\n        props.beforeSlide(this.state.currentSlide, endSlide);\n        this.setState(\n          prevState => ({\n            left: props.vertical\n              ? 0\n              : this.getTargetLeft(0, prevState.currentSlide),\n            top: props.vertical\n              ? this.getTargetLeft(0, prevState.currentSlide)\n              : 0,\n            currentSlide: endSlide,\n            isWrappingAround: true,\n            wrapToIndex: index\n          }),\n          () => {\n            this.timers.push(\n              setTimeout(() => {\n                this.resetAutoplay();\n                this.isTransitioning = false;\n                if (index !== previousSlide) {\n                  this.props.afterSlide(this.state.slideCount - 1);\n                }\n              }, props.speed)\n            );\n          }\n        );\n        return;\n      }\n    }\n\n    this.props.beforeSlide(this.state.currentSlide, index);\n\n    this.setState(\n      {\n        currentSlide: index\n      },\n      () =>\n        this.timers.push(\n          setTimeout(() => {\n            this.resetAutoplay();\n            this.isTransitioning = false;\n            if (index !== previousSlide) {\n              this.props.afterSlide(index);\n            }\n          }, props.speed)\n        )\n    );\n  }\n\n  nextSlide() {\n    const childrenCount = this.state.slideCount;\n    let slidesToShow = this.state.slidesToShow;\n\n    if (this.props.slidesToScroll === 'auto') {\n      slidesToShow = this.state.slidesToScroll;\n    }\n\n    if (\n      this.state.currentSlide >= childrenCount - slidesToShow &&\n      !this.props.wrapAround &&\n      this.props.cellAlign === 'left'\n    ) {\n      return;\n    }\n\n    if (this.props.wrapAround) {\n      this.goToSlide(this.state.currentSlide + this.state.slidesToScroll);\n    } else {\n      if (this.props.slideWidth !== 1) {\n        this.goToSlide(this.state.currentSlide + this.state.slidesToScroll);\n        return;\n      }\n      const offset = this.state.currentSlide + this.state.slidesToScroll;\n      const nextSlideIndex =\n        this.props.cellAlign !== 'left'\n          ? offset\n          : Math.min(offset, childrenCount - slidesToShow);\n      this.goToSlide(nextSlideIndex);\n    }\n  }\n\n  previousSlide() {\n    if (this.state.currentSlide <= 0 && !this.props.wrapAround) {\n      return;\n    }\n\n    if (this.props.wrapAround) {\n      this.goToSlide(this.state.currentSlide - this.state.slidesToScroll);\n    } else {\n      this.goToSlide(\n        Math.max(0, this.state.currentSlide - this.state.slidesToScroll)\n      );\n    }\n  }\n\n  // Bootstrapping\n\n  bindEvents() {\n    if (ExecutionEnvironment.canUseDOM) {\n      addEvent(window, 'resize', this.onResize);\n      addEvent(document, 'readystatechange', this.onReadyStateChange);\n      addEvent(document, 'visibilitychange', this.onVisibilityChange);\n      addEvent(document, 'keydown', this.handleKeyPress);\n    }\n  }\n\n  onResize() {\n    this.setDimensions(null, this.props.onResize);\n  }\n\n  onReadyStateChange() {\n    // When using dynamic content in a slide, it is possible that `readystatechange` will fire before the component has finished mounting, which means `this.state.slideHeight` remains 0, instead of the correct height. Tracking this in state will trigger `componentDidUpdate` which can set the correct height.\n    // See #521 and https://github.com/FormidableLabs/nuka-carousel/blob/fea63242a8b2fb69c65689efe615d0feb9b2d1ff/README.md#resizing-height-issue\n    this.setState({\n      readyStateChanged: this.state.readyStateChanged + 1\n    });\n    this.setDimensions();\n  }\n\n  onVisibilityChange() {\n    if (document.hidden) {\n      this.pauseAutoplay();\n    } else {\n      this.unpauseAutoplay();\n    }\n  }\n\n  unbindEvents() {\n    if (ExecutionEnvironment.canUseDOM) {\n      removeEvent(window, 'resize', this.onResize);\n      removeEvent(document, 'readystatechange', this.onReadyStateChange);\n      removeEvent(document, 'visibilitychange', this.onVisibilityChange);\n      removeEvent(document, 'keydown', this.handleKeyPress);\n    }\n  }\n\n  calcSlideHeightAndWidth(props) {\n    // slide height\n    props = props || this.props;\n    const childNodes = this.getChildNodes();\n    const slideHeight = getSlideHeight(props, this.state, childNodes);\n\n    //slide width\n    const { slidesToShow } = getPropsByTransitionMode(props, ['slidesToShow']);\n    const frame = this.frame;\n    let slideWidth;\n\n    if (this.props.animation === 'zoom') {\n      slideWidth = frame.offsetWidth - (frame.offsetWidth * 15) / 100;\n    } else if (typeof props.slideWidth !== 'number') {\n      slideWidth = parseInt(props.slideWidth);\n    } else if (props.vertical) {\n      slideWidth = (slideHeight / slidesToShow) * props.slideWidth;\n    } else {\n      slideWidth = (frame.offsetWidth / slidesToShow) * props.slideWidth;\n    }\n\n    if (!props.vertical) {\n      slideWidth -= props.cellSpacing * ((100 - 100 / slidesToShow) / 100);\n    }\n\n    return { slideHeight, slideWidth };\n  }\n\n  setSlideHeightAndWidth() {\n    const { slideWidth, slideHeight } = this.calcSlideHeightAndWidth();\n    if (\n      slideWidth !== this.state.slideWidth ||\n      slideHeight !== this.state.slideHeight\n    ) {\n      this.setState({ slideWidth, slideHeight });\n    }\n  }\n\n  setDimensions(props, stateCb = () => {}) {\n    props = props || this.props;\n\n    const { slidesToShow, cellAlign } = getPropsByTransitionMode(props, [\n      'slidesToShow',\n      'cellAlign'\n    ]);\n\n    const frame = this.frame;\n    const { slideHeight, slideWidth } = this.calcSlideHeightAndWidth(props);\n\n    const frameHeight = slideHeight + props.cellSpacing * (slidesToShow - 1);\n    const frameWidth = props.vertical ? frameHeight : frame.offsetWidth;\n\n    let { slidesToScroll } = getPropsByTransitionMode(props, [\n      'slidesToScroll'\n    ]);\n\n    if (slidesToScroll === 'auto') {\n      slidesToScroll = Math.floor(\n        frameWidth / (slideWidth + props.cellSpacing)\n      );\n    }\n\n    this.setState(\n      {\n        frameWidth,\n        slideHeight,\n        slidesToScroll,\n        slidesToShow,\n        slideWidth,\n        cellAlign,\n        left: props.vertical ? 0 : this.getTargetLeft(),\n        top: props.vertical ? this.getTargetLeft() : 0\n      },\n      () => {\n        stateCb();\n        this.setLeft();\n      }\n    );\n  }\n\n  getChildNodes() {\n    return this.frame.childNodes[0].childNodes;\n  }\n\n  getCurrentChildNodeImg() {\n    const childNodes = this.getChildNodes();\n    const currentChildNode = childNodes[this.props.slideIndex];\n    return currentChildNode\n      ? currentChildNode.getElementsByTagName('img')[0]\n      : null;\n  }\n\n  setLeft() {\n    const newLeft = this.props.vertical ? 0 : this.getTargetLeft();\n    const newTop = this.props.vertical ? this.getTargetLeft() : 0;\n\n    if (newLeft !== this.state.left || newTop !== this.state.top) {\n      this.setState({\n        left: newLeft,\n        top: newTop\n      });\n    }\n  }\n\n  renderControls() {\n    if (this.props.withoutControls) {\n      return this.controlsMap.map(() => null);\n    } else {\n      return this.controlsMap.map(({ funcName, key }) => {\n        const func = this.props[funcName];\n        const controlChildren =\n          func &&\n          typeof func === 'function' &&\n          func({\n            cellAlign: this.props.cellAlign,\n            cellSpacing: this.props.cellSpacing,\n            currentSlide: this.state.currentSlide,\n            frameWidth: this.state.frameWidth,\n            goToSlide: index => this.goToSlide(index),\n            nextSlide: () => this.nextSlide(),\n            previousSlide: () => this.previousSlide(),\n            slideCount: this.state.slideCount,\n            slidesToScroll: this.state.slidesToScroll,\n            slidesToShow: this.state.slidesToShow,\n            slideWidth: this.state.slideWidth,\n            wrapAround: this.props.wrapAround\n          });\n\n        return (\n          controlChildren && (\n            <div\n              className={`slider-control-${key.toLowerCase()}`}\n              style={getDecoratorStyles(key)}\n              key={key}\n            >\n              {controlChildren}\n            </div>\n          )\n        );\n      });\n    }\n  }\n  render() {\n    const { currentSlide, slideCount, frameWidth } = this.state;\n    const {\n      frameOverflow,\n      vertical,\n      framePadding,\n      slidesToShow,\n      renderAnnounceSlideMessage,\n      disableAnimation\n    } = this.props;\n    const duration =\n      this.state.dragging ||\n      (!this.state.dragging &&\n        this.state.resetWrapAroundPosition &&\n        this.props.wrapAround) ||\n      disableAnimation ||\n      !this.state.hasInteraction\n        ? 0\n        : this.props.speed;\n\n    const frameStyles = getFrameStyles(\n      frameOverflow,\n      vertical,\n      framePadding,\n      frameWidth\n    );\n    const touchEvents = this.getTouchEvents();\n    const mouseEvents = this.getMouseEvents();\n    const TransitionControl = Transitions[this.props.transitionMode];\n    const validChildren = getValidChildren(this.props.children);\n\n    return (\n      <div\n        className={['slider', this.props.className || ''].join(' ').trim()}\n        style={Object.assign(\n          {},\n          getSliderStyles(this.props.width, this.props.height),\n          this.props.style\n        )}\n      >\n        {!this.props.autoplay && (\n          <AnnounceSlide\n            message={renderAnnounceSlideMessage({ currentSlide, slideCount })}\n          />\n        )}\n        <div\n          className=\"slider-frame\"\n          ref={frame => (this.frame = frame)}\n          style={frameStyles}\n          {...touchEvents}\n          {...mouseEvents}\n          onClickCapture={this.handleClick}\n        >\n          <Animate\n            show\n            start={{ tx: 0, ty: 0 }}\n            update={() => {\n              const { tx, ty } = this.getOffsetDeltas();\n\n              if (\n                this.props.disableEdgeSwiping &&\n                !this.props.wrapAround &&\n                this.isEdgeSwiping()\n              ) {\n                return {};\n              } else {\n                return {\n                  tx,\n                  ty,\n                  timing: {\n                    duration,\n                    ease: this.state.easing\n                  },\n                  events: {\n                    end: () => {\n                      const newLeft = this.props.vertical\n                        ? 0\n                        : this.getTargetLeft();\n                      const newTop = this.props.vertical\n                        ? this.getTargetLeft()\n                        : 0;\n\n                      if (\n                        newLeft !== this.state.left ||\n                        newTop !== this.state.top\n                      ) {\n                        this.setState(\n                          {\n                            left: newLeft,\n                            top: newTop,\n                            isWrappingAround: false,\n                            resetWrapAroundPosition: true\n                          },\n                          () => {\n                            this.setState({\n                              resetWrapAroundPosition: false\n                            });\n                          }\n                        );\n                      }\n                    }\n                  }\n                };\n              }\n            }}\n            children={({ tx, ty }) => (\n              <TransitionControl\n                {...getTransitionProps(this.props, this.state)}\n                deltaX={tx}\n                deltaY={ty}\n              >\n                {addAccessibility(validChildren, slidesToShow, currentSlide)}\n              </TransitionControl>\n            )}\n          />\n        </div>\n\n        {this.renderControls()}\n\n        {this.props.autoGenerateStyleTag && (\n          <style\n            type=\"text/css\"\n            dangerouslySetInnerHTML={{ __html: getImgTagStyles() }}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nCarousel.propTypes = {\n  afterSlide: PropTypes.func,\n  animation: PropTypes.oneOf(['zoom']),\n  autoGenerateStyleTag: PropTypes.bool,\n  autoplay: PropTypes.bool,\n  autoplayInterval: PropTypes.number,\n  autoplayReverse: PropTypes.bool,\n  beforeSlide: PropTypes.func,\n  cellAlign: PropTypes.oneOf(['left', 'center', 'right']),\n  cellSpacing: PropTypes.number,\n  enableKeyboardControls: PropTypes.bool,\n  disableAnimation: PropTypes.bool,\n  disableEdgeSwiping: PropTypes.bool,\n  dragging: PropTypes.bool,\n  easing: PropTypes.string,\n  edgeEasing: PropTypes.string,\n  frameOverflow: PropTypes.string,\n  framePadding: PropTypes.string,\n  height: PropTypes.string,\n  heightMode: PropTypes.oneOf(['first', 'current', 'max']),\n  initialSlideHeight: PropTypes.number,\n  initialSlideWidth: PropTypes.number,\n  onDragStart: PropTypes.func,\n  onResize: PropTypes.func,\n  pauseOnHover: PropTypes.bool,\n  renderAnnounceSlideMessage: PropTypes.func,\n  renderBottomCenterControls: PropTypes.func,\n  renderBottomLeftControls: PropTypes.func,\n  renderBottomRightControls: PropTypes.func,\n  renderCenterCenterControls: PropTypes.func,\n  renderCenterLeftControls: PropTypes.func,\n  renderCenterRightControls: PropTypes.func,\n  renderTopCenterControls: PropTypes.func,\n  renderTopLeftControls: PropTypes.func,\n  renderTopRightControls: PropTypes.func,\n  slideIndex: PropTypes.number,\n  slideOffset: PropTypes.number,\n  slidesToScroll: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.oneOf(['auto'])\n  ]),\n  slidesToShow: PropTypes.number,\n  slideWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  speed: PropTypes.number,\n  swiping: PropTypes.bool,\n  transitionMode: PropTypes.oneOf(['scroll', 'fade', 'scroll3d']),\n  vertical: PropTypes.bool,\n  width: PropTypes.string,\n  withoutControls: PropTypes.bool,\n  wrapAround: PropTypes.bool,\n  opacityScale: PropTypes.number,\n  slideListMargin: PropTypes.number\n};\n\nCarousel.defaultProps = {\n  afterSlide() {},\n  autoGenerateStyleTag: true,\n  autoplay: false,\n  autoplayInterval: 3000,\n  autoplayReverse: false,\n  beforeSlide() {},\n  cellAlign: 'left',\n  cellSpacing: 0,\n  enableKeyboardControls: false,\n  disableAnimation: false,\n  disableEdgeSwiping: false,\n  dragging: true,\n  easing: 'easeCircleOut',\n  edgeEasing: 'easeElasticOut',\n  frameOverflow: 'hidden',\n  framePadding: '0px',\n  height: 'inherit',\n  heightMode: 'max',\n  onDragStart() {},\n  onResize() {},\n  pauseOnHover: true,\n  renderAnnounceSlideMessage: defaultRenderAnnounceSlideMessage,\n  renderBottomCenterControls: props => <PagingDots {...props} />,\n  renderCenterLeftControls: props => <PreviousButton {...props} />,\n  renderCenterRightControls: props => <NextButton {...props} />,\n  slideIndex: 0,\n  slideOffset: 25,\n  slidesToScroll: 1,\n  slidesToShow: 1,\n  slideWidth: 1,\n  speed: 500,\n  style: {},\n  swiping: true,\n  transitionMode: 'scroll',\n  vertical: false,\n  width: '100%',\n  withoutControls: false,\n  wrapAround: false,\n  slideListMargin: 10\n};\n\nexport { NextButton, PreviousButton, PagingDots };\n"]},"metadata":{},"sourceType":"module"}