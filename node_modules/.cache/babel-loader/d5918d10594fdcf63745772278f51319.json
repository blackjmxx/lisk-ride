{"ast":null,"code":"var _jsxFileName = \"/Users/blackjmxx/Devs/LiskRide/src/pages/GifsPage/index.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { User } from \"parse\";\nimport { loadRewards } from \"../../modules/gifs/actions\";\nimport MenuBar from \"../../components/MenuBar/Menubar.js\";\nimport \"./styles.css\";\nimport { NotificationsViewContainer, ItemsContainer, HeaderContainer, HeaderTitle, OtherHeaderTitle } from \"../InfosPage/styles\";\nimport { Content, Title } from \"../../components/NotificationItem/style\";\nimport Moment from 'react-moment';\nimport { addBadgeToMenu } from '../../modules/home/actions';\nimport { GiftItemContainer, GiftImageContainer, GiftImage, GiftItemContentContainer, TimeoutContentContainer } from \"./styles\"; // import coffee from \"../../assets/images/coffee.svg\";\n\nimport { GiftsEmpty } from \"../../components/GiftsEmpty/GiftsEmpty\";\nimport { GiftsRequiredEmailVerification } from \"../../components/GiftsEmpty/GiftsRequiredEmailVerification\";\nimport { GiftPopup } from \"../../components/GiftPopup/GiftPopup\";\nexport const GIFT_URL = `${process.env.REACT_APP_UV_REWARD_URL}`;\n\nconst GifItem = ({\n  name,\n  description,\n  imageUrl,\n  expireAt,\n  handleUseGift\n}) => /*#__PURE__*/React.createElement(GiftItemContainer, {\n  onClick: () => handleUseGift(),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(GiftImageContainer, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(GiftImage, {\n  src: imageUrl,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }\n})), /*#__PURE__*/React.createElement(GiftItemContentContainer, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Title, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 7\n  }\n}, name), /*#__PURE__*/React.createElement(Content, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 7\n  }\n}, description), /*#__PURE__*/React.createElement(TimeoutContentContainer, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(Content, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }\n}, \"Expire - \", /*#__PURE__*/React.createElement(Moment, {\n  format: \"DD MM YYYY\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 28\n  }\n}, expireAt)))));\n\nclass GifsPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.gifts = [{\n      Title: \"\",\n      Content: \"\"\n    }];\n    this.state = {\n      showUseIt: false,\n      selectedGifImage: '',\n      selectedGifDescription: '',\n      selectedGifTitle: '',\n      currentKey: -1,\n      isEmailVerified: false\n    };\n\n    this.handleUseGift = i => {\n      this.setState({\n        currentKey: i\n      });\n    };\n\n    this.closeUseGift = i => {\n      this.setState({\n        currentKey: -1\n      });\n    };\n  }\n\n  componentDidMount() {\n    const {\n      token\n    } = this.props.card;\n\n    if (User.current()) {\n      if (User.current().get('emailVerified') || User.current().get('authData')) {\n        this.setState({\n          isEmailVerified: true\n        });\n      } else {\n        User.current().fetch().then(user => {\n          if (user.get('emailVerified') || user.get('authData')) {\n            this.setState({\n              isEmailVerified: true\n            });\n          }\n        });\n      }\n    }\n\n    this.props.loadRewards(token);\n    this.props.addBadgeToMenu(false);\n  }\n\n  render() {\n    const {\n      rewards = []\n    } = this.props;\n    const activeRewards = [];\n    const usedRewards = [];\n\n    if (!this.state.isEmailVerified) {\n      return /*#__PURE__*/React.createElement(GiftsRequiredEmailVerification, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 14\n        }\n      });\n    }\n\n    if (rewards.length === 0) {\n      return /*#__PURE__*/React.createElement(GiftsEmpty, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 14\n        }\n      });\n    }\n\n    if (rewards.length > 0) {\n      for (let i = 0; i < rewards.length; i++) {\n        const reward = rewards[i];\n        let rewardJSON = reward.toJSON();\n        if (rewardJSON.status === \"pending\") activeRewards.push(rewardJSON);else if (rewardJSON.status === \"consumed\" || rewardJSON.status === \"expired\") usedRewards.push(rewardJSON);\n      }\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(NotificationsViewContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(ItemsContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(HeaderContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(HeaderTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 17\n        }\n      }, \"Active\")), activeRewards.map((reward, i) => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 19\n          }\n        }, this.state.currentKey === i && /*#__PURE__*/React.createElement(GiftPopup, {\n          closeUseGift: () => this.closeUseGift(i),\n          shareLink: GIFT_URL + reward.voucherRef.token,\n          title: reward.rewardTemplateRef.title,\n          description: reward.rewardTemplateRef.description,\n          image: reward.rewardTemplateRef.image.url,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 58\n          }\n        }), /*#__PURE__*/React.createElement(GifItem, {\n          handleUseGift: () => this.handleUseGift(i),\n          name: reward.rewardTemplateRef.title,\n          description: reward.rewardTemplateRef.description,\n          imageUrl: reward.rewardTemplateRef.image.url,\n          expireAt: reward.rewardTemplateRef.expireAt,\n          isConsumed: reward.status !== \"pending\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 23\n          }\n        }));\n      })), /*#__PURE__*/React.createElement(ItemsContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(HeaderContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(OtherHeaderTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 17\n        }\n      }, \"Old\")), usedRewards.map(reward => {\n        return /*#__PURE__*/React.createElement(GifItem, {\n          handleUseGift: this.handleUseGift,\n          name: reward.rewardTemplateRef.title,\n          description: reward.rewardTemplateRef.description,\n          imageUrl: reward.rewardTemplateRef.image.url,\n          shareLink: \"http://dev-customer.netlify.com/#/\" + reward.voucherRef.token,\n          isConsumed: reward.status !== \"pending\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 19\n          }\n        });\n      }))), /*#__PURE__*/React.createElement(MenuBar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }\n      }));\n    }\n  }\n\n}\n\nconst mapActionCreators = {\n  loadRewards,\n  addBadgeToMenu\n};\n\nconst mapStateTopProps = state => {\n  return {};\n};\n\nexport default connect(mapStateTopProps, mapActionCreators)(GifsPage);","map":{"version":3,"sources":["/Users/blackjmxx/Devs/LiskRide/src/pages/GifsPage/index.js"],"names":["React","Component","connect","User","loadRewards","MenuBar","NotificationsViewContainer","ItemsContainer","HeaderContainer","HeaderTitle","OtherHeaderTitle","Content","Title","Moment","addBadgeToMenu","GiftItemContainer","GiftImageContainer","GiftImage","GiftItemContentContainer","TimeoutContentContainer","GiftsEmpty","GiftsRequiredEmailVerification","GiftPopup","GIFT_URL","process","env","REACT_APP_UV_REWARD_URL","GifItem","name","description","imageUrl","expireAt","handleUseGift","GifsPage","gifts","state","showUseIt","selectedGifImage","selectedGifDescription","selectedGifTitle","currentKey","isEmailVerified","i","setState","closeUseGift","componentDidMount","token","props","card","current","get","fetch","then","user","render","rewards","activeRewards","usedRewards","length","reward","rewardJSON","toJSON","status","push","map","voucherRef","rewardTemplateRef","title","image","url","mapActionCreators","mapStateTopProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { User } from \"parse\";\nimport { loadRewards } from \"../../modules/gifs/actions\";\nimport MenuBar from \"../../components/MenuBar/Menubar.js\";\nimport \"./styles.css\";\nimport {\n  NotificationsViewContainer,\n  ItemsContainer,\n  HeaderContainer,\n  HeaderTitle,\n  OtherHeaderTitle\n} from \"../InfosPage/styles\";\nimport { Content, Title } from \"../../components/NotificationItem/style\";\nimport Moment from 'react-moment';\nimport { addBadgeToMenu } from '../../modules/home/actions'\nimport {\n  GiftItemContainer,\n  GiftImageContainer,\n  GiftImage,\n  GiftItemContentContainer,\n  TimeoutContentContainer\n} from \"./styles\";\n// import coffee from \"../../assets/images/coffee.svg\";\nimport { GiftsEmpty } from \"../../components/GiftsEmpty/GiftsEmpty\";\nimport { GiftsRequiredEmailVerification } from \"../../components/GiftsEmpty/GiftsRequiredEmailVerification\"\nimport { GiftPopup } from \"../../components/GiftPopup/GiftPopup\";\nexport const GIFT_URL = `${process.env.REACT_APP_UV_REWARD_URL}`\n\nconst GifItem = ({\n  name,\n  description,\n  imageUrl,\n  expireAt,\n  handleUseGift\n}) => (\n  <GiftItemContainer onClick={() => handleUseGift()}>\n    <GiftImageContainer>\n      <GiftImage src={imageUrl} />\n    </GiftImageContainer>\n    <GiftItemContentContainer>\n      <Title>{name}</Title>\n      <Content>{description}</Content>\n      <TimeoutContentContainer>\n        <Content>Expire - {<Moment format=\"DD MM YYYY\">{expireAt}</Moment>}</Content>\n      </TimeoutContentContainer>\n    </GiftItemContentContainer>\n  </GiftItemContainer>\n);\n\nclass GifsPage extends Component {\n  gifts = [\n    {\n      Title: \"\",\n      Content: \"\"\n    }\n  ];\n\n  state = {\n    showUseIt: false,\n    selectedGifImage:'',\n    selectedGifDescription:'',\n    selectedGifTitle:'',\n    currentKey:-1,\n    isEmailVerified:false\n  };\n\n  componentDidMount(){\n    const { token } = this.props.card;\n    if(User.current()){\n        if(User.current().get('emailVerified') || User.current().get('authData')){\n          this.setState({isEmailVerified:true})\n      }else{\n        User.current().fetch().then(\n          (user) => {\n            if(user.get('emailVerified') || user.get('authData')){\n              this.setState({isEmailVerified:true})\n            }\n          }\n        )\n      }\n    }\n    \n    this.props.loadRewards(token);\n    this.props.addBadgeToMenu(false)\n  }\n\n  handleUseGift = ( i ) => {\n    this.setState({ currentKey: i });\n  };\n\n  closeUseGift = ( i ) => {\n    this.setState({ currentKey: -1 });\n  };\n\n  render() {\n\n    const { rewards = []} = this.props;\n    \n    const activeRewards = [];\n    const usedRewards = [];\n    \n    if(!this.state.isEmailVerified){\n      return <GiftsRequiredEmailVerification />;\n    }\n\n    if (rewards.length === 0) {\n      return <GiftsEmpty />;\n    }\n\n    if (rewards.length > 0) { \n      for (let i = 0; i < rewards.length; i++) {\n        const reward = rewards[i];\n        let rewardJSON = reward.toJSON();\n        if (rewardJSON.status === \"pending\") activeRewards.push(rewardJSON);\n        else if (rewardJSON.status === \"consumed\" || rewardJSON.status === \"expired\") usedRewards.push(rewardJSON);\n      }\n\n      return (\n        <>\n          <NotificationsViewContainer>\n          {/* {(\n              <GiftScan \n                active={true}/>\n              )} */}\n            <ItemsContainer>\n              <HeaderContainer>\n                <HeaderTitle>Active</HeaderTitle>\n              </HeaderContainer>\n              {activeRewards.map((reward, i)=> {\n                return (\n                  <div>\n                    {(\n                        (this.state.currentKey === i) && <GiftPopup closeUseGift={() => this.closeUseGift(i)}\n                        shareLink={\n                          GIFT_URL + reward.voucherRef.token\n                        }\n                        title={reward.rewardTemplateRef.title} description={reward.rewardTemplateRef.description} image={reward.rewardTemplateRef.image.url}/>\n                      )}\n                      <GifItem\n                        handleUseGift={() => this.handleUseGift(i)}\n                        name={reward.rewardTemplateRef.title}\n                        description={reward.rewardTemplateRef.description}\n                        imageUrl={reward.rewardTemplateRef.image.url}\n                        expireAt={reward.rewardTemplateRef.expireAt}\n                        \n                    isConsumed={reward.status !== \"pending\"}\n                  />\n                  </div>\n                  \n                );\n              })}\n            </ItemsContainer>\n            <ItemsContainer>\n              <HeaderContainer>\n                <OtherHeaderTitle>Old</OtherHeaderTitle>\n              </HeaderContainer>\n              {usedRewards.map(reward => {\n                return (\n                  <GifItem\n                    handleUseGift={this.handleUseGift}\n                    name={reward.rewardTemplateRef.title}\n                    description={reward.rewardTemplateRef.description}\n                    imageUrl={reward.rewardTemplateRef.image.url}\n                    shareLink={\n                      \"http://dev-customer.netlify.com/#/\" +\n                      reward.voucherRef.token\n                    }\n                    isConsumed={reward.status !== \"pending\"}\n                  />\n                );\n              })}\n            </ItemsContainer>\n          </NotificationsViewContainer>\n          <MenuBar />\n        </>\n      );\n    }\n  }\n}\n\nconst mapActionCreators = {\n  loadRewards,\n  addBadgeToMenu\n};\n\nconst mapStateTopProps = state => {\n  return {\n  };\n};\n\nexport default connect(mapStateTopProps, mapActionCreators)(GifsPage);\n"]},"metadata":{},"sourceType":"module"}