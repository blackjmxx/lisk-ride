{"ast":null,"code":"var _jsxFileName = \"/Users/blackjmxx/Devs/LiskRide/src/pages/CardPage/index.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { User } from \"parse\";\nimport CardsCarusel from \"../../components/CardsCarusel/CardsCarusel\";\nimport { Content, ScanContainer, ImageContainer, TitleContainer, TypeScanContainer, TypeButtonsContainer, CircleTypeButtonContainer, CircleQrButton, CircleStampButton, ButtonIcon, ContentContainer, BottomContainer } from \"./styles\";\nimport Notifications from \"../../components/Notifications\";\nimport { BackgroundCircle, ShortcutContent, CardsContainer, ShortcutContainer } from \"../../components/HomePage/styles\";\nimport { Icon } from \"../../components/HomePage/styles\";\nimport shortcutIcon from \"../../assets/icons/shortcutIcon.svg\";\nimport shortcutIconAndroid from \"../../assets/icons/shortcutIconAndroid.svg\";\nimport MenuBar from \"../../components/MenuBar/Menubar.js\";\nimport scannerIcon from \"../../assets/icons/scannerIcon.svg\";\nimport stampIcon from \"../../assets/icons/stampIcon.svg\";\nimport BarCodeLoyalty from \"../../components/BarCodeLoyalty\";\nimport InstallationPopup from \"../../components/InstallationPopup/InstallationPopup\";\nimport GlobalRequireAuth from \"../../pages/SettingsPage/GlobalRequireAuth\";\nimport { FormattedMessage, injectIntl } from \"react-intl\";\nimport ValidationSuccessPopUp from \"../../components/GiftScan/ValidationSuccessPopUp\";\nimport ValidationErrorPopUp from \"../../components/GiftScan/ValidationErrorPopUp\";\nimport ValidationSuccessWithGift from \"../../components/GiftScan/ValidationSuccessWithGift\";\n\nclass CardPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: [\"1\", \"2\", \"3\"],\n      imgHeight: 176,\n      InstallationPopup: false\n    };\n\n    this.handleSelectCard = index => {\n      this.props.selectAndChangeCardId(index);\n    };\n\n    this.closeSucessPopUp = i => {\n      this.props.closeValidationModal();\n      this.props.history.push(\"/home\");\n    };\n\n    this.closeGotoGift = i => {\n      this.props.closeValidationModal();\n      this.props.history.push(\"/home/gifts\");\n    };\n\n    this.closeErrorPopUp = i => {\n      this.props.closeValidationModal();\n      this.props.history.push(\"/home/card\");\n    };\n\n    this.installAppHandler = () => {\n      if (!this.state.InstallationPopup) {\n        this.setState({\n          InstallationPopup: true\n        });\n        return;\n      }\n\n      this.setState({\n        InstallationPopup: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    let currentUser = User.current();\n\n    if (currentUser) {\n      this.props.loadLoyaltyCards(currentUser);\n    }\n  }\n\n  render() {\n    const {\n      cards,\n      card\n    } = this.props;\n    const isAndroid = /android/i.test(navigator.userAgent);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.state.InstallationPopup && /*#__PURE__*/React.createElement(InstallationPopup, {\n      active: true,\n      closeModalHandler: () => this.setState({\n        InstallationPopup: false\n      }),\n      installAppHandler: this.installAppHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(GlobalRequireAuth, Object.assign({}, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ScanContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Notifications, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(BackgroundCircle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(ShortcutContainer, {\n      onClick: this.installAppHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      src: isAndroid ? shortcutIconAndroid : shortcutIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(ShortcutContent, {\n      name: \"cardsPopup\",\n      to: \"/home/cardsPopup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"home.addTohomeScreen\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(CardsContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CardsCarusel, {\n      cards: cards,\n      handleSelectCard: this.handleSelectCard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(BottomContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ImageContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(BarCodeLoyalty, {\n      token: card.token,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(TitleContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"cardPage.scanQuickValidationMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(TypeScanContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TypeButtonsContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/home/scanner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(CircleTypeButtonContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CircleQrButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(ButtonIcon, {\n      src: scannerIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 25\n      }\n    })))), /*#__PURE__*/React.createElement(ContentContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"cardPage.scanQrCode\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 23\n      }\n    })))), /*#__PURE__*/React.createElement(TypeButtonsContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/home/magicStamps\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(CircleTypeButtonContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CircleStampButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(ButtonIcon, {\n      src: stampIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 25\n      }\n    })))), /*#__PURE__*/React.createElement(ContentContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"cardPage.MagicStamp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 23\n      }\n    }))))))), this.props.hasValue && this.props.isValidationSucceed && /*#__PURE__*/React.createElement(ValidationSuccessPopUp, {\n      closeUsePopUp: () => this.closeSucessPopUp(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }\n    }), this.props.hasValue && !this.props.isValidationSucceed && !this.props.isValidationSucceedWithGift && /*#__PURE__*/React.createElement(ValidationErrorPopUp, {\n      closeUsePopUp: () => this.closeErrorPopUp(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }\n    }), this.props.hasValue && this.props.isValidationSucceedWithGift && /*#__PURE__*/React.createElement(ValidationSuccessWithGift, {\n      closeUsePopUp: () => this.closeSucessPopUp(),\n      handleRestart: () => this.closeGotoGift(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(MenuBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default injectIntl(CardPage);","map":{"version":3,"sources":["/Users/blackjmxx/Devs/LiskRide/src/pages/CardPage/index.js"],"names":["React","Component","Link","User","CardsCarusel","Content","ScanContainer","ImageContainer","TitleContainer","TypeScanContainer","TypeButtonsContainer","CircleTypeButtonContainer","CircleQrButton","CircleStampButton","ButtonIcon","ContentContainer","BottomContainer","Notifications","BackgroundCircle","ShortcutContent","CardsContainer","ShortcutContainer","Icon","MenuBar","BarCodeLoyalty","InstallationPopup","GlobalRequireAuth","FormattedMessage","injectIntl","ValidationSuccessPopUp","ValidationErrorPopUp","ValidationSuccessWithGift","CardPage","state","data","imgHeight","handleSelectCard","index","props","selectAndChangeCardId","closeSucessPopUp","i","closeValidationModal","history","push","closeGotoGift","closeErrorPopUp","installAppHandler","setState","componentDidMount","currentUser","current","loadLoyaltyCards","render","cards","card","isAndroid","test","navigator","userAgent","shortcutIconAndroid","shortcutIcon","token","scannerIcon","stampIcon","hasValue","isValidationSucceed","isValidationSucceedWithGift"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { User } from \"parse\";\nimport CardsCarusel from \"../../components/CardsCarusel/CardsCarusel\";\nimport {\n  Content,\n  ScanContainer,\n  ImageContainer,\n  TitleContainer,\n  TypeScanContainer,\n  TypeButtonsContainer,\n  CircleTypeButtonContainer,\n  CircleQrButton,\n  CircleStampButton,\n  ButtonIcon,\n  ContentContainer,\n  BottomContainer\n} from \"./styles\";\nimport Notifications from \"../../components/Notifications\";\nimport {\n  BackgroundCircle,\n  ShortcutContent,\n  CardsContainer,\n  ShortcutContainer\n} from \"../../components/HomePage/styles\";\nimport { Icon } from \"../../components/HomePage/styles\";\nimport shortcutIcon from \"../../assets/icons/shortcutIcon.svg\";\nimport shortcutIconAndroid from \"../../assets/icons/shortcutIconAndroid.svg\";\nimport MenuBar from \"../../components/MenuBar/Menubar.js\";\nimport scannerIcon from \"../../assets/icons/scannerIcon.svg\";\nimport stampIcon from \"../../assets/icons/stampIcon.svg\";\nimport BarCodeLoyalty from \"../../components/BarCodeLoyalty\";\nimport InstallationPopup from \"../../components/InstallationPopup/InstallationPopup\";\nimport GlobalRequireAuth from \"../../pages/SettingsPage/GlobalRequireAuth\";\nimport { FormattedMessage, injectIntl } from \"react-intl\";\nimport  ValidationSuccessPopUp  from \"../../components/GiftScan/ValidationSuccessPopUp\";\nimport  ValidationErrorPopUp from \"../../components/GiftScan/ValidationErrorPopUp\";\nimport ValidationSuccessWithGift from \"../../components/GiftScan/ValidationSuccessWithGift\"\n\nclass CardPage extends Component {\n  state = {\n    data: [\"1\", \"2\", \"3\"],\n    imgHeight: 176,\n    InstallationPopup: false\n  };\n  componentDidMount() {\n    let currentUser = User.current();\n    if (currentUser) {\n      this.props.loadLoyaltyCards(currentUser);\n    }\n  }\n\n  handleSelectCard = index => {\n    this.props.selectAndChangeCardId(index);\n  };\n\n  closeSucessPopUp = i => {\n    this.props.closeValidationModal();\n    this.props.history.push(\"/home\");\n  };\n\n  closeGotoGift= i => {\n    this.props.closeValidationModal();\n    this.props.history.push(\"/home/gifts\");\n  };\n\n  closeErrorPopUp = i => {\n    this.props.closeValidationModal();\n    this.props.history.push(\"/home/card\");\n  };\n\n  installAppHandler = () => {\n    if (!this.state.InstallationPopup) {\n      this.setState({ InstallationPopup: true });\n\n      return;\n    }\n\n    this.setState({ InstallationPopup: false });\n  };\n\n  render() {\n    const { cards, card } = this.props;\n    const isAndroid = /android/i.test(navigator.userAgent);\n\n    return (\n      <>\n        {this.state.InstallationPopup && (\n          <InstallationPopup\n            active\n            closeModalHandler={() =>\n              this.setState({ InstallationPopup: false })\n            }\n            installAppHandler={this.installAppHandler}\n          />\n        )}\n        <GlobalRequireAuth {...this.props}>\n          <ScanContainer>\n            <Notifications />\n            <BackgroundCircle />\n            <ShortcutContainer onClick={this.installAppHandler}>\n              <Icon src={isAndroid ? shortcutIconAndroid : shortcutIcon} />\n              <ShortcutContent name=\"cardsPopup\" to={\"/home/cardsPopup\"}>\n                <FormattedMessage id={\"home.addTohomeScreen\"} />\n              </ShortcutContent>\n            </ShortcutContainer>\n            <CardsContainer>\n              {/* <LoyaltyCard url={card.templateRef.imageLogo.url}/>  */}\n              <CardsCarusel\n                cards={cards}\n                handleSelectCard={this.handleSelectCard}\n              />\n            </CardsContainer>\n            <BottomContainer>\n              <ImageContainer>\n                <BarCodeLoyalty token={card.token} />\n              </ImageContainer>\n              <TitleContainer>\n                <Content>\n                  <FormattedMessage\n                    id={\"cardPage.scanQuickValidationMessage\"}\n                  />\n                </Content>\n              </TitleContainer>\n              <TypeScanContainer>\n                <TypeButtonsContainer>\n                  <Link to={\"/home/scanner\"}>\n                    <CircleTypeButtonContainer>\n                      <CircleQrButton>\n                        <ButtonIcon src={scannerIcon} />\n                      </CircleQrButton>\n                    </CircleTypeButtonContainer>\n                  </Link>\n                  <ContentContainer>\n                    <Content>\n                      <FormattedMessage id={\"cardPage.scanQrCode\"} />\n                    </Content>\n                  </ContentContainer>\n                </TypeButtonsContainer>\n                <TypeButtonsContainer>\n                  <Link to={\"/home/magicStamps\"}>\n                    <CircleTypeButtonContainer>\n                      <CircleStampButton>\n                        <ButtonIcon src={stampIcon} />\n                      </CircleStampButton>\n                    </CircleTypeButtonContainer>\n                  </Link>\n                  <ContentContainer>\n                    <Content>\n                      <FormattedMessage id={\"cardPage.MagicStamp\"} />\n                    </Content>\n                  </ContentContainer>\n                </TypeButtonsContainer>\n              </TypeScanContainer>\n            </BottomContainer>\n          </ScanContainer>\n          {this.props.hasValue && this.props.isValidationSucceed && (\n            <ValidationSuccessPopUp\n              closeUsePopUp={() => this.closeSucessPopUp()}\n            />\n          )}\n          {this.props.hasValue && !this.props.isValidationSucceed && !this.props.isValidationSucceedWithGift &&(\n            <ValidationErrorPopUp\n              closeUsePopUp={() => this.closeErrorPopUp()}\n            />\n          )}\n          {this.props.hasValue && this.props.isValidationSucceedWithGift && (\n            <ValidationSuccessWithGift\n              closeUsePopUp={() => this.closeSucessPopUp()}\n              handleRestart={() => this.closeGotoGift()}\n            />\n          )}\n          <MenuBar />\n        </GlobalRequireAuth>\n      </>\n    );\n  }\n}\nexport default injectIntl(CardPage);\n"]},"metadata":{},"sourceType":"module"}