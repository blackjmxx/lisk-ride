{"ast":null,"code":"import { FETCH_LOYALTYCARD_FAILURE, FETCH_LOYALTYCARD_REQUEST, FETCH_LOYALTYCARD_SUCCESS, RECEIVE_CACHED_CARD, GENERATE_CARD_REQUEST, GENERATE_CARD_FAILURE, GENERATE_CARD_SUCCESS, FETCH_STAMP_REQUEST, FETCH_STAMP_SUCCESS, FETCH_STAMP_FAILURE, FETCH_REWARDS_SUCCESS, FETCH_REWARDS_REQUEST, LOAD_LOYALTYCARDS_REQUEST, LOAD_LOYALTYCARDS_SUCCESS, LOAD_LOYALTYCARDS_FAILURE, SELECT_LOYALTYCARD, CHANGE_QRMODE, ADD_STAMP_BY_VALIDATION_LINK_SUCCESS, ADD_STAMP_BY_VALIDATION_LINK_FAILURE, ADD_STAMP_BY_VALIDATION_LINK_RESET, SET_CURRENT_ID_CAMPAIGN, SET_MENU_TARGET, ADD_STAMP_BY_VALIDATION_LINK_WITH_GIFT_SUCCESS } from \"./actions\";\nconst initState = {\n  isLoadingCard: true,\n  isGiftNotification: false,\n  isLoadingStamps: false,\n  error: false,\n  card: {\n    urlClientImg: \"\",\n    previousPointCount: 0,\n    currentPointCount: null,\n    clientName: \"\",\n    totalPointCount: null,\n    templateRef: {\n      imageLogo: {\n        url: \"\"\n      },\n      totalStepCount: null\n    },\n    stamps: [],\n    rewardSteps: [],\n    isLoadingRewards: false,\n    newRewards: [],\n    rewardIds: [],\n    oldRewardIds: []\n  },\n  cards: [],\n  cardElments: [],\n  selectedCardIndex: 0,\n  isLoadinLoyaltyCards: false,\n  qrscanMode: 'qrcodescan',\n  showPopUp: false,\n  hasValue: false,\n  isValidationSucceedWithGift: false\n};\nexport default function homeReducer(state = initState, action) {\n  switch (action.type) {\n    case FETCH_LOYALTYCARD_REQUEST:\n      return { ...state,\n        error: false,\n        isLoadingCard: true\n      };\n\n    case FETCH_LOYALTYCARD_FAILURE:\n      return { ...state,\n        error: true,\n        isLoadingCard: false\n      };\n\n    case FETCH_LOYALTYCARD_SUCCESS:\n      return { ...state,\n        error: false,\n        card: { ...state.card,\n          ...action.payload\n        },\n        isLoadingCard: false,\n        cardId: state.card.Id\n      };\n\n    case SELECT_LOYALTYCARD:\n      return { ...state,\n        card: { ...state.card,\n          ...state.cards[action.payload].toJSON(),\n          stamps: [],\n          rewardSteps: [],\n          isLoadingRewards: false\n        },\n        cardId: state.card.id,\n        selectedCardIndex: action.payload\n      };\n\n    case FETCH_STAMP_REQUEST:\n      return { ...state,\n        error: false,\n        isLoadingStamps: true\n      };\n\n    case FETCH_STAMP_SUCCESS:\n      return { ...state,\n        error: false,\n        card: { ...state.card,\n          stamps: action.payload\n        },\n        isLoadingStamps: false\n      };\n\n    case FETCH_REWARDS_SUCCESS:\n      return { ...state,\n        error: false,\n        card: { ...state.card,\n          rewardSteps: action.payload\n        },\n        isLoadingRewards: false\n      };\n\n    case FETCH_REWARDS_REQUEST:\n      return { ...state,\n        isLoadingRewards: true\n      };\n\n    case FETCH_STAMP_FAILURE:\n      return { ...state,\n        error: true,\n        isLoadingStamps: false\n      };\n\n    case RECEIVE_CACHED_CARD:\n      return { ...state,\n        card: { ...state.card,\n          ...action.payload\n        }\n      };\n\n    case GENERATE_CARD_REQUEST:\n      return { ...state,\n        isGeneratingCARD: true\n      };\n\n    case GENERATE_CARD_SUCCESS:\n      return { ...state,\n        token: action.payload,\n        isGeneratingCard: false\n      };\n\n    case GENERATE_CARD_FAILURE:\n      return { ...state,\n        isGeneratingCARD: false,\n        hasError: true,\n        isFetchingCard: false,\n        error: action.error\n      };\n\n    case LOAD_LOYALTYCARDS_REQUEST:\n      return { ...state,\n        isLoadinLoyaltyCards: true\n      };\n\n    case LOAD_LOYALTYCARDS_SUCCESS:\n      return { ...state,\n        isLoadinLoyaltyCards: false,\n        cards: action.payload.cards,\n        cardElments: action.payload.cardElments\n      };\n\n    case LOAD_LOYALTYCARDS_FAILURE:\n      return { ...state,\n        isLoadinLoyaltyCards: false,\n        error: action.payload.error\n      };\n\n    case CHANGE_QRMODE:\n      return { ...state,\n        qrscanMode: action.payload\n      };\n\n    case ADD_STAMP_BY_VALIDATION_LINK_RESET:\n      return { ...state,\n        isValidationSucceed: false,\n        isValidationSucceedWithGift: false,\n        hasValue: false\n      };\n\n    case ADD_STAMP_BY_VALIDATION_LINK_SUCCESS:\n      return { ...state,\n        isValidationSucceed: true,\n        hasValue: true\n      };\n\n    case ADD_STAMP_BY_VALIDATION_LINK_WITH_GIFT_SUCCESS:\n      return { ...state,\n        isValidationSucceedWithGift: true,\n        hasValue: true\n      };\n\n    case ADD_STAMP_BY_VALIDATION_LINK_FAILURE:\n      return { ...state,\n        isValidationSucceed: false,\n        hasValue: true\n      };\n\n    case SET_CURRENT_ID_CAMPAIGN:\n      return { ...state,\n        currentInstaltionId: action.payload\n      };\n\n    case SET_MENU_TARGET:\n      return { ...state,\n        isGiftNotification: action.payload\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/blackjmxx/Devs/LiskRide/src/modules/home/reducers.js"],"names":["FETCH_LOYALTYCARD_FAILURE","FETCH_LOYALTYCARD_REQUEST","FETCH_LOYALTYCARD_SUCCESS","RECEIVE_CACHED_CARD","GENERATE_CARD_REQUEST","GENERATE_CARD_FAILURE","GENERATE_CARD_SUCCESS","FETCH_STAMP_REQUEST","FETCH_STAMP_SUCCESS","FETCH_STAMP_FAILURE","FETCH_REWARDS_SUCCESS","FETCH_REWARDS_REQUEST","LOAD_LOYALTYCARDS_REQUEST","LOAD_LOYALTYCARDS_SUCCESS","LOAD_LOYALTYCARDS_FAILURE","SELECT_LOYALTYCARD","CHANGE_QRMODE","ADD_STAMP_BY_VALIDATION_LINK_SUCCESS","ADD_STAMP_BY_VALIDATION_LINK_FAILURE","ADD_STAMP_BY_VALIDATION_LINK_RESET","SET_CURRENT_ID_CAMPAIGN","SET_MENU_TARGET","ADD_STAMP_BY_VALIDATION_LINK_WITH_GIFT_SUCCESS","initState","isLoadingCard","isGiftNotification","isLoadingStamps","error","card","urlClientImg","previousPointCount","currentPointCount","clientName","totalPointCount","templateRef","imageLogo","url","totalStepCount","stamps","rewardSteps","isLoadingRewards","newRewards","rewardIds","oldRewardIds","cards","cardElments","selectedCardIndex","isLoadinLoyaltyCards","qrscanMode","showPopUp","hasValue","isValidationSucceedWithGift","homeReducer","state","action","type","payload","cardId","Id","toJSON","id","isGeneratingCARD","token","isGeneratingCard","hasError","isFetchingCard","isValidationSucceed","currentInstaltionId"],"mappings":"AAAA,SACEA,yBADF,EAEEC,yBAFF,EAGEC,yBAHF,EAIEC,mBAJF,EAKEC,qBALF,EAMEC,qBANF,EAOEC,qBAPF,EAQEC,mBARF,EASEC,mBATF,EAUEC,mBAVF,EAWEC,qBAXF,EAYEC,qBAZF,EAaEC,yBAbF,EAcEC,yBAdF,EAeEC,yBAfF,EAgBEC,kBAhBF,EAiBEC,aAjBF,EAkBEC,oCAlBF,EAmBEC,oCAnBF,EAoBEC,kCApBF,EAqBEC,uBArBF,EAsBEC,eAtBF,EAuBEC,8CAvBF,QAwBO,WAxBP;AA0BA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,aAAa,EAAE,IADC;AAEhBC,EAAAA,kBAAkB,EAAC,KAFH;AAGhBC,EAAAA,eAAe,EAAE,KAHD;AAIhBC,EAAAA,KAAK,EAAE,KAJS;AAKhBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,YAAY,EAAE,EADV;AAEJC,IAAAA,kBAAkB,EAAE,CAFhB;AAGJC,IAAAA,iBAAiB,EAAE,IAHf;AAIJC,IAAAA,UAAU,EAAE,EAJR;AAKJC,IAAAA,eAAe,EAAE,IALb;AAMJC,IAAAA,WAAW,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAEC,QAAAA,GAAG,EAAE;AAAP,OAAb;AAA0BC,MAAAA,cAAc,EAAE;AAA1C,KANT;AAOJC,IAAAA,MAAM,EAAE,EAPJ;AAQJC,IAAAA,WAAW,EAAE,EART;AASJC,IAAAA,gBAAgB,EAAE,KATd;AAUJC,IAAAA,UAAU,EAAE,EAVR;AAWJC,IAAAA,SAAS,EAAE,EAXP;AAYJC,IAAAA,YAAY,EAAE;AAZV,GALU;AAmBhBC,EAAAA,KAAK,EAAE,EAnBS;AAoBhBC,EAAAA,WAAW,EAAC,EApBI;AAqBhBC,EAAAA,iBAAiB,EAAC,CArBF;AAsBhBC,EAAAA,oBAAoB,EAAE,KAtBN;AAuBhBC,EAAAA,UAAU,EAAE,YAvBI;AAwBhBC,EAAAA,SAAS,EAAC,KAxBM;AAyBhBC,EAAAA,QAAQ,EAAC,KAzBO;AA0BhBC,EAAAA,2BAA2B,EAAC;AA1BZ,CAAlB;AA6BA,eAAe,SAASC,WAAT,CAAqBC,KAAK,GAAG9B,SAA7B,EAAwC+B,MAAxC,EAAgD;AAC7D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKtD,yBAAL;AACE,aAAO,EACL,GAAGoD,KADE;AAEL1B,QAAAA,KAAK,EAAE,KAFF;AAGLH,QAAAA,aAAa,EAAE;AAHV,OAAP;;AAKF,SAAKxB,yBAAL;AACE,aAAO,EACL,GAAGqD,KADE;AAEL1B,QAAAA,KAAK,EAAE,IAFF;AAGLH,QAAAA,aAAa,EAAE;AAHV,OAAP;;AAKF,SAAKtB,yBAAL;AACE,aAAO,EACL,GAAGmD,KADE;AAEL1B,QAAAA,KAAK,EAAE,KAFF;AAGLC,QAAAA,IAAI,EAAE,EAAE,GAAGyB,KAAK,CAACzB,IAAX;AAAiB,aAAG0B,MAAM,CAACE;AAA3B,SAHD;AAILhC,QAAAA,aAAa,EAAE,KAJV;AAKLiC,QAAAA,MAAM,EAAEJ,KAAK,CAACzB,IAAN,CAAW8B;AALd,OAAP;;AAOF,SAAK3C,kBAAL;AACI,aAAO,EACL,GAAGsC,KADE;AAELzB,QAAAA,IAAI,EAAE,EAAE,GAAGyB,KAAK,CAACzB,IAAX;AAAiB,aAAGyB,KAAK,CAACT,KAAN,CAAYU,MAAM,CAACE,OAAnB,EAA4BG,MAA5B,EAApB;AAA4DrB,UAAAA,MAAM,EAAE,EAApE;AACJC,UAAAA,WAAW,EAAE,EADT;AAEJC,UAAAA,gBAAgB,EAAE;AAFd,SAFD;AAKLiB,QAAAA,MAAM,EAAEJ,KAAK,CAACzB,IAAN,CAAWgC,EALd;AAMLd,QAAAA,iBAAiB,EAACQ,MAAM,CAACE;AANpB,OAAP;;AAQJ,SAAKjD,mBAAL;AACE,aAAO,EACL,GAAG8C,KADE;AAEL1B,QAAAA,KAAK,EAAE,KAFF;AAGLD,QAAAA,eAAe,EAAE;AAHZ,OAAP;;AAKF,SAAKlB,mBAAL;AACE,aAAO,EACL,GAAG6C,KADE;AAEL1B,QAAAA,KAAK,EAAE,KAFF;AAGLC,QAAAA,IAAI,EAAE,EAAE,GAAGyB,KAAK,CAACzB,IAAX;AAAiBU,UAAAA,MAAM,EAAEgB,MAAM,CAACE;AAAhC,SAHD;AAIL9B,QAAAA,eAAe,EAAE;AAJZ,OAAP;;AAMF,SAAKhB,qBAAL;AACE,aAAO,EACL,GAAG2C,KADE;AAEL1B,QAAAA,KAAK,EAAE,KAFF;AAGLC,QAAAA,IAAI,EAAE,EAAE,GAAGyB,KAAK,CAACzB,IAAX;AAAiBW,UAAAA,WAAW,EAAEe,MAAM,CAACE;AAArC,SAHD;AAILhB,QAAAA,gBAAgB,EAAE;AAJb,OAAP;;AAMF,SAAK7B,qBAAL;AACE,aAAO,EACL,GAAG0C,KADE;AAELb,QAAAA,gBAAgB,EAAE;AAFb,OAAP;;AAIF,SAAK/B,mBAAL;AACE,aAAO,EACL,GAAG4C,KADE;AAEL1B,QAAAA,KAAK,EAAE,IAFF;AAGLD,QAAAA,eAAe,EAAE;AAHZ,OAAP;;AAKF,SAAKvB,mBAAL;AACE,aAAO,EACL,GAAGkD,KADE;AAELzB,QAAAA,IAAI,EAAE,EAAE,GAAGyB,KAAK,CAACzB,IAAX;AAAiB,aAAG0B,MAAM,CAACE;AAA3B;AAFD,OAAP;;AAIF,SAAKpD,qBAAL;AACE,aAAO,EACL,GAAGiD,KADE;AAELQ,QAAAA,gBAAgB,EAAE;AAFb,OAAP;;AAIF,SAAKvD,qBAAL;AACE,aAAO,EACL,GAAG+C,KADE;AAELS,QAAAA,KAAK,EAAER,MAAM,CAACE,OAFT;AAGLO,QAAAA,gBAAgB,EAAE;AAHb,OAAP;;AAKF,SAAK1D,qBAAL;AACE,aAAO,EACL,GAAGgD,KADE;AAELQ,QAAAA,gBAAgB,EAAE,KAFb;AAGLG,QAAAA,QAAQ,EAAE,IAHL;AAILC,QAAAA,cAAc,EAAE,KAJX;AAKLtC,QAAAA,KAAK,EAAE2B,MAAM,CAAC3B;AALT,OAAP;;AAOF,SAAKf,yBAAL;AACE,aAAO,EACL,GAAGyC,KADE;AAELN,QAAAA,oBAAoB,EAAE;AAFjB,OAAP;;AAIF,SAAKlC,yBAAL;AACE,aAAO,EACL,GAAGwC,KADE;AAELN,QAAAA,oBAAoB,EAAE,KAFjB;AAGLH,QAAAA,KAAK,EAAEU,MAAM,CAACE,OAAP,CAAeZ,KAHjB;AAILC,QAAAA,WAAW,EAACS,MAAM,CAACE,OAAP,CAAeX;AAJtB,OAAP;;AAMF,SAAK/B,yBAAL;AACE,aAAO,EACL,GAAGuC,KADE;AAELN,QAAAA,oBAAoB,EAAE,KAFjB;AAGLpB,QAAAA,KAAK,EAAE2B,MAAM,CAACE,OAAP,CAAe7B;AAHjB,OAAP;;AAKF,SAAKX,aAAL;AACI,aAAO,EACL,GAAGqC,KADE;AAELL,QAAAA,UAAU,EAACM,MAAM,CAACE;AAFb,OAAP;;AAIJ,SAAKrC,kCAAL;AACM,aAAO,EACL,GAAGkC,KADE;AAELa,QAAAA,mBAAmB,EAAC,KAFf;AAGLf,QAAAA,2BAA2B,EAAC,KAHvB;AAILD,QAAAA,QAAQ,EAAC;AAJJ,OAAP;;AAMN,SAAKjC,oCAAL;AACM,aAAO,EACL,GAAGoC,KADE;AAELa,QAAAA,mBAAmB,EAAC,IAFf;AAGLhB,QAAAA,QAAQ,EAAC;AAHJ,OAAP;;AAKN,SAAK5B,8CAAL;AACE,aAAO,EACL,GAAG+B,KADE;AAELF,QAAAA,2BAA2B,EAAC,IAFvB;AAGLD,QAAAA,QAAQ,EAAC;AAHJ,OAAP;;AAKF,SAAKhC,oCAAL;AACQ,aAAO,EACL,GAAGmC,KADE;AAELa,QAAAA,mBAAmB,EAAC,KAFf;AAGLhB,QAAAA,QAAQ,EAAC;AAHJ,OAAP;;AAKR,SAAK9B,uBAAL;AACM,aAAM,EACJ,GAAGiC,KADC;AAEJc,QAAAA,mBAAmB,EAACb,MAAM,CAACE;AAFvB,OAAN;;AAIN,SAAKnC,eAAL;AACE,aAAO,EACL,GAAGgC,KADE;AAEL5B,QAAAA,kBAAkB,EAAC6B,MAAM,CAACE;AAFrB,OAAP;;AAIF;AACE,aAAOH,KAAP;AAhJJ;AAkJD","sourcesContent":["import {\n  FETCH_LOYALTYCARD_FAILURE,\n  FETCH_LOYALTYCARD_REQUEST,\n  FETCH_LOYALTYCARD_SUCCESS,\n  RECEIVE_CACHED_CARD,\n  GENERATE_CARD_REQUEST,\n  GENERATE_CARD_FAILURE,\n  GENERATE_CARD_SUCCESS,\n  FETCH_STAMP_REQUEST,\n  FETCH_STAMP_SUCCESS,\n  FETCH_STAMP_FAILURE,\n  FETCH_REWARDS_SUCCESS,\n  FETCH_REWARDS_REQUEST,\n  LOAD_LOYALTYCARDS_REQUEST,\n  LOAD_LOYALTYCARDS_SUCCESS,\n  LOAD_LOYALTYCARDS_FAILURE,\n  SELECT_LOYALTYCARD,\n  CHANGE_QRMODE,\n  ADD_STAMP_BY_VALIDATION_LINK_SUCCESS,\n  ADD_STAMP_BY_VALIDATION_LINK_FAILURE,\n  ADD_STAMP_BY_VALIDATION_LINK_RESET,\n  SET_CURRENT_ID_CAMPAIGN,\n  SET_MENU_TARGET,\n  ADD_STAMP_BY_VALIDATION_LINK_WITH_GIFT_SUCCESS\n} from \"./actions\";\n\nconst initState = {\n  isLoadingCard: true,\n  isGiftNotification:false,\n  isLoadingStamps: false,\n  error: false,\n  card: {\n    urlClientImg: \"\",\n    previousPointCount: 0,\n    currentPointCount: null,\n    clientName: \"\",\n    totalPointCount: null,\n    templateRef: { imageLogo: { url: \"\" }, totalStepCount: null },\n    stamps: [],\n    rewardSteps: [],\n    isLoadingRewards: false,\n    newRewards: [],\n    rewardIds: [],\n    oldRewardIds: [],\n  },\n  cards: [],\n  cardElments:[],\n  selectedCardIndex:0,\n  isLoadinLoyaltyCards: false,\n  qrscanMode: 'qrcodescan',\n  showPopUp:false,\n  hasValue:false,\n  isValidationSucceedWithGift:false\n};\n\nexport default function homeReducer(state = initState, action) {\n  switch (action.type) {\n    case FETCH_LOYALTYCARD_REQUEST:\n      return {\n        ...state,\n        error: false,\n        isLoadingCard: true\n      };\n    case FETCH_LOYALTYCARD_FAILURE:\n      return {\n        ...state,\n        error: true,\n        isLoadingCard: false\n      };\n    case FETCH_LOYALTYCARD_SUCCESS:\n      return {\n        ...state,\n        error: false,\n        card: { ...state.card, ...action.payload },\n        isLoadingCard: false,\n        cardId: state.card.Id\n      };\n    case SELECT_LOYALTYCARD:\n        return {\n          ...state,\n          card: { ...state.card, ...state.cards[action.payload].toJSON(),   stamps: [],\n            rewardSteps: [],\n            isLoadingRewards: false },\n          cardId: state.card.id,\n          selectedCardIndex:action.payload\n        }\n    case FETCH_STAMP_REQUEST:\n      return {\n        ...state,\n        error: false,\n        isLoadingStamps: true\n      };\n    case FETCH_STAMP_SUCCESS:\n      return {\n        ...state,\n        error: false,\n        card: { ...state.card, stamps: action.payload },\n        isLoadingStamps: false\n      };\n    case FETCH_REWARDS_SUCCESS:\n      return {\n        ...state,\n        error: false,\n        card: { ...state.card, rewardSteps: action.payload },\n        isLoadingRewards: false\n      };\n    case FETCH_REWARDS_REQUEST:\n      return {\n        ...state,\n        isLoadingRewards: true\n      }\n    case FETCH_STAMP_FAILURE:\n      return {\n        ...state,\n        error: true,\n        isLoadingStamps: false\n      };\n    case RECEIVE_CACHED_CARD:\n      return {\n        ...state,\n        card: { ...state.card, ...action.payload }\n      };\n    case GENERATE_CARD_REQUEST:\n      return {\n        ...state,\n        isGeneratingCARD: true\n      };\n    case GENERATE_CARD_SUCCESS:\n      return {\n        ...state,\n        token: action.payload,\n        isGeneratingCard: false\n      };\n    case GENERATE_CARD_FAILURE:\n      return {\n        ...state,\n        isGeneratingCARD: false,\n        hasError: true,\n        isFetchingCard: false,\n        error: action.error,\n      };\n    case LOAD_LOYALTYCARDS_REQUEST:\n      return {\n        ...state,\n        isLoadinLoyaltyCards: true\n      };\n    case LOAD_LOYALTYCARDS_SUCCESS:\n      return {\n        ...state,\n        isLoadinLoyaltyCards: false,\n        cards: action.payload.cards,\n        cardElments:action.payload.cardElments\n      };\n    case LOAD_LOYALTYCARDS_FAILURE:\n      return {\n        ...state,\n        isLoadinLoyaltyCards: false,\n        error: action.payload.error\n      };\n    case CHANGE_QRMODE:\n        return {\n          ...state,\n          qrscanMode:action.payload\n        };\n    case ADD_STAMP_BY_VALIDATION_LINK_RESET:\n          return {\n            ...state,\n            isValidationSucceed:false,\n            isValidationSucceedWithGift:false,\n            hasValue:false\n          };\n    case ADD_STAMP_BY_VALIDATION_LINK_SUCCESS:\n          return {\n            ...state,\n            isValidationSucceed:true,\n            hasValue:true\n          };\n    case ADD_STAMP_BY_VALIDATION_LINK_WITH_GIFT_SUCCESS:\n      return {\n        ...state,\n        isValidationSucceedWithGift:true,\n        hasValue:true\n      }\n    case ADD_STAMP_BY_VALIDATION_LINK_FAILURE:\n            return {\n              ...state,\n              isValidationSucceed:false,\n              hasValue:true\n            };\n    case SET_CURRENT_ID_CAMPAIGN:\n          return{\n            ...state,\n            currentInstaltionId:action.payload\n          }\n    case SET_MENU_TARGET:\n      return {\n        ...state,\n        isGiftNotification:action.payload\n      }\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}