{"ast":null,"code":"var _jsxFileName = \"/Users/blackjmxx/Devs/LiskRide/src/pages/SettingsPage/index.js\";\nimport React, { Component } from \"react\";\nimport { User } from \"parse\";\nimport { getCardId } from \"../../utils/storage\";\nimport Loadable from 'react-loadable';\nimport IntroSlider from \"react-intro-slider\";\nimport { isManifestSetted, setClientManifest } from \"../../utils/storage\";\nimport MenuBar from \"../../components/MenuBar/Menubar\";\nimport RequireAuth from \"./RequireAuth\";\nimport { Theme } from \"../../components/Theme\";\nimport { title, nextButton, skipButton, dotActive, dotInactive, description, slideStyle, sliderStyle } from \"../../components/HomePage/styles\";\nimport { FormattedMessage } from 'react-intl';\nconst slides = [{\n  title: /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"slides.loylatyRewaredTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }),\n  description: /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"slides.loylatyRewaredDescription\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }),\n  background: Theme.cyan10,\n  image: require(\"../../assets/images/SplashScreen/secondImage.svg\")\n}, {\n  title: /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"slides.scanLoyaltyTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }\n  }),\n  description: /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"slides.scanLoyaltyDescription\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 18\n    }\n  }),\n  background: Theme.cyan10,\n  image: require(\"../../assets/images/SplashScreen/thirdImage.svg\")\n}, {\n  title: /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"slides.earnDiscountTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }\n  }),\n  background: Theme.cyan10,\n  image: require(\"../../assets/images/SplashScreen/fourthImage.svg\"),\n  description: /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"slides.earnDiscountDescription\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 18\n    }\n  })\n}];\nconst UserParse = User.extend(\"User\");\nconst UserInformationLoadable = Loadable({\n  loader: () => import('./UserInformations'),\n  loading: () => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 18\n    }\n  }, \"...\")\n});\n\nclass SettingsPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      sliderIsOpen: false,\n      moveToRegister: false\n    };\n\n    this.componentDidMount = () => {\n      const {\n        fakeId\n      } = this.props;\n      UserInformationLoadable.preload();\n\n      if (fakeId) {//this.props.loadLoyaltyFakeCard(fakeId);\n      } else {\n        getCardId().then(cardId => {// alert('afterCardId :' +cardId)\n          // let localToken = token || cardId;\n          //this.props.loadLoyaltyCard(localToken);\n        });\n      }\n\n      if (UserParse.current() && !this.props.user) {\n        this.props.receiveUserLogIn(UserParse.current().toJSON());\n        this.props.loadLoyaltyCards(UserParse.current());\n      }\n\n      if (!isManifestSetted()) {\n        this.setState({\n          sliderIsOpen: true\n        });\n      }\n    };\n\n    this.handleSelectCard = index => {\n      this.props.selectAndChangeCardId(index);\n    };\n\n    this.installAppHandler = () => {\n      if (!this.state.InstallationPopup) {\n        this.setState({\n          InstallationPopup: true\n        });\n        return;\n      }\n\n      this.setState({\n        InstallationPopup: false\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        sliderIsOpen: false,\n        moveToRegister: true\n      });\n      setClientManifest();\n    };\n  }\n\n  render() {\n    const {\n      moveToRegister\n    } = this.state;\n\n    if (this.state.sliderIsOpen) {\n      return /*#__PURE__*/React.createElement(IntroSlider, {\n        sliderIsOpen: this.state.sliderIsOpen,\n        slides: slides,\n        size: \"fullscreen\",\n        skipButton: true,\n        handleClose: this.handleClose,\n        handleDone: this.handleClose,\n        titleStyle: title,\n        descriptionStyle: description,\n        className: \"intro-slider\",\n        nextLabel: /*#__PURE__*/React.createElement(FormattedMessage, {\n          id: \"slides.next\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 22\n          }\n        }),\n        doneLabel: /*#__PURE__*/React.createElement(FormattedMessage, {\n          id: \"slides.next\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 22\n          }\n        }),\n        skipLabel: /*#__PURE__*/React.createElement(FormattedMessage, {\n          id: \"slides.end\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 22\n          }\n        }),\n        sliderStyle: sliderStyle,\n        slideStyle: slideStyle,\n        nextButtonStyle: nextButton,\n        skipButtonStyle: skipButton,\n        controllerIconActiveStyle: dotActive,\n        controllerIconInactiveStyle: dotInactive,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 9\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(RequireAuth, Object.assign({\n      moveToRegister: moveToRegister\n    }, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }\n    }), !this.state.sliderIsOpen && /*#__PURE__*/React.createElement(UserInformationLoadable, Object.assign({}, this.props, {\n      handleSelectCard: this.handleSelectCard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 40\n      }\n    })), /*#__PURE__*/React.createElement(MenuBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default SettingsPage;","map":{"version":3,"sources":["/Users/blackjmxx/Devs/LiskRide/src/pages/SettingsPage/index.js"],"names":["React","Component","User","getCardId","Loadable","IntroSlider","isManifestSetted","setClientManifest","MenuBar","RequireAuth","Theme","title","nextButton","skipButton","dotActive","dotInactive","description","slideStyle","sliderStyle","FormattedMessage","slides","background","cyan10","image","require","UserParse","extend","UserInformationLoadable","loader","loading","SettingsPage","state","sliderIsOpen","moveToRegister","componentDidMount","fakeId","props","preload","then","cardId","current","user","receiveUserLogIn","toJSON","loadLoyaltyCards","setState","handleSelectCard","index","selectAndChangeCardId","installAppHandler","InstallationPopup","handleClose","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,OAArB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,SACEC,gBADF,EAEEC,iBAFF,QAGO,qBAHP;AAKA,OAAOC,OAAP,MAAoB,kCAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,KAAT,QAAsB,wBAAtB;AAEA,SACEC,KADF,EAEEC,UAFF,EAGEC,UAHF,EAIEC,SAJF,EAKEC,WALF,EAMEC,WANF,EAOEC,UAPF,EAQEC,WARF,QASO,kCATP;AAUA,SAASC,gBAAT,QAAiC,YAAjC;AAEA,MAAMC,MAAM,GAAG,CACb;AACET,EAAAA,KAAK,eAAC,oBAAC,gBAAD;AAAkB,IAAA,EAAE,EAAE,4BAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADR;AAEEK,EAAAA,WAAW,eAAC,oBAAC,gBAAD;AAAkB,IAAA,EAAE,EAAE,kCAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFd;AAGEK,EAAAA,UAAU,EAAEX,KAAK,CAACY,MAHpB;AAIEC,EAAAA,KAAK,EAAEC,OAAO,CAAC,kDAAD;AAJhB,CADa,EAOb;AACEb,EAAAA,KAAK,eAAE,oBAAC,gBAAD;AAAkB,IAAA,EAAE,EAAE,yBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADT;AAEEK,EAAAA,WAAW,eAAE,oBAAC,gBAAD;AAAkB,IAAA,EAAE,EAAE,+BAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFf;AAGEK,EAAAA,UAAU,EAAEX,KAAK,CAACY,MAHpB;AAIEC,EAAAA,KAAK,EAAEC,OAAO,CAAC,iDAAD;AAJhB,CAPa,EAab;AACEb,EAAAA,KAAK,eAAE,oBAAC,gBAAD;AAAkB,IAAA,EAAE,EAAE,0BAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADT;AAEEU,EAAAA,UAAU,EAAEX,KAAK,CAACY,MAFpB;AAGEC,EAAAA,KAAK,EAAEC,OAAO,CAAC,kDAAD,CAHhB;AAIER,EAAAA,WAAW,eAAE,oBAAC,gBAAD;AAAkB,IAAA,EAAE,EAAE,gCAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJf,CAba,CAAf;AAqBA,MAAMS,SAAS,GAAGvB,IAAI,CAACwB,MAAL,CAAY,MAAZ,CAAlB;AAEA,MAAMC,uBAAuB,GAAGvB,QAAQ,CAAC;AACvCwB,EAAAA,MAAM,EAAE,MAAM,OAAO,oBAAP,CADyB;AAEvCC,EAAAA,OAAO,EAAE,mBAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFwB,CAAD,CAAxC;;AAIA,MAAMC,YAAN,SAA2B7B,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACnC8B,KADmC,GAC3B;AACNC,MAAAA,YAAY,EAAE,KADR;AAENC,MAAAA,cAAc,EAAE;AAFV,KAD2B;;AAAA,SAKnCC,iBALmC,GAKf,MAAM;AACxB,YAAM;AAAEC,QAAAA;AAAF,UAAa,KAAKC,KAAxB;AACAT,MAAAA,uBAAuB,CAACU,OAAxB;;AACA,UAAIF,MAAJ,EAAY,CACV;AACD,OAFD,MAEO;AACLhC,QAAAA,SAAS,GAAGmC,IAAZ,CAAiBC,MAAM,IAAI,CACzB;AACA;AACA;AACD,SAJD;AAKD;;AACD,UAAId,SAAS,CAACe,OAAV,MAAuB,CAAC,KAAKJ,KAAL,CAAWK,IAAvC,EAA6C;AAC3C,aAAKL,KAAL,CAAWM,gBAAX,CAA4BjB,SAAS,CAACe,OAAV,GAAoBG,MAApB,EAA5B;AACA,aAAKP,KAAL,CAAWQ,gBAAX,CAA4BnB,SAAS,CAACe,OAAV,EAA5B;AACD;;AACD,UAAI,CAAClC,gBAAgB,EAArB,EAAyB;AACvB,aAAKuC,QAAL,CAAc;AAAEb,UAAAA,YAAY,EAAE;AAAhB,SAAd;AACD;AACF,KAxBkC;;AAAA,SA0BnCc,gBA1BmC,GA0BhBC,KAAK,IAAI;AAC1B,WAAKX,KAAL,CAAWY,qBAAX,CAAiCD,KAAjC;AACD,KA5BkC;;AAAA,SA8BnCE,iBA9BmC,GA8Bf,MAAM;AACxB,UAAI,CAAC,KAAKlB,KAAL,CAAWmB,iBAAhB,EAAmC;AACjC,aAAKL,QAAL,CAAc;AAAEK,UAAAA,iBAAiB,EAAE;AAArB,SAAd;AACA;AACD;;AACD,WAAKL,QAAL,CAAc;AAAEK,QAAAA,iBAAiB,EAAE;AAArB,OAAd;AACD,KApCkC;;AAAA,SAsCnCC,WAtCmC,GAsCrB,MAAM;AAClB,WAAKN,QAAL,CAAc;AAAEb,QAAAA,YAAY,EAAE,KAAhB;AAAuBC,QAAAA,cAAc,EAAE;AAAvC,OAAd;AACA1B,MAAAA,iBAAiB;AAClB,KAzCkC;AAAA;;AA2CnC6C,EAAAA,MAAM,GAAG;AACP,UAAM;AAACnB,MAAAA;AAAD,QAAmB,KAAKF,KAA9B;;AACA,QAAI,KAAKA,KAAL,CAAWC,YAAf,EAA6B;AAC3B,0BACE,oBAAC,WAAD;AACE,QAAA,YAAY,EAAE,KAAKD,KAAL,CAAWC,YAD3B;AAEE,QAAA,MAAM,EAAEZ,MAFV;AAGE,QAAA,IAAI,EAAC,YAHP;AAIE,QAAA,UAAU,MAJZ;AAKE,QAAA,WAAW,EAAE,KAAK+B,WALpB;AAME,QAAA,UAAU,EAAE,KAAKA,WANnB;AAOE,QAAA,UAAU,EAAExC,KAPd;AAQE,QAAA,gBAAgB,EAAEK,WARpB;AASE,QAAA,SAAS,EAAC,cATZ;AAUE,QAAA,SAAS,eAAE,oBAAC,gBAAD;AAAkB,UAAA,EAAE,EAAE,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAVb;AAWE,QAAA,SAAS,eAAE,oBAAC,gBAAD;AAAkB,UAAA,EAAE,EAAE,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAXb;AAYE,QAAA,SAAS,eAAE,oBAAC,gBAAD;AAAkB,UAAA,EAAE,EAAE,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAZb;AAaE,QAAA,WAAW,EAAEE,WAbf;AAcE,QAAA,UAAU,EAAED,UAdd;AAeE,QAAA,eAAe,EAAEL,UAfnB;AAgBE,QAAA,eAAe,EAAEC,UAhBnB;AAiBE,QAAA,yBAAyB,EAAEC,SAjB7B;AAkBE,QAAA,2BAA2B,EAAEC,WAlB/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAsBD;;AACD,wBACE,uDACE,oBAAC,WAAD;AAAa,MAAA,cAAc,EAAEkB;AAA7B,OAAiD,KAAKG,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACG,CAAC,KAAKL,KAAL,CAAWC,YAAZ,iBAA4B,oBAAC,uBAAD,oBAA6B,KAAKI,KAAlC;AAAyC,MAAA,gBAAgB,EAAE,KAAKU,gBAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAD/B,eAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CADF;AAQD;;AA7EkC;;AAgFrC,eAAehB,YAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { User } from \"parse\";\nimport { getCardId } from \"../../utils/storage\";\nimport Loadable from 'react-loadable';\nimport IntroSlider from \"react-intro-slider\";\nimport {\n  isManifestSetted,\n  setClientManifest,\n} from \"../../utils/storage\";\n\nimport MenuBar from \"../../components/MenuBar/Menubar\";\nimport RequireAuth from \"./RequireAuth\";\nimport { Theme } from \"../../components/Theme\";\n\nimport {\n  title,\n  nextButton,\n  skipButton,\n  dotActive,\n  dotInactive,\n  description,\n  slideStyle,\n  sliderStyle,\n} from \"../../components/HomePage/styles\";\nimport { FormattedMessage } from 'react-intl';\n\nconst slides = [\n  {\n    title:<FormattedMessage id={\"slides.loylatyRewaredTitle\"} />,\n    description:<FormattedMessage id={\"slides.loylatyRewaredDescription\"} />,\n    background: Theme.cyan10,\n    image: require(\"../../assets/images/SplashScreen/secondImage.svg\")\n  },\n  {\n    title: <FormattedMessage id={\"slides.scanLoyaltyTitle\"} />,\n    description: <FormattedMessage id={\"slides.scanLoyaltyDescription\"} />,\n    background: Theme.cyan10,\n    image: require(\"../../assets/images/SplashScreen/thirdImage.svg\")\n  },\n  {\n    title: <FormattedMessage id={\"slides.earnDiscountTitle\"} />,\n    background: Theme.cyan10,\n    image: require(\"../../assets/images/SplashScreen/fourthImage.svg\"),\n    description: <FormattedMessage id={\"slides.earnDiscountDescription\"} />\n  }\n];\n\nconst UserParse = User.extend(\"User\");\n\nconst UserInformationLoadable = Loadable({\n  loader: () => import('./UserInformations'),\n  loading: () => <div>...</div>\n});\nclass SettingsPage extends Component {\n  state = {\n    sliderIsOpen: false,\n    moveToRegister: false\n  };\n  componentDidMount = () => {\n    const { fakeId } = this.props;\n    UserInformationLoadable.preload();\n    if (fakeId) {\n      //this.props.loadLoyaltyFakeCard(fakeId);\n    } else {\n      getCardId().then(cardId => {\n        // alert('afterCardId :' +cardId)\n        // let localToken = token || cardId;\n        //this.props.loadLoyaltyCard(localToken);\n      });\n    }\n    if (UserParse.current() && !this.props.user) {\n      this.props.receiveUserLogIn(UserParse.current().toJSON());\n      this.props.loadLoyaltyCards(UserParse.current());\n    }\n    if (!isManifestSetted()) {\n      this.setState({ sliderIsOpen: true });\n    }\n  };\n\n  handleSelectCard = index => {\n    this.props.selectAndChangeCardId(index);\n  };\n\n  installAppHandler = () => {\n    if (!this.state.InstallationPopup) {\n      this.setState({ InstallationPopup: true });\n      return;\n    }\n    this.setState({ InstallationPopup: false });\n  }\n\n  handleClose = () => {\n    this.setState({ sliderIsOpen: false, moveToRegister: true });\n    setClientManifest();\n  };\n\n  render() {\n    const {moveToRegister} = this.state;\n    if (this.state.sliderIsOpen) {\n      return (\n        <IntroSlider\n          sliderIsOpen={this.state.sliderIsOpen}\n          slides={slides}\n          size=\"fullscreen\"\n          skipButton\n          handleClose={this.handleClose}\n          handleDone={this.handleClose}\n          titleStyle={title}\n          descriptionStyle={description}\n          className=\"intro-slider\"\n          nextLabel={<FormattedMessage id={\"slides.next\"} />}\n          doneLabel={<FormattedMessage id={\"slides.next\"} />}\n          skipLabel={<FormattedMessage id={\"slides.end\"} />}\n          sliderStyle={sliderStyle}\n          slideStyle={slideStyle}\n          nextButtonStyle={nextButton}\n          skipButtonStyle={skipButton}\n          controllerIconActiveStyle={dotActive}\n          controllerIconInactiveStyle={dotInactive}\n        />\n      );\n    }\n    return (\n      <>\n        <RequireAuth moveToRegister={moveToRegister} {...this.props}>\n          {!this.state.sliderIsOpen && <UserInformationLoadable {...this.props} handleSelectCard={this.handleSelectCard}/>} \n          <MenuBar />\n        </RequireAuth>\n      </>\n    );\n  }\n}\n\nexport default SettingsPage;\n"]},"metadata":{},"sourceType":"module"}