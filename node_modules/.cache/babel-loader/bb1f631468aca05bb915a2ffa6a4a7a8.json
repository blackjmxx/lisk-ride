{"ast":null,"code":"var _jsxFileName = \"/Users/blackjmxx/Devs/LiskRide/src/pages/SettingsPage/LoginForm/index.js\";\nimport React, { Component } from \"react\";\nimport { LoadableGoogleLogin, LoadableFacebookLogin } from \"./Loadable\"; // import AppleLogin from 'react-apple-login'\n\nimport LoginTab from \"./LoginTab/LoginTab\";\nimport RegisterTab from \"./RegisterTab/RegisterTab\";\nimport \"./styles.css\";\nimport { LoginRegisterHeader } from \"../../../components/LoginRegisterHeader/LoginRegisterHeader\";\nimport { LoginViewContainer, TitleContainer, TitleBottomContent, ButtonContainer, BottomLoginContainer, ErrorInformationContent, ErrorContainer, LinkForgotPassword, WarningInformationContainer, IconContainer, WarningIcon, WarningImageContainer, WarningText, WarningContentContainer, PersonIcon } from \"./style\";\nimport MenuBar from '../../../components/MenuBar/Menubar'; // import { RegisterPopup } from \"../../../components/RegisterPopup/RegisterPopup\";\n\nimport warningIcon from \"../../../assets/icons/warningIcon.svg\";\nimport personImg from \"../../../assets/images/person.svg\";\nimport { FormattedMessage } from 'react-intl';\n\nclass LoginForm extends Component {\n  constructor(_props) {\n    super(_props);\n    this.tabs = [{\n      menuItem: /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"paramsPage.login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }\n      }),\n      render: props => /*#__PURE__*/React.createElement(LoginTab, Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 81\n        }\n      }))\n    }, {\n      menuItem: /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"paramsPage.register\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }\n      }),\n      render: props => /*#__PURE__*/React.createElement(RegisterTab, Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 83\n        }\n      }))\n    }];\n\n    this.responseFacebook = (authData, props) => {\n      const {\n        email,\n        userID,\n        name\n      } = authData;\n      props.registerUserProfile(email, name, userID, \"facebook\", {\n        \"access_token\": authData.accessToken,\n        \"id\": authData.userID\n      }, this.props.history);\n    };\n\n    this.responseGoogle = (response, props) => {\n      debugger;\n      const {\n        email,\n        googleId,\n        givenName\n      } = response.profileObj;\n      props.registerUserProfile(email, givenName, googleId, \"google\", {\n        \"access_token\": response.accessToken,\n        \"id\": response.profileObj.googleId\n      }, this.props.history);\n    };\n\n    this.handleRegister = () => {\n      // if (!this.state.showRegisterModal) {\n      //   this.setState({ showRegisterModal: true });\n      //   return;\n      // }\n      // this.setState({ showRegisterModal: false });\n      const {\n        email,\n        password,\n        password2\n      } = this.state;\n\n      if (password !== password2) {\n        return this.props.displayError({\n          message: \"Password not match\"\n        });\n      }\n\n      const {\n        objectId\n      } = this.props.card;\n      this.props.registerUser(email, password, objectId, this.props.history);\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleLogin = () => {\n      const {\n        email,\n        password\n      } = this.state;\n      const {\n        objectId\n      } = this.props.card;\n      this.props.logIn(email, password, objectId, this.props.history);\n    };\n\n    this.handleForgotPassword = () => {\n      this.props.history.push('/home/forgotPassword');\n    };\n\n    this.isLoginTabActive = () => this.state.activeTab === this.tabs[0].menuItem;\n\n    this.changeTab = activeTab => this.setState({\n      activeTab\n    });\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      password2: \"\",\n      activeTab: this.tabs[0].menuItem,\n      showRegisterModal: false\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.moveToRegister) {\n      this.setState({\n        activeTab: this.tabs[1].menuItem\n      });\n    }\n  }\n\n  render() {\n    const {\n      error,\n      isLoadingUser,\n      isVerified = true\n    } = this.props;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(LoginRegisterHeader, {\n      tabs: this.tabs,\n      changeTab: this.changeTab,\n      activeTab: this.state.activeTab,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(LoginViewContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }\n    }, this.isLoginTabActive() ? /*#__PURE__*/React.createElement(WarningInformationContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(IconContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(WarningIcon, {\n      src: warningIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(WarningContentContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(WarningText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"paramsPage.bannerMessagePart2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 24\n      }\n    }))), /*#__PURE__*/React.createElement(WarningImageContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(PersonIcon, {\n      src: personImg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }\n    }))) : null, /*#__PURE__*/React.createElement(ErrorContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ErrorInformationContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }\n    }, error && error.message, !isVerified && /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"global.notVerified\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 27\n      }\n    }))), this.isLoginTabActive() ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(LoginTab, {\n      loading: isLoadingUser,\n      handleRegister: this.handleRegister,\n      handleLogin: this.handleLogin,\n      handleChange: this.handleChange,\n      email: this.state.email,\n      password: this.state.password,\n      password2: this.state.password2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(LinkForgotPassword, {\n      onClick: this.handleForgotPassword,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"global.forgotPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 67\n      }\n    }))) : /*#__PURE__*/React.createElement(RegisterTab, {\n      loading: isLoadingUser,\n      handleRegister: this.handleRegister,\n      handleLogin: this.handleLogin,\n      handleChange: this.handleChange,\n      email: this.state.email,\n      password: this.state.password,\n      password2: this.state.password2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(BottomLoginContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TitleContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TitleBottomContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"global.or\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }\n    }), \" \", this.isLoginTabActive() ? /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"global.login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 78\n      }\n    }) : /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"global.register\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 121\n      }\n    }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"paramsPage.with\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 166\n      }\n    }))), /*#__PURE__*/React.createElement(ButtonContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }\n    }))), /*#__PURE__*/React.createElement(MenuBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/blackjmxx/Devs/LiskRide/src/pages/SettingsPage/LoginForm/index.js"],"names":["React","Component","LoadableGoogleLogin","LoadableFacebookLogin","LoginTab","RegisterTab","LoginRegisterHeader","LoginViewContainer","TitleContainer","TitleBottomContent","ButtonContainer","BottomLoginContainer","ErrorInformationContent","ErrorContainer","LinkForgotPassword","WarningInformationContainer","IconContainer","WarningIcon","WarningImageContainer","WarningText","WarningContentContainer","PersonIcon","MenuBar","FormattedMessage","LoginForm","constructor","props","tabs","menuItem","render","responseFacebook","authData","email","userID","name","registerUserProfile","accessToken","history","responseGoogle","response","googleId","givenName","profileObj","handleRegister","password","password2","state","displayError","message","objectId","card","registerUser","handleChange","e","setState","target","value","handleLogin","logIn","handleForgotPassword","push","isLoginTabActive","activeTab","changeTab","showRegisterModal","componentDidMount","moveToRegister","error","isLoadingUser","isVerified","warningIcon","personImg"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport { LoadableGoogleLogin, LoadableFacebookLogin } from \"./Loadable\";\n// import AppleLogin from 'react-apple-login'\n\nimport LoginTab from \"./LoginTab/LoginTab\";\nimport RegisterTab from \"./RegisterTab/RegisterTab\";\n\nimport \"./styles.css\";\nimport { LoginRegisterHeader } from \"../../../components/LoginRegisterHeader/LoginRegisterHeader\";\nimport {LoginViewContainer, TitleContainer, TitleBottomContent, ButtonContainer, BottomLoginContainer, ErrorInformationContent, ErrorContainer, LinkForgotPassword, WarningInformationContainer, IconContainer, WarningIcon, WarningImageContainer, WarningText, WarningContentContainer, PersonIcon } from \"./style\";\nimport MenuBar from '../../../components/MenuBar/Menubar';\n// import { RegisterPopup } from \"../../../components/RegisterPopup/RegisterPopup\";\nimport warningIcon from '../../../assets/icons/warningIcon.svg';\nimport personImg from '../../../assets/images/person.svg';\nimport { FormattedMessage } from 'react-intl';\n\nclass LoginForm extends Component {\n  tabs = [\n    { menuItem: <FormattedMessage id={\"paramsPage.login\"} />,  render: props => <LoginTab {...props} /> },\n    { menuItem: <FormattedMessage id={\"paramsPage.register\"} />, render: props => <RegisterTab {...props} /> }\n  ];\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      password2: \"\",\n      activeTab: this.tabs[0].menuItem,\n      showRegisterModal: false,\n    };\n  }\n\n  responseFacebook = (authData, props) => {\n    const { email, userID, name } = authData;\n\n    props.registerUserProfile(email, name, userID, \"facebook\",\n    { \n      \"access_token\":authData.accessToken,\n      \"id\":authData.userID\n      },this.props.history);\n  };\n\n  responseGoogle = (response, props) => {\n    debugger;\n    const { email, googleId, givenName } = response.profileObj;\n    props.registerUserProfile(email, givenName, googleId, \"google\", \n    {\n      \"access_token\":response.accessToken,\n      \"id\":response.profileObj.googleId\n      }\n      , this.props.history);\n  };\n\n  handleRegister = () => {\n    // if (!this.state.showRegisterModal) {\n    //   this.setState({ showRegisterModal: true });\n    //   return;\n    // }\n\n    // this.setState({ showRegisterModal: false });\n\n    const { email, password, password2 }  = this.state;\n\n    if (password !== password2) {\n      return this.props.displayError({ message: \"Password not match\" });\n    }\n\n    const { objectId } = this.props.card;\n    this.props.registerUser(email, password, objectId, this.props.history);\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  handleLogin = () => {\n    const { email, password } = this.state;\n    const { objectId } = this.props.card;\n    this.props.logIn(email, password, objectId, this.props.history);\n  };\n\n  handleForgotPassword = () => {\n    this.props.history.push('/home/forgotPassword');\n  }\n\n  isLoginTabActive = () => this.state.activeTab === this.tabs[0].menuItem\n\n  changeTab = (activeTab) => this.setState({ activeTab });\n\n  componentDidMount() {\n    if (this.props.moveToRegister) {\n      this.setState({\n        activeTab: this.tabs[1].menuItem\n      })\n    }\n  }\n\n  render() {\n    const { error, isLoadingUser, isVerified = true } = this.props;\n    \n    return (\n      <>\n      {/* {this.state.showRegisterModal && <RegisterPopup handleRegister={this.handleRegister} closeModalHandler={() => this.setState({ showRegisterModal: false })}/>} */}\n      <LoginRegisterHeader tabs={this.tabs} changeTab={this.changeTab} activeTab={this.state.activeTab} />\n      <LoginViewContainer>\n      { this.isLoginTabActive()\n      ?\n      <WarningInformationContainer>\n        <IconContainer>\n          <WarningIcon src={warningIcon} />\n        </IconContainer>\n        <WarningContentContainer>\n          <WarningText><FormattedMessage id={\"paramsPage.bannerMessagePart2\"} /></WarningText>\n        </WarningContentContainer>\n        <WarningImageContainer>\n          <PersonIcon src={personImg}/>\n        </WarningImageContainer>\n      </WarningInformationContainer>\n      :\n      null}\n      <ErrorContainer>\n        <ErrorInformationContent>\n          {error && error.message}\n          {!isVerified && <FormattedMessage id={\"global.notVerified\"} />}\n        </ErrorInformationContent>\n      </ErrorContainer>\n      { this.isLoginTabActive() ?\n        <>\n          <LoginTab\n              loading={isLoadingUser}\n            handleRegister={this.handleRegister}\n            handleLogin={this.handleLogin}\n            handleChange={this.handleChange}\n            email={this.state.email}\n            password={this.state.password}\n            password2={this.state.password2} />\n          <LinkForgotPassword onClick={this.handleForgotPassword}><FormattedMessage id={\"global.forgotPassword\"} /></LinkForgotPassword>\n        </>\n        :\n        <RegisterTab\n            loading={isLoadingUser}\n        handleRegister={this.handleRegister}\n        handleLogin={this.handleLogin}\n        handleChange={this.handleChange}\n        email={this.state.email}\n        password={this.state.password}\n        password2={this.state.password2} />\n       }\n      <BottomLoginContainer>\n        <TitleContainer>\n          <TitleBottomContent>\n            <FormattedMessage id={\"global.or\"} /> {this.isLoginTabActive() ? <FormattedMessage id={\"global.login\"} /> : <FormattedMessage id={\"global.register\"} />} <FormattedMessage id={\"paramsPage.with\"} />\n          </TitleBottomContent>\n        </TitleContainer>\n        <ButtonContainer>\n        </ButtonContainer>\n      </BottomLoginContainer>\n      </LoginViewContainer>\n      <MenuBar/>\n      </>\n    );\n  }\n}\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}