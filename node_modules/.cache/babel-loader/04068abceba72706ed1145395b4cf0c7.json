{"ast":null,"code":"var _jsxFileName = \"/Users/blackjmxx/Devs/LiskRide/src/components/MenuBar/Menubar.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Item, Menu } from 'semantic-ui-react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\nimport { SvgIcon } from '../SvgIcon/SvgIcon';\nimport { cardIcon } from '../../assets/icons/cardIcon';\nimport { scanIcon } from '../../assets/icons/scanIcon';\nimport { ActiveTitle, menuBarStyle, MenuLinkStyles, Title } from './styles';\n\nclass TabBarRow extends Component {\n  constructor(props) {\n    super(props);\n    this.statete = {\n      timeout: 3000\n    };\n    this.idleTimer = null;\n  }\n\n  render() {\n    const menus = [{\n      path: '/home',\n      name: 'home',\n      label: /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"menu.cards\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 22\n        }\n      }),\n      icon: cardIcon\n    }, {\n      path: '/home/card',\n      name: 'scan',\n      label: /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"menu.scan\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }\n      }),\n      icon: scanIcon\n    }, {\n      path: '/home/gifts',\n      name: 'offer',\n      label: /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"menu.gifts\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 22\n        }\n      }),\n      icon: giftIcon,\n      dotted: this.props.isGiftNotification\n    }, {\n      path: '/home/infos',\n      name: 'notifications',\n      label: /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"menu.notif\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 22\n        }\n      }),\n      icon: notificationIcon\n    }, {\n      path: '/home/params',\n      name: 'login',\n      label: /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"menu.account\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 22\n        }\n      }),\n      icon: loginIcon,\n      dotted: false\n    }];\n    const {\n      location\n    } = this.props;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Menu, {\n      style: menuBarStyle,\n      borderless: true,\n      icon: \"labeled\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, menus.map((menu, i) => /*#__PURE__*/React.createElement(Link, {\n      to: menu.path,\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Item, {\n      style: MenuLinkStyles,\n      name: menu.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(SvgIcon, {\n      svgContent: menu.icon,\n      active: location.pathname === menu.path,\n      dotted: menu.dotted,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 27\n      }\n    }), location.pathname === menu.path ? /*#__PURE__*/React.createElement(ActiveTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 35\n      }\n    }, menu.label) : /*#__PURE__*/React.createElement(Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 35\n      }\n    }, menu.label))))));\n  }\n\n}\n\n; // const mapActionCreators = {\n//     addBadgeToMenu\n//   }\n\nconst mapStateTopProps = state => {\n  return {\n    isGiftNotification: state.home.isGiftNotification\n  };\n};\n\nexport default withRouter(connect(mapStateTopProps, null)(TabBarRow));","map":{"version":3,"sources":["/Users/blackjmxx/Devs/LiskRide/src/components/MenuBar/Menubar.js"],"names":["React","Component","connect","Item","Menu","Link","withRouter","FormattedMessage","SvgIcon","cardIcon","scanIcon","ActiveTitle","menuBarStyle","MenuLinkStyles","Title","TabBarRow","constructor","props","statete","timeout","idleTimer","render","menus","path","name","label","icon","giftIcon","dotted","isGiftNotification","notificationIcon","loginIcon","location","map","menu","i","pathname","mapStateTopProps","state","home"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n\nimport { connect } from 'react-redux';\n\nimport {Item, Menu} from 'semantic-ui-react';\n\nimport {Link, withRouter} from 'react-router-dom';\n\nimport { FormattedMessage } from 'react-intl';\n\nimport {SvgIcon} from '../SvgIcon/SvgIcon';\nimport {cardIcon} from '../../assets/icons/cardIcon';\nimport {scanIcon} from '../../assets/icons/scanIcon';\n\nimport {ActiveTitle, menuBarStyle, MenuLinkStyles, Title} from './styles';\n\nclass TabBarRow extends Component {\n    statete = {\n        timeout: 3000,\n    }\n\n    constructor(props) {\n        super(props);\n        this.idleTimer = null;\n      } \n\n  render() {\n      const menus = [\n          {\n              path: '/home',\n              name: 'home',\n              label: <FormattedMessage id={\"menu.cards\"} />,\n              icon: cardIcon\n          },\n          {\n              path: '/home/card',\n              name: 'scan',\n              label:<FormattedMessage id={\"menu.scan\"} />,\n              icon: scanIcon\n          },\n          {\n              path: '/home/gifts',\n              name: 'offer',\n              label: <FormattedMessage id={\"menu.gifts\"} />,\n              icon: giftIcon,\n              dotted: this.props.isGiftNotification\n          },\n          {\n              path: '/home/infos',\n              name: 'notifications',\n              label: <FormattedMessage id={\"menu.notif\"} />,\n              icon: notificationIcon\n          },\n          {\n              path: '/home/params',\n              name: 'login',\n              label: <FormattedMessage id={\"menu.account\"} />,\n              icon: loginIcon,\n              dotted: false\n          }\n      ];\n    const {location} = this.props;\n    return (\n        <>\n        <Menu style={menuBarStyle} borderless={true} icon='labeled'>\n          {\n              menus.map((menu, i) => (\n                  <Link to={menu.path} key={i}>\n                      <Item style={MenuLinkStyles} name={menu.name}>\n                          <SvgIcon svgContent={menu.icon} active={location.pathname === menu.path} dotted={menu.dotted} />\n                          {\n                              location.pathname === menu.path ? (\n                                  <ActiveTitle>{menu.label}</ActiveTitle>\n                              ) : (\n                                  <Title>{menu.label}</Title>\n                              )\n                          }\n                      </Item>\n                  </Link>\n              ))\n          }\n      </Menu>\n        </>\n    );\n  }\n};\n\n// const mapActionCreators = {\n//     addBadgeToMenu\n//   }\n\nconst mapStateTopProps = (state) => {\n    return {\n        isGiftNotification: state.home.isGiftNotification,\n    }\n  }\n\nexport default withRouter(connect(mapStateTopProps, null)(TabBarRow))\n"]},"metadata":{},"sourceType":"module"}