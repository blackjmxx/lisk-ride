{"ast":null,"code":"import { User, Cloud } from \"parse\";\nimport { getCurrentInitializeIdCampaign } from \"../../utils/storage\"; // Constants\n\nexport const FETCH_USERPROFILE_REQUEST = \"FETCH_USERPROFILE_REQUEST\";\nexport const FETCH_USERPROFILE_SUCCESS = \"FETCH_USERPROFILE_SUCCESS\";\nexport const FETCH_USERPROFILE_FAILURE = \"FETCH_USERPROFILE_FAILURE\";\nexport const RECEIVE_USER_LOG_IN = \"RECEIVE_USER_LOG_IN\";\n\nconst fetchUserProfileRequest = () => {\n  return {\n    type: FETCH_USERPROFILE_REQUEST\n  };\n};\n\nconst fetchUserProfileSuccess = payload => {\n  return {\n    type: FETCH_USERPROFILE_SUCCESS,\n    payload: payload\n  };\n};\n\nconst fetchUserProfileFailure = error => {\n  return {\n    type: FETCH_USERPROFILE_FAILURE,\n    error: error\n  };\n};\n\nexport const receiveUserLogIn = (parseUser = {}) => {\n  ;\n  return {\n    type: RECEIVE_USER_LOG_IN,\n    parseUser\n  };\n};\nexport const loadUserProfile = profileId => {\n  return dispatch => {\n    dispatch(fetchUserProfileRequest());\n    Cloud.run(\"loadUserProfile\", {\n      profileId\n    }).then(profile => dispatch(fetchUserProfileSuccess(profile))).catch(err => dispatch(fetchUserProfileFailure(err)));\n  };\n};\nexport const registerUserProfile = (email, name, profileId, providerName, authData, history) => {\n  return dispatch => {\n    const user = new User();\n    dispatch(fetchUserProfileRequest());\n    user.linkWith(providerName, {\n      authData: authData\n    }).then(userR => {\n      let userJSON = userR.toJSON();\n      let templateId = getCurrentInitializeIdCampaign();\n      Cloud.run(\"registerUserProfile\", {\n        username: userJSON.username,\n        templateId,\n        providerName,\n        email,\n        cardUrl: window.location.origin\n      }).then(user => {\n        let userSavedAsJSON = user.toJSON();\n        Cloud.run(\"linkCardToUserProfile\", {\n          email: email,\n          templateId\n        }).then(() => {\n          if (userSavedAsJSON.type !== \"profile\") {\n            User.logOut();\n            dispatch(fetchUserProfileFailure({})); // history.push(\"/home/params\");\n\n            return;\n          } else {\n            ;\n            dispatch(receiveUserLogIn(userSavedAsJSON));\n            history.push(\"/home\");\n          }\n        }).catch(err => {// User.logOut();\n          //dispatch(fetchUserProfileFailure(err));\n          // history.push(\"/home/params\");\n        });\n      }).catch(err => dispatch(fetchUserProfileFailure(err)));\n    }).catch(err => dispatch(fetchUserProfileFailure(err)));\n  };\n};\nexport const registerUser = (email, password, cardId, history) => {\n  return dispatch => {\n    dispatch(fetchUserProfileRequest());\n    User.signUp(email, password, {\n      email,\n      type: \"profile\"\n    }).then(userR => {\n      let userJSON = userR.toJSON();\n      let templateId = getCurrentInitializeIdCampaign();\n      Cloud.run(\"registerUserProfile\", {\n        templateId,\n        username: userJSON.username,\n        email,\n        cardUrl: window.location.origin\n      }).then(user => {\n        let userSavedAsJSON = user.toJSON();\n        Cloud.run(\"linkCardToUserProfile\", {\n          email: email,\n          templateId\n        }).then(() => {\n          if (userSavedAsJSON.type !== \"profile\") {\n            User.logOut();\n            dispatch(fetchUserProfileFailure({})); // history.push(\"/home/params\");\n\n            return;\n          } else {\n            dispatch(receiveUserLogIn(userSavedAsJSON));\n            history.push(\"/home\");\n          }\n        }).catch(err => {// User.logOut();\n          //dispatch(fetchUserProfileFailure(err));\n          // history.push(\"/home/params\");\n        });\n      });\n    }).catch(err => dispatch(fetchUserProfileFailure(err)));\n  };\n};\nexport const logIn = (email, password, cardId, history) => {\n  return dispatch => {\n    dispatch(fetchUserProfileRequest());\n    User.logIn(email, password).then(user => {\n      let userJSON = user.toJSON();\n\n      if (userJSON.type !== \"profile\") {\n        User.logOut();\n        fetchUserProfileFailure({});\n        return;\n      }\n\n      dispatch(receiveUserLogIn(userJSON));\n    }).catch(err => dispatch(fetchUserProfileFailure(err)));\n  };\n};\nexport const displayError = err => {\n  return dispatch => {\n    dispatch(fetchUserProfileFailure(err));\n  };\n};\nexport const linkCardToUserProfile = (user, history, templateId) => {\n  return dispatch => {\n    let userSavedAsJSON = user.toJSON();\n    return Cloud.run(\"linkCardToUserProfile\", {\n      email: userSavedAsJSON.email,\n      templateId\n    }).then(() => {\n      dispatch(receiveUserLogIn(userSavedAsJSON));\n      history.push(\"/home\");\n    }).catch(err => {// User.logOut();\n      //dispatch(fetchUserProfileFailure(err));\n      // history.push(\"/home/params\");\n    });\n    ;\n  };\n};","map":{"version":3,"sources":["/Users/blackjmxx/Devs/LiskRide/src/modules/settings/actions.js"],"names":["User","Cloud","getCurrentInitializeIdCampaign","FETCH_USERPROFILE_REQUEST","FETCH_USERPROFILE_SUCCESS","FETCH_USERPROFILE_FAILURE","RECEIVE_USER_LOG_IN","fetchUserProfileRequest","type","fetchUserProfileSuccess","payload","fetchUserProfileFailure","error","receiveUserLogIn","parseUser","loadUserProfile","profileId","dispatch","run","then","profile","catch","err","registerUserProfile","email","name","providerName","authData","history","user","linkWith","userR","userJSON","toJSON","templateId","username","cardUrl","window","location","origin","userSavedAsJSON","logOut","push","registerUser","password","cardId","signUp","logIn","displayError","linkCardToUserProfile"],"mappings":"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","sourcesContent":["import { User, Cloud } from \"parse\";\nimport { getCurrentInitializeIdCampaign } from \"../../utils/storage\";\n\n// Constants\nexport const FETCH_USERPROFILE_REQUEST = \"FETCH_USERPROFILE_REQUEST\";\nexport const FETCH_USERPROFILE_SUCCESS = \"FETCH_USERPROFILE_SUCCESS\";\nexport const FETCH_USERPROFILE_FAILURE = \"FETCH_USERPROFILE_FAILURE\";\nexport const RECEIVE_USER_LOG_IN = \"RECEIVE_USER_LOG_IN\";\n\nconst fetchUserProfileRequest = () => {\n  return { type: FETCH_USERPROFILE_REQUEST };\n};\n\nconst fetchUserProfileSuccess = payload => {\n  return { type: FETCH_USERPROFILE_SUCCESS, payload: payload };\n};\n\nconst fetchUserProfileFailure = error => {\n  return { type: FETCH_USERPROFILE_FAILURE, error: error };\n};\n\nexport const receiveUserLogIn = (parseUser = {}) => {\n;\n  return { type: RECEIVE_USER_LOG_IN, parseUser };\n};\n\nexport const loadUserProfile = profileId => {\n  return dispatch => {\n    dispatch(fetchUserProfileRequest());\n    Cloud.run(\"loadUserProfile\", { profileId })\n      .then(profile => dispatch(fetchUserProfileSuccess(profile)))\n      .catch(err => dispatch(fetchUserProfileFailure(err)));\n  };\n};\n\nexport const registerUserProfile = (\n  email,\n  name,\n  profileId,\n  providerName,\n  authData,\n  history\n) => {\n  return dispatch => {\n    const user = new User();\n    dispatch(fetchUserProfileRequest());\n    user\n      .linkWith(providerName, { authData: authData })\n      .then(userR => {\n        let userJSON = userR.toJSON();\n        let templateId = getCurrentInitializeIdCampaign();\n        \n        Cloud.run(\"registerUserProfile\", {\n          username: userJSON.username,\n          templateId,\n          providerName,\n          email,\n          cardUrl:window.location.origin\n        })\n          .then(user => {\n            let userSavedAsJSON = user.toJSON();\n            Cloud.run(\"linkCardToUserProfile\", {\n              email: email,\n              templateId\n            })\n              .then(() => {\n                if (userSavedAsJSON.type !== \"profile\") {\n                  User.logOut();\n                  dispatch(fetchUserProfileFailure({}));\n                  // history.push(\"/home/params\");\n                  return;\n                } else {\n                ;\n                  dispatch(receiveUserLogIn(userSavedAsJSON));\n                  history.push(\"/home\");\n                }\n              })\n              .catch(err => {\n                // User.logOut();\n                //dispatch(fetchUserProfileFailure(err));\n                // history.push(\"/home/params\");\n              });\n          })\n          .catch(err => dispatch(fetchUserProfileFailure(err)));\n      })\n      .catch(err => dispatch(fetchUserProfileFailure(err)));\n  };\n};\n\nexport const registerUser = (email, password, cardId, history) => {\n  return dispatch => {\n    dispatch(fetchUserProfileRequest());\n\n    User.signUp(email, password, { email, type: \"profile\" })\n      .then(userR => {\n        let userJSON = userR.toJSON();\n        let templateId = getCurrentInitializeIdCampaign();\n        Cloud.run(\"registerUserProfile\", {\n          templateId,\n          username: userJSON.username,\n          email,\n          cardUrl:window.location.origin\n        }).then(user => {\n          let userSavedAsJSON = user.toJSON();\n          Cloud.run(\"linkCardToUserProfile\", {\n            email: email,\n            templateId\n          })\n            .then(() => {\n              if (userSavedAsJSON.type !== \"profile\") {\n                User.logOut();\n                dispatch(fetchUserProfileFailure({}));\n                // history.push(\"/home/params\");\n                return;\n              } else {\n                dispatch(receiveUserLogIn(userSavedAsJSON));\n                history.push(\"/home\");\n              }\n            })\n            .catch(err => {\n              // User.logOut();\n              //dispatch(fetchUserProfileFailure(err));\n              // history.push(\"/home/params\");\n            });\n        });\n      })\n      .catch(err => dispatch(fetchUserProfileFailure(err)));\n  };\n};\n\nexport const logIn = (email, password, cardId, history) => {\n  return dispatch => {\n    dispatch(fetchUserProfileRequest());\n      User.logIn(email, password)\n          .then(user => {\n              let userJSON = user.toJSON();\n              if (userJSON.type !== \"profile\") {\n                  User.logOut();\n                  fetchUserProfileFailure({});\n                  return;\n              }\n              dispatch(receiveUserLogIn(userJSON));\n          })\n          .catch(err => dispatch(fetchUserProfileFailure(err)));\n  };\n};\n\nexport const displayError = err => {\n  return dispatch => {\n    dispatch(fetchUserProfileFailure(err));\n  };\n};\n\nexport const linkCardToUserProfile = (user, history, templateId) => {\n  return dispatch => {\n    let userSavedAsJSON = user.toJSON();\n\n    return Cloud.run(\"linkCardToUserProfile\", {\n      email: userSavedAsJSON.email,\n      templateId\n    }).then(() => {\n        dispatch(receiveUserLogIn(userSavedAsJSON));\n        history.push(\"/home\");\n    }).catch(err => {\n      // User.logOut();\n      //dispatch(fetchUserProfileFailure(err));\n      // history.push(\"/home/params\");\n    });;\n  };\n};"]},"metadata":{},"sourceType":"module"}