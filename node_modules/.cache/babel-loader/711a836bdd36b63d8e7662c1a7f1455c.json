{"ast":null,"code":"import localforage from \"localforage\";\nconst CARD = \"CARD\";\nconst HAS_RUN = \"UV\";\nconst HAS_MANIFEST = \"HAS_MANIFEST\";\nconst HAS_GIFT_NOTIFICATION = \"HAS_GIFT_NOTIFICATION\";\nconst CARD_ID = \"CARD_ID\";\nconst PROFILE_TOKEN = \"PROFILE_TOKEN\";\nconst CURRENT_INITIALIZE_ID = \"CURRENT_INITIALIZE_ID\";\nconst CURENT_CARD_INDEX = \"CURENT_CARD_INDEX\";\n\nconst configStorage = () => {\n  localforage.config({\n    name: \"uv-db\",\n    version: 1.0,\n    storeName: \"cards\",\n    description: \"Cards\"\n  });\n};\n\nconfigStorage();\nconst isFirstRun = !localStorage.getItem(HAS_RUN);\n\nconst isManifestSetted = () => {\n  return localStorage.getItem(HAS_MANIFEST);\n};\n\nconst hasGiftNotification = () => {\n  return localStorage.getItem(HAS_GIFT_NOTIFICATION) === 1;\n};\n\nconst isFirstRunCard = initTalToken => !localStorage.getItem(HAS_RUN + initTalToken);\n\nconst setAsRun = initTalToken => localStorage.setItem(HAS_RUN + initTalToken, 1); // const setAsRun = (orgGuid, clientGuid, cardGuid) => localStorage.setItem(HAS_RUN+'/'+orgGuid+'/'+clientGuid+'/'+cardGuid, 1)\n\n\nconst getCard = () => localforage.getItem(CARD);\n\nconst saveCard = card => localforage.setItem(CARD, card);\n\nconst saveCardId = cardId => localforage.setItem(CARD_ID, cardId);\n\nconst getCardId = () => localforage.getItem(CARD_ID);\n\nconst setClientManifest = () => localStorage.setItem(HAS_MANIFEST, 1);\n\nconst setGiftNotification = value => localStorage.setItem(HAS_GIFT_NOTIFICATION, value);\n\nconst setProfileToken = token => localforage.setItem(PROFILE_TOKEN, token);\n\nconst getProfileToken = () => localforage.getItem(PROFILE_TOKEN);\n\nconst saveCurrentInitializeIdCampaign = id => localStorage.setItem(CURRENT_INITIALIZE_ID, id);\n\nconst getCurrentInitializeIdCampaign = () => localStorage.getItem(CURRENT_INITIALIZE_ID);\n\nconst setCurrentCardIndex = index => localStorage.setItem(CURENT_CARD_INDEX, index);\n\nconst getCurrentCardIndex = () => localStorage.getItem(CURENT_CARD_INDEX);\n\nexport { getCard, saveCard, isFirstRun, setAsRun, saveCardId, getCardId, isFirstRunCard, setClientManifest, isManifestSetted, setProfileToken, getProfileToken, saveCurrentInitializeIdCampaign, getCurrentInitializeIdCampaign, setCurrentCardIndex, getCurrentCardIndex, hasGiftNotification, setGiftNotification };","map":{"version":3,"sources":["/Users/blackjmxx/Devs/LiskRide/src/utils/storage.js"],"names":["localforage","CARD","HAS_RUN","HAS_MANIFEST","HAS_GIFT_NOTIFICATION","CARD_ID","PROFILE_TOKEN","CURRENT_INITIALIZE_ID","CURENT_CARD_INDEX","configStorage","config","name","version","storeName","description","isFirstRun","localStorage","getItem","isManifestSetted","hasGiftNotification","isFirstRunCard","initTalToken","setAsRun","setItem","getCard","saveCard","card","saveCardId","cardId","getCardId","setClientManifest","setGiftNotification","value","setProfileToken","token","getProfileToken","saveCurrentInitializeIdCampaign","id","getCurrentInitializeIdCampaign","setCurrentCardIndex","index","getCurrentCardIndex"],"mappings":"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","sourcesContent":["import localforage from \"localforage\";\n\nconst CARD = \"CARD\";\nconst HAS_RUN = \"UV\";\nconst HAS_MANIFEST = \"HAS_MANIFEST\";\nconst HAS_GIFT_NOTIFICATION = \"HAS_GIFT_NOTIFICATION\";\nconst CARD_ID = \"CARD_ID\";\nconst PROFILE_TOKEN = \"PROFILE_TOKEN\";\nconst CURRENT_INITIALIZE_ID = \"CURRENT_INITIALIZE_ID\";\nconst CURENT_CARD_INDEX = \"CURENT_CARD_INDEX\";\n\nconst configStorage = () => {\n  localforage.config({\n    name: \"uv-db\",\n    version: 1.0,\n    storeName: \"cards\",\n    description: \"Cards\"\n  });\n};\nconfigStorage();\n\nconst isFirstRun = !localStorage.getItem(HAS_RUN);\n\nconst isManifestSetted = () => {\n  return localStorage.getItem(HAS_MANIFEST);\n};\nconst hasGiftNotification = () => {\n  return localStorage.getItem(HAS_GIFT_NOTIFICATION) === 1;\n}\n\nconst isFirstRunCard = initTalToken =>\n  !localStorage.getItem(HAS_RUN + initTalToken);\n\nconst setAsRun = initTalToken =>\n  localStorage.setItem(HAS_RUN + initTalToken, 1);\n\n// const setAsRun = (orgGuid, clientGuid, cardGuid) => localStorage.setItem(HAS_RUN+'/'+orgGuid+'/'+clientGuid+'/'+cardGuid, 1)\n\nconst getCard = () => localforage.getItem(CARD);\n\nconst saveCard = card => localforage.setItem(CARD, card);\n\nconst saveCardId = cardId => localforage.setItem(CARD_ID, cardId);\n\nconst getCardId = () => localforage.getItem(CARD_ID);\n\nconst setClientManifest = () => localStorage.setItem(HAS_MANIFEST, 1);\n\nconst setGiftNotification = (value) => localStorage.setItem(HAS_GIFT_NOTIFICATION, value);\n\nconst setProfileToken = token => localforage.setItem(PROFILE_TOKEN, token);\n\nconst getProfileToken = () => localforage.getItem(PROFILE_TOKEN);\n\nconst saveCurrentInitializeIdCampaign = id =>\n  localStorage.setItem(CURRENT_INITIALIZE_ID, id);\n\nconst getCurrentInitializeIdCampaign = () =>\n  localStorage.getItem(CURRENT_INITIALIZE_ID);\n\nconst setCurrentCardIndex = index =>\n  localStorage.setItem(CURENT_CARD_INDEX, index);\n\nconst getCurrentCardIndex = () => localStorage.getItem(CURENT_CARD_INDEX);\n\nexport {\n  getCard,\n  saveCard,\n  isFirstRun,\n  setAsRun,\n  saveCardId,\n  getCardId,\n  isFirstRunCard,\n  setClientManifest,\n  isManifestSetted,\n  setProfileToken,\n  getProfileToken,\n  saveCurrentInitializeIdCampaign,\n  getCurrentInitializeIdCampaign,\n  setCurrentCardIndex,\n  getCurrentCardIndex,\n  hasGiftNotification,\n  setGiftNotification\n};\n"]},"metadata":{},"sourceType":"module"}