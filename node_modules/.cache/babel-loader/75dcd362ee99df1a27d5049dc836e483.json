{"ast":null,"code":"var _jsxFileName = \"/Users/blackjmxx/Devs/LiskRide/src/components/carousel/index.js\";\nimport classnames from 'classnames';\nimport React from 'react';\nimport ReactCarousel from '../nuka-carousel';\nexport default class Carousel extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = index => {\n      this.setState({\n        selectedIndex: index\n      }, () => {\n        if (this.props.afterChange) {\n          this.props.afterChange(index);\n        }\n      });\n    };\n\n    this.state = {\n      selectedIndex: this.props.selectedIndex\n    };\n  }\n\n  render() {\n    const {\n      infinite,\n      selectedIndex,\n      beforeChange,\n      afterChange,\n      dots,\n      ...restProps\n    } = this.props;\n    const {\n      prefixCls,\n      dotActiveStyle,\n      dotStyle,\n      vertical\n    } = restProps;\n    const newProps = { ...restProps,\n      wrapAround: infinite,\n      slideIndex: selectedIndex,\n      beforeSlide: beforeChange,\n      animation: 'zoom',\n      withoutControls: true\n    };\n    let Decorators = [];\n    console.log(Decorators);\n\n    if (dots) {\n      Decorators = [{\n        component: ({\n          slideCount,\n          slidesToScroll,\n          currentSlide\n        }) => {\n          const arr = [];\n\n          for (let i = 0; i < slideCount; i += slidesToScroll) {\n            arr.push(i);\n          }\n\n          const dotDom = arr.map(index => {\n            const dotCls = classnames(`am-carousel-wrap-dot`, {\n              [`am-carousel-wrap-dot-active`]: index === currentSlide\n            });\n            const currentDotStyle = index === currentSlide ? dotActiveStyle : dotStyle;\n            return /*#__PURE__*/React.createElement(\"div\", {\n              className: dotCls,\n              key: index,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 17\n              }\n            }, /*#__PURE__*/React.createElement(\"span\", {\n              style: currentDotStyle,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 19\n              }\n            }));\n          });\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: `am-carousel-wrap`,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 20\n            }\n          }, dotDom);\n        },\n        position: 'BottomCenter'\n      }];\n    }\n\n    const wrapCls = classnames(prefixCls, 'space-carousel', {\n      [`am-carousel-vertical`]: vertical\n    });\n    return /*#__PURE__*/React.createElement(ReactCarousel, Object.assign({}, newProps, {\n      className: wrapCls,\n      cellAlign: \"center\",\n      style: {\n        height: '100%'\n      },\n      afterSlide: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/blackjmxx/Devs/LiskRide/src/components/carousel/index.js"],"names":["classnames","React","ReactCarousel","Carousel","Component","constructor","props","onChange","index","setState","selectedIndex","afterChange","state","render","infinite","beforeChange","dots","restProps","prefixCls","dotActiveStyle","dotStyle","vertical","newProps","wrapAround","slideIndex","beforeSlide","animation","withoutControls","Decorators","console","log","component","slideCount","slidesToScroll","currentSlide","arr","i","push","dotDom","map","dotCls","currentDotStyle","position","wrapCls","height"],"mappings":"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","sourcesContent":["import classnames from 'classnames';\nimport React from 'react';\nimport ReactCarousel from '../nuka-carousel';\n\n\nexport default class Carousel extends React.Component{\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedIndex: this.props.selectedIndex,\n    };\n  }\n\n  onChange = (index) => {\n    this.setState(\n      {\n        selectedIndex: index,\n      },\n      () => {\n        if (this.props.afterChange) {\n          this.props.afterChange(index);\n        }\n      },\n    );\n  }\n\n  render() {\n    const {\n      infinite,\n      selectedIndex,\n      beforeChange,\n      afterChange,\n      dots,\n      ...restProps\n    } = this.props;\n\n    const {\n      prefixCls,\n      dotActiveStyle,\n      dotStyle,\n      vertical,\n    } = restProps;\n\n    const newProps = {\n      ...restProps,\n      wrapAround: infinite,\n      slideIndex: selectedIndex,\n      beforeSlide: beforeChange,\n      animation: 'zoom',\n      withoutControls: true,\n    };\n\n    let Decorators = [];\n\n    console.log(Decorators);\n\n    if (dots) {\n      Decorators = [\n        {\n          component: ({\n            slideCount,\n            slidesToScroll,\n            currentSlide,\n          }) => {\n            const arr = [];\n            for (let i = 0; i < slideCount; i += slidesToScroll) {\n              arr.push(i);\n            }\n            const dotDom = arr.map(index => {\n              const dotCls = classnames(`am-carousel-wrap-dot`, {\n                [`am-carousel-wrap-dot-active`]: index === currentSlide,\n              });\n              const currentDotStyle =\n                index === currentSlide ? dotActiveStyle : dotStyle;\n              return (\n                <div className={dotCls} key={index}>\n                  <span style={currentDotStyle} />\n                </div>\n              );\n            });\n            return <div className={`am-carousel-wrap`}>{dotDom}</div>;\n          },\n          position: 'BottomCenter',\n        },\n      ];\n    }\n\n    const wrapCls = classnames(prefixCls, 'space-carousel', {\n      [`am-carousel-vertical`]: vertical,\n    });\n\n    return (\n      <ReactCarousel\n        {...newProps}\n        className={wrapCls}\n        cellAlign=\"center\"\n        style={{ height: '100%' }}\n        afterSlide={this.onChange}\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}