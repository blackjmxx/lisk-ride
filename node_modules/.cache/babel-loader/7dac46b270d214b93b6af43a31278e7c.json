{"ast":null,"code":"var _jsxFileName = \"/Users/blackjmxx/Devs/LiskRide/src/components/StampHere/StampHere.js\";\nimport React, { Component } from 'react';\nimport stamp from \"../../assets/images/stamp.svg\";\nimport { ContentContainer, AnimatedImage, ImageContainer, TitleContainer } from \"./style\";\nimport { Title, IconContainer, Icon } from \"../ForgotPassword/style\";\nimport MenuBar from '../MenuBar/Menubar';\nimport { Content } from '../Scanner/SelectFromImages/style';\nimport { CommonContainerView } from '../common/commonContainer';\nimport { Link } from 'react-router-dom';\nimport closeIcon from \"../../assets/icons/closeIcon.svg\";\nimport { FormattedMessage } from 'react-intl';\nimport $ from 'jquery';\nimport { connect } from 'react-redux';\nimport { loadLoyaltyCard, fetchInitLoyaltyCard, loadCachedLoyaltyCard, loadLoyaltyFakeCard, changeQrMode, addStampByValidationLink, closeValidationModal, addStampByMagicStamp } from '../../modules/home/actions';\nconst _keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\nclass StampHere extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      stampTouching: false\n    };\n\n    this.closeScannerPage = () => {\n      this.props.history.push(\"/home/card\");\n    };\n\n    this.complete = () => {\n      this.setState({\n        stampTouching: false\n      });\n    };\n\n    this.init = configs => {\n      var stampScreenElmId = configs.stampScreenElmId || \"snowshoe-stamp-screen\";\n      var progressAnimationOn = configs.progressBarOn || false;\n      var preventScrolling = configs.preventScrolling || false; // var preventZooming = configs.preventZooming || false;\n\n      var messages = configs.messages || {};\n      var helpMessage = messages.insufficientPoints || \"\";\n      var holdMessage = messages.userTraining || \"\";\n      var postUrl = configs.postUrl || \"/stampscreen\"; // var success = configs.success || {};\n      // var error = configs.error || {};\n      // var points = [];\n\n      var stampScreenElm = document.getElementById(stampScreenElmId); // var stampTouching = false;\n\n      var pointsMin = configs.insufficientPointsMin || 3;\n      var holdMsg;\n\n      if (preventScrolling) {\n        stampScreenElm.addEventListener('touchmove', event => {\n          // Prevent scrolling on this element\n          event.preventDefault();\n        });\n      }\n\n      if (preventScrolling) {\n        stampScreenElm.addEventListener('gesturechange', function (event) {\n          // Disable browser zoom\n          event.preventDefault();\n        });\n      }\n\n      stampScreenElm.addEventListener('touchstart', event => {\n        $(\"#snowshoe-messages\").empty();\n        clearTimeout(holdMsg);\n\n        if (event.touches.length >= pointsMin && progressAnimationOn) {\n          $('#snowshoe-progress-bar').addClass(\"snowshoe-progress-bar\");\n        }\n\n        ;\n\n        if (event.touches.length >= 5) {\n          var data = [];\n          var touches = event.touches;\n\n          for (var i = 0; i <= event.touches.length; i++) {\n            if (touches[i]) {\n              data.push([touches[i].pageX, touches[i].pageY]);\n            }\n          }\n\n          this.send(data, postUrl);\n        }\n\n        if (event.touches.length < 5 && event.touches.length >= pointsMin) {\n          $('#snowshoe-progress-bar').removeClass(\"snowshoe-progress-bar\"); // Teach users to stamp and hold for 2 seconds before displaying user-defined message\n\n          if (helpMessage) {\n            $(\"#snowshoe-messages\").append(holdMessage);\n            holdMsg = setTimeout(() => {\n              this.displayCustomMessage(helpMessage);\n            }, 2000);\n          }\n        }\n      });\n    };\n\n    this.send = (points, postUrl) => {\n      if (this.state.stampTouching) return false;\n      this.setState({\n        stampTouching: true\n      });\n      this.postAjax(points, postUrl, this.handleStampSuccess, this.handleStampError, this.complete);\n    };\n\n    this.encode = input => {\n      var output = \"\";\n      var chr1, chr2, chr3, enc1, enc2, enc3, enc4;\n      var i = 0;\n      input = this._utf8_encode(input);\n\n      while (i < input.length) {\n        chr1 = input.charCodeAt(i++);\n        chr2 = input.charCodeAt(i++);\n        chr3 = input.charCodeAt(i++);\n        enc1 = chr1 >> 2;\n        enc2 = (chr1 & 3) << 4 | chr2 >> 4;\n        enc3 = (chr2 & 15) << 2 | chr3 >> 6;\n        enc4 = chr3 & 63;\n\n        if (isNaN(chr2)) {\n          enc3 = enc4 = 64;\n        } else if (isNaN(chr3)) {\n          enc4 = 64;\n        }\n\n        output = output + _keyStr.charAt(enc1) + _keyStr.charAt(enc2) + _keyStr.charAt(enc3) + _keyStr.charAt(enc4);\n      }\n\n      return output;\n    };\n\n    this._utf8_encode = string => {\n      string = string.replace(/\\r\\n/g, \"\\n\");\n      var utftext = \"\";\n\n      for (var n = 0; n < string.length; n++) {\n        var c = string.charCodeAt(n);\n\n        if (c < 128) {\n          utftext += String.fromCharCode(c);\n        } else if (c > 127 && c < 2048) {\n          utftext += String.fromCharCode(c >> 6 | 192);\n          utftext += String.fromCharCode(c & 63 | 128);\n        } else {\n          utftext += String.fromCharCode(c >> 12 | 224);\n          utftext += String.fromCharCode(c >> 6 & 63 | 128);\n          utftext += String.fromCharCode(c & 63 | 128);\n        }\n      }\n\n      return utftext;\n    };\n\n    this.postAjax = (data, endpoint, cbk, cbkError, cbkComplete) => {\n      this.props.addStampByMagicStamp(this.encode(JSON.stringify(data)));\n      this.closeScannerPage();\n    };\n\n    this.displayCustomMessage = helpMsg => {\n      $(\"#snowshoe-messages\").children().replaceWith(helpMsg);\n    };\n\n    this.handleStampSuccess = result => {\n      console.log('success');\n    };\n\n    this.handleStampError = error => {\n      console.log(\" :-( \");\n    };\n  }\n\n  componentDidMount() {\n    var stampScreenInitData = {\n      \"postUrl\": \"http://mydomain.com/stampscreen\",\n      \"stampScreenElmId\": \"stamp-screen\",\n      \"postViaAjax\": true,\n      // post via Ajax\n      \"preventScrolling\": true,\n      // prevent scrolling when stamping the stamp area\n      \"preventZooming\": true,\n      // prevent zooming when stamping the stamp area\n      \"success\": function (response) {\n        // handle success\n        console.log(\"Success!\");\n      },\n      \"error\": function (response) {\n        // handle failure\n        console.log(\" :-( \");\n      }\n    };\n    this.init(stampScreenInitData);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(CommonContainerView, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/home/card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(IconContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      src: closeIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(TitleContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"magicStampsPage.Title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(ContentContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"magicStampsPage.DescriptionInfo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(ImageContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(AnimatedImage, {\n      id: \"stamp-screen\",\n      src: stamp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 22\n      }\n    })), /*#__PURE__*/React.createElement(MenuBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapStateTopProps = state => {\n  return {\n    isLoadingCard: state.home.isLoadingCard,\n    currentCard: state.home.currentCard,\n    error: state.home.error,\n    card: state.home.card,\n    qrscanMode: state.home.qrscanMode,\n    isValidationSucceed: state.home.isValidationSucceed,\n    hasValue: state.home.hasValue\n  };\n};\n\nconst mapActionCreators = {\n  loadLoyaltyCard,\n  fetchInitLoyaltyCard,\n  loadCachedLoyaltyCard,\n  loadLoyaltyFakeCard,\n  changeQrMode,\n  addStampByValidationLink,\n  closeValidationModal,\n  addStampByMagicStamp\n};\nexport default connect(mapStateTopProps, mapActionCreators)(StampHere);","map":{"version":3,"sources":["/Users/blackjmxx/Devs/LiskRide/src/components/StampHere/StampHere.js"],"names":["React","Component","ContentContainer","AnimatedImage","ImageContainer","TitleContainer","Title","IconContainer","Icon","MenuBar","Content","CommonContainerView","Link","FormattedMessage","$","connect","loadLoyaltyCard","fetchInitLoyaltyCard","loadCachedLoyaltyCard","loadLoyaltyFakeCard","changeQrMode","addStampByValidationLink","closeValidationModal","addStampByMagicStamp","_keyStr","StampHere","state","stampTouching","closeScannerPage","props","history","push","complete","setState","init","configs","stampScreenElmId","progressAnimationOn","progressBarOn","preventScrolling","messages","helpMessage","insufficientPoints","holdMessage","userTraining","postUrl","stampScreenElm","document","getElementById","pointsMin","insufficientPointsMin","holdMsg","addEventListener","event","preventDefault","empty","clearTimeout","touches","length","addClass","data","i","pageX","pageY","send","removeClass","append","setTimeout","displayCustomMessage","points","postAjax","handleStampSuccess","handleStampError","encode","input","output","chr1","chr2","chr3","enc1","enc2","enc3","enc4","_utf8_encode","charCodeAt","isNaN","charAt","string","replace","utftext","n","c","String","fromCharCode","endpoint","cbk","cbkError","cbkComplete","JSON","stringify","helpMsg","children","replaceWith","result","console","log","error","componentDidMount","stampScreenInitData","response","render","closeIcon","stamp","mapStateTopProps","isLoadingCard","home","currentCard","card","qrscanMode","isValidationSucceed","hasValue","mapActionCreators"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport stamp from '../../assets/images/stamp.svg'\nimport { ContentContainer, AnimatedImage, ImageContainer, TitleContainer } from \"./style\"\nimport { Title, IconContainer, Icon } from \"../ForgotPassword/style\"\nimport MenuBar from '../MenuBar/Menubar'\nimport { Content } from '../Scanner/SelectFromImages/style';\nimport { CommonContainerView } from '../common/commonContainer';\nimport { Link } from 'react-router-dom'\nimport closeIcon from \"../../assets/icons/closeIcon.svg\";\nimport { FormattedMessage } from 'react-intl';\nimport $ from 'jquery';\nimport { connect } from 'react-redux'\nimport {loadLoyaltyCard, fetchInitLoyaltyCard, loadCachedLoyaltyCard, loadLoyaltyFakeCard, changeQrMode, addStampByValidationLink,\n    closeValidationModal, addStampByMagicStamp } from '../../modules/home/actions'\n\nconst _keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\nclass StampHere extends Component {\n    \n    state = {\n        stampTouching:false\n    }\n    closeScannerPage = () => {\n        this.props.history.push(\"/home/card\");\n      };\n\n    componentDidMount() {\n        var stampScreenInitData = {\n            \"postUrl\": \"http://mydomain.com/stampscreen\",\n            \"stampScreenElmId\": \"stamp-screen\",\n            \"postViaAjax\": true, // post via Ajax\n            \"preventScrolling\": true, // prevent scrolling when stamping the stamp area\n            \"preventZooming\": true, // prevent zooming when stamping the stamp area\n            \"success\": function (response) {\n                // handle success\n\n                console.log(\"Success!\");\n            },\n            \"error\": function (response) {\n                // handle failure\n                console.log(\" :-( \");\n            }\n        }\n                this.init(stampScreenInitData)\n    }\n\n    complete = () => {\n        this.setState({ stampTouching: false });\n    }\n\n    init = (configs) => {\n        var stampScreenElmId = configs.stampScreenElmId || \"snowshoe-stamp-screen\";\n        var progressAnimationOn = configs.progressBarOn || false;\n        var preventScrolling = configs.preventScrolling || false;\n        // var preventZooming = configs.preventZooming || false;\n        var messages = configs.messages || {};\n        var helpMessage = messages.insufficientPoints || \"\";\n        var holdMessage = messages.userTraining || \"\";\n        var postUrl = configs.postUrl || \"/stampscreen\";\n        // var success = configs.success || {};\n        // var error = configs.error || {};\n        // var points = [];\n        var stampScreenElm = document.getElementById(stampScreenElmId);\n        // var stampTouching = false;\n        var pointsMin = configs.insufficientPointsMin || 3;\n        var holdMsg;\n\n\n        if (preventScrolling) {\n            stampScreenElm.addEventListener('touchmove', (event) => {\n                // Prevent scrolling on this element\n                event.preventDefault();\n            });\n        }\n\n        if (preventScrolling) {\n            stampScreenElm.addEventListener('gesturechange', function (event) {\n                // Disable browser zoom\n                event.preventDefault();\n            });\n        }\n\n        stampScreenElm.addEventListener('touchstart', (event) => {\n            $(\"#snowshoe-messages\").empty();\n            clearTimeout(holdMsg);\n            if (event.touches.length >= pointsMin && progressAnimationOn) {\n                $('#snowshoe-progress-bar').addClass(\"snowshoe-progress-bar\");\n            };\n\n            if (event.touches.length >= 5) {\n                var data = [];\n                var touches = event.touches;\n                for (var i = 0; i <= event.touches.length; i++) {\n                    if (touches[i]) {\n                        data.push([touches[i].pageX, touches[i].pageY]);\n                    }\n                }\n                this.send(data, postUrl);\n            }\n\n            if (event.touches.length < 5 && event.touches.length >= pointsMin) {\n                $('#snowshoe-progress-bar').removeClass(\"snowshoe-progress-bar\");\n                // Teach users to stamp and hold for 2 seconds before displaying user-defined message\n                if (helpMessage) {\n                    $(\"#snowshoe-messages\").append(holdMessage);\n                    holdMsg = setTimeout( () => { this.displayCustomMessage(helpMessage) }, 2000);\n                }\n            }\n        });\n    }\n\n    send = (points, postUrl) => {\n        if (this.state.stampTouching) return false;\n        this.setState({ stampTouching: true });\n        this.postAjax(points, postUrl, this.handleStampSuccess, this.handleStampError, this.complete);\n    }\n\n    encode = (input) => {\n        var output = \"\";\n        var chr1, chr2, chr3, enc1, enc2, enc3, enc4;\n        var i = 0;\n        input = this._utf8_encode(input);\n        while (i < input.length) {\n            chr1 = input.charCodeAt(i++);\n            chr2 = input.charCodeAt(i++);\n            chr3 = input.charCodeAt(i++);\n            enc1 = chr1 >> 2;\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n            enc4 = chr3 & 63;\n            if (isNaN(chr2)) {\n                enc3 = enc4 = 64;\n            } else if (isNaN(chr3)) {\n                enc4 = 64;\n            }\n            output = output +\n                _keyStr.charAt(enc1) + _keyStr.charAt(enc2) +\n                _keyStr.charAt(enc3) + _keyStr.charAt(enc4);\n        }\n        return output;\n    }\n\n    _utf8_encode = (string) => {\n        string = string.replace(/\\r\\n/g, \"\\n\");\n        var utftext = \"\";\n        for (var n = 0; n < string.length; n++) {\n            var c = string.charCodeAt(n);\n            if (c < 128) {\n                utftext += String.fromCharCode(c);\n            }\n            else if ((c > 127) && (c < 2048)) {\n                utftext += String.fromCharCode((c >> 6) | 192);\n                utftext += String.fromCharCode((c & 63) | 128);\n            }\n            else {\n                utftext += String.fromCharCode((c >> 12) | 224);\n                utftext += String.fromCharCode(((c >> 6) & 63) | 128);\n                utftext += String.fromCharCode((c & 63) | 128);\n            }\n        }\n        return utftext;\n    }\n\n    postAjax = (data, endpoint, cbk, cbkError, cbkComplete) => {\n        this.props.addStampByMagicStamp(this.encode(JSON.stringify(data)))\n        this.closeScannerPage()\n    }\n\n    displayCustomMessage = (helpMsg) => {\n        $(\"#snowshoe-messages\").children().replaceWith(helpMsg);\n    };\n\n    handleStampSuccess = (result) => {\n        console.log('success')\n    }\n\n    handleStampError = (error) => {\n        console.log(\" :-( \");\n    }\n    render() {\n        return (\n            <CommonContainerView>\n                <Link to='/home/card'>\n                    <IconContainer>\n                        <Icon src={closeIcon} />\n                    </IconContainer>\n                </Link>\n                <TitleContainer>\n                    <Title>\n                        <FormattedMessage id={\"magicStampsPage.Title\"} />\n                    </Title>\n                </TitleContainer>\n                <ContentContainer>\n                    <Content>\n                        <FormattedMessage id={\"magicStampsPage.DescriptionInfo\"} />\n                    </Content>\n                </ContentContainer>\n                <ImageContainer>\n                     <AnimatedImage id='stamp-screen' src={stamp} />\n                </ImageContainer>\n                <MenuBar />\n            </CommonContainerView>\n        );\n    }\n}\n\n\nconst mapStateTopProps = (state) => {\n    return {\n      isLoadingCard: state.home.isLoadingCard,\n      currentCard: state.home.currentCard,\n      error: state.home.error,\n      card:state.home.card,\n      qrscanMode:state.home.qrscanMode,\n      isValidationSucceed:state.home.isValidationSucceed,\n      hasValue:state.home.hasValue\n    }\n  }\n  \n  const mapActionCreators = {\n    loadLoyaltyCard,\n    fetchInitLoyaltyCard,\n    loadCachedLoyaltyCard,\n    loadLoyaltyFakeCard, \n    changeQrMode,\n    addStampByValidationLink,\n    closeValidationModal,\n    addStampByMagicStamp\n  }\n\nexport default connect(mapStateTopProps, mapActionCreators)(StampHere)"]},"metadata":{},"sourceType":"module"}