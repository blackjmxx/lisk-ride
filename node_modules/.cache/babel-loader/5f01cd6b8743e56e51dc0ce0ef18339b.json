{"ast":null,"code":"var _jsxFileName = \"/Users/blackjmxx/Devs/LiskRide/src/components/HomePage/HomePage.js\";\nimport React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport IdleTimer from \"react-idle-timer\";\nimport { isManifestSetted, setClientManifest } from \"../../utils/storage\";\nimport Notifications from \"../Notifications\";\nimport Menubar from \"../MenuBar/Menubar\"; // import IntroSlider from \"react-intro-slider\";\n\nimport { Icon, ShortcutContainer, ShortcutContent, HomeContainer, BackgroundCircle, StampCardDetails, CardsContainer } from \"./styles\";\nimport \"./styles/index.scss\";\nimport shortcutIcon from \"../../assets/icons/shortcutIcon.svg\";\nimport shortcutIconAndroid from \"../../assets/icons/shortcutIconAndroid.svg\";\nimport { User } from \"parse\"; // import { Theme } from \"../Theme\";\n\nimport GlobalRequireAuth from \"../../pages/SettingsPage/GlobalRequireAuth\";\nimport InstallationPopup from \"../InstallationPopup/InstallationPopup\";\nimport { FormattedMessage, injectIntl } from \"react-intl\";\nimport FinalSuccessPopUp from \"../../components/GiftScan/FinalSuccessPopUp\";\nconst UserParse = User.extend(\"User\");\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props); // Just for mock data\n\n    this.state = {\n      clicked: false,\n      sliderIsOpen: false,\n      InstallationPopup: false,\n      finalModalIsOpen: false,\n      timeout: 3000,\n      showModal: false,\n      isTimedOut: false\n    };\n\n    this.componentDidMount = () => {\n      const {\n        fakeId\n      } = this.props.match.params; // let localToken = undefined;\n\n      if (UserParse.current() && !this.props.user) {\n        this.props.receiveUserLogIn(UserParse.current().toJSON());\n      }\n\n      if (fakeId) {\n        this.props.loadLoyaltyFakeCard(fakeId);\n      } else {\n        if (!isManifestSetted()) {\n          this.setState({\n            sliderIsOpen: true\n          });\n        } // alert('beforeCardId')\n        // getCardId().then(cardId => {\n        //   // alert('afterCardId :' +cardId)\n        //   localToken = token || cardId;\n        //   if (token && !cardId) {\n        //     // alert('here1:'+token)\n        //     console.log(\"Listening for Install prompt\");\n        //     this.props.fetchInitLoyaltyCard(token);\n        //   } else if (token && cardId) {\n        //     // alert('here3:'+cardId)\n        //     this.props.loadLoyaltyCard(cardId);\n        //   } else if (cardId) {\n        //     // alert('here3:' + localToken)\n        //     this.props.loadLoyaltyCard(localToken);\n        //   }\n        // });\n\n      }\n\n      if (window) {\n        window.addEventListener(\"beforeinstallprompt\", e => {\n          // For older browsers\n          e.preventDefault();\n          console.log(\"Install Prompt fired\");\n          this.installPrompt = e; // See if the app is already installed, in that case, do nothing\n\n          if (window.matchMedia && window.matchMedia(\"(display-mode: standalone)\").matches || window.navigator.standalone === true) {\n            return false;\n          } // Set the state variable to make button visible\n\n\n          this.setState({\n            installButton: true\n          });\n        }); // window.addEventListener(\"online\", () => {\n        //   notify.hide();\n        //   this.loadLoyaltyCard(\"\");\n        // });\n        // window.addEventListener(\"offline\", () => {\n        //   notify.show(\"offlinemode\");\n        // });\n      }\n    };\n\n    this.loadLoyaltyCard = () => {\n      this.props.loadLoyaltyCard(\"\");\n    };\n\n    this.click = () => {\n      this.setState({\n        clicked: !this.state.clicked\n      });\n    };\n\n    this.handleSelectCard = index => {\n      this.props.selectAndChangeCardId(index);\n      this.idleTimer.reset();\n    };\n\n    this.handleStoresBtnClick = () => {\n      this.setState({\n        clicked: !this.state.clicked\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        sliderIsOpen: false\n      });\n      setClientManifest();\n    };\n\n    this.installAppHandler = () => {\n      if (!this.state.InstallationPopup) {\n        this.setState({\n          InstallationPopup: true\n        });\n        return;\n      }\n\n      this.setState({\n        InstallationPopup: false\n      });\n    };\n\n    this.handleRestart = () => {\n      this.props.restartCard();\n      this.setState({\n        showModal: false\n      });\n    };\n\n    this.onIdle = e => {\n      // const isTimedOut = this.state.isTimedOut;\n      if (this.props.card && this.props.card.templateRef) {\n        if (this.props.card.templateRef.totalStepCount === this.props.card.currentStepCount) {\n          this.setState({\n            showModal: true\n          });\n          this.idleTimer.pause();\n          return;\n        }\n      }\n\n      this.idleTimer.reset();\n    };\n\n    let currentUser = User.current();\n    this.idleTimer = null;\n\n    if (currentUser) {\n      this.props.loadLoyaltyCards(currentUser).then(lastIndex => this.props.selectAndChangeCardId(lastIndex));\n    }\n  }\n\n  render() {\n    const {\n      error\n    } = this.props;\n\n    if (error) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/404\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(GlobalRequireAuth, Object.assign({}, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(HomeContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Notifications, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Menubar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default injectIntl(HomePage);","map":{"version":3,"sources":["/Users/blackjmxx/Devs/LiskRide/src/components/HomePage/HomePage.js"],"names":["React","Component","Redirect","IdleTimer","isManifestSetted","setClientManifest","Notifications","Menubar","Icon","ShortcutContainer","ShortcutContent","HomeContainer","BackgroundCircle","StampCardDetails","CardsContainer","User","GlobalRequireAuth","InstallationPopup","FormattedMessage","injectIntl","FinalSuccessPopUp","UserParse","extend","HomePage","constructor","props","state","clicked","sliderIsOpen","finalModalIsOpen","timeout","showModal","isTimedOut","componentDidMount","fakeId","match","params","current","user","receiveUserLogIn","toJSON","loadLoyaltyFakeCard","setState","window","addEventListener","e","preventDefault","console","log","installPrompt","matchMedia","matches","navigator","standalone","installButton","loadLoyaltyCard","click","handleSelectCard","index","selectAndChangeCardId","idleTimer","reset","handleStoresBtnClick","handleClose","installAppHandler","handleRestart","restartCard","onIdle","card","templateRef","totalStepCount","currentStepCount","pause","currentUser","loadLoyaltyCards","then","lastIndex","render","error"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport IdleTimer from \"react-idle-timer\";\n\nimport { isManifestSetted, setClientManifest } from \"../../utils/storage\";\nimport Notifications from \"../Notifications\";\nimport Menubar from \"../MenuBar/Menubar\";\n// import IntroSlider from \"react-intro-slider\";\nimport {\n  Icon,\n  ShortcutContainer,\n  ShortcutContent,\n  HomeContainer,\n  BackgroundCircle,\n  StampCardDetails,\n  CardsContainer\n} from \"./styles\";\nimport \"./styles/index.scss\";\nimport shortcutIcon from \"../../assets/icons/shortcutIcon.svg\";\nimport shortcutIconAndroid from \"../../assets/icons/shortcutIconAndroid.svg\";\nimport { User } from \"parse\";\n// import { Theme } from \"../Theme\";\nimport GlobalRequireAuth from \"../../pages/SettingsPage/GlobalRequireAuth\";\nimport InstallationPopup from \"../InstallationPopup/InstallationPopup\";\nimport { FormattedMessage, injectIntl } from \"react-intl\";\nimport FinalSuccessPopUp from \"../../components/GiftScan/FinalSuccessPopUp\";\n\nconst UserParse = User.extend(\"User\");\n\nclass HomePage extends Component {\n  state = {\n    clicked: false,\n    sliderIsOpen: false,\n    InstallationPopup: false,\n    finalModalIsOpen: false,\n    timeout: 3000,\n    showModal: false,\n    isTimedOut: false\n  };\n\n  constructor(props) {\n    super(props);\n\n    // Just for mock data\n    let currentUser = User.current();\n    this.idleTimer = null;\n\n    if (currentUser) {\n      this.props\n        .loadLoyaltyCards(currentUser)\n        .then(lastIndex => this.props.selectAndChangeCardId(lastIndex));\n    }\n  }\n\n  componentDidMount = () => {\n    const { fakeId } = this.props.match.params;\n    // let localToken = undefined;\n\n    if (UserParse.current() && !this.props.user) {\n      this.props.receiveUserLogIn(UserParse.current().toJSON());\n    }\n\n    if (fakeId) {\n      this.props.loadLoyaltyFakeCard(fakeId);\n    } else {\n      if (!isManifestSetted()) {\n        this.setState({ sliderIsOpen: true });\n      }\n      // alert('beforeCardId')\n\n      // getCardId().then(cardId => {\n      //   // alert('afterCardId :' +cardId)\n      //   localToken = token || cardId;\n      //   if (token && !cardId) {\n      //     // alert('here1:'+token)\n      //     console.log(\"Listening for Install prompt\");\n      //     this.props.fetchInitLoyaltyCard(token);\n      //   } else if (token && cardId) {\n      //     // alert('here3:'+cardId)\n      //     this.props.loadLoyaltyCard(cardId);\n      //   } else if (cardId) {\n      //     // alert('here3:' + localToken)\n      //     this.props.loadLoyaltyCard(localToken);\n      //   }\n      // });\n    }\n    if (window) {\n      window.addEventListener(\"beforeinstallprompt\", e => {\n        // For older browsers\n        e.preventDefault();\n        console.log(\"Install Prompt fired\");\n        this.installPrompt = e;\n        // See if the app is already installed, in that case, do nothing\n        if (\n          (window.matchMedia &&\n            window.matchMedia(\"(display-mode: standalone)\").matches) ||\n          window.navigator.standalone === true\n        ) {\n          return false;\n        }\n        // Set the state variable to make button visible\n        this.setState({ installButton: true });\n      });\n      // window.addEventListener(\"online\", () => {\n      //   notify.hide();\n      //   this.loadLoyaltyCard(\"\");\n      // });\n      // window.addEventListener(\"offline\", () => {\n      //   notify.show(\"offlinemode\");\n      // });\n    }\n  };\n\n  loadLoyaltyCard = () => {\n    this.props.loadLoyaltyCard(\"\");\n  };\n\n  click = () => {\n    this.setState({\n      clicked: !this.state.clicked\n    });\n  };\n\n  handleSelectCard = index => {\n    this.props.selectAndChangeCardId(index);\n    this.idleTimer.reset();\n  };\n\n  handleStoresBtnClick = () => {\n    this.setState({\n      clicked: !this.state.clicked\n    });\n  };\n\n  handleClose = () => {\n    this.setState({ sliderIsOpen: false });\n    setClientManifest();\n  };\n\n  installAppHandler = () => {\n    if (!this.state.InstallationPopup) {\n      this.setState({ InstallationPopup: true });\n      return;\n    }\n    this.setState({ InstallationPopup: false });\n  };\n\n  handleRestart = () => {\n    this.props.restartCard()\n    this.setState({ showModal: false });\n  }\n\n  onIdle = (e) => {\n    // const isTimedOut = this.state.isTimedOut;\n    if(this.props.card && this.props.card.templateRef){\n      if(this.props.card.templateRef.totalStepCount === this.props.card.currentStepCount){\n        this.setState({showModal: true})\n        this.idleTimer.pause()\n        return\n      }\n    }\n    this.idleTimer.reset();\n  }\n\n  render() {\n    const { error } = this.props;\n    if (error) {\n      return <Redirect to=\"/404\" />;\n    }\n    return (\n      <>\n        <GlobalRequireAuth {...this.props}>\n          <HomeContainer>\n            <Notifications />\n          </HomeContainer>\n          <Menubar />\n        </GlobalRequireAuth>\n      </>\n    );\n  }\n}\nexport default injectIntl(HomePage);"]},"metadata":{},"sourceType":"module"}