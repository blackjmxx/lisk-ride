{"ast":null,"code":"import { Cloud } from \"parse\";\nimport { getCard, saveCard, setAsRun, saveCardId, getCardId, isManifestSetted, setClientManifest, getProfileToken, saveCurrentInitializeIdCampaign, setCurrentCardIndex } from \"../../utils/storage\"; // Constants\n\nexport const FETCH_LOYALTYCARD_REQUEST = \"FETCH_LOYALTYCARD_REQUEST\";\nexport const FETCH_LOYALTYCARD_SUCCESS = \"FETCH_LOYALTYCARD_SUCCESS\";\nexport const FETCH_LOYALTYCARD_FAILURE = \"FETCH_LOYALTYCARD_FAILURE\";\nexport const RECEIVE_CACHED_CARD = \"RECEIVE_CACHED_CARD\";\nexport const GENERATE_CARD_REQUEST = \"GENERATE_CARD_REQUEST\";\nexport const GENERATE_CARD_SUCCESS = \"GENERATE_CARD_SUCCESS\";\nexport const GENERATE_CARD_FAILURE = \"GENERATE_CARD_FAILURE\";\nexport const FETCH_STAMP_SUCCESS = \"FETCH_STAMP_SUCCESS\";\nexport const FETCH_STAMP_REQUEST = \"FETCH_STAMP_REQUEST\";\nexport const FETCH_STAMP_FAILURE = \"FETCH_STAMP_FAILURE\";\nexport const FETCH_REWARDS_SUCCESS = \"FETCH_REWARDS_SUCCESS\";\nexport const FETCH_REWARDS_REQUEST = \"FETCH_REWARDS_REQUEST\";\nexport const FETCH_REWARDS_FAILURE = \"FETCH_REWARDS_FAILURE\";\nexport const LOAD_REWARDS_REQUEST = \"LOAD_REWARDS_REQUEST\";\nexport const LOAD_REWARDS_SUCCESS = \"LOAD_REWARDS_SUCCESS\";\nexport const LOAD_REWARDS_FAILURE = \"LOAD_REWARDS_FAILURE\";\nexport const ADD_INIT_CARD = \"ADD_INIT_CARD\";\nexport const FETCH_CACHED_CARD = \"FETCH_CACHED_CARD\";\nexport const LOAD_LOYALTYCARDS_REQUEST = \"LOAD_LOYALTYCARDS_REQUEST\";\nexport const LOAD_LOYALTYCARDS_SUCCESS = \"LOAD_LOYALTYCARDS_SUCCESS\";\nexport const LOAD_LOYALTYCARDS_FAILURE = \"LOAD_LOYALTYCARDS_FAILURE\";\nexport const RESTART_CARD_REQUEST = \"RESTART_CARD_REQUEST\";\nexport const RESTART_CARD_SUCCESS = \"RESTART_CARD_SUCCESS\";\nexport const RESTART_CARD_FAILURE = \"RESTART_CARD_FAILURE\";\nexport const ADD_STAMP_BY_VALIDATION_LINK_RESET = \"ADD_STAMP_BY_VALIDATION_LINK_RESET\";\nexport const ADD_STAMP_BY_VALIDATION_LINK_SUCCESS = \"ADD_STAMP_BY_VALIDATION_LINK_SUCCESS\";\nexport const ADD_STAMP_BY_VALIDATION_LINK_FAILURE = \"ADD_STAMP_BY_VALIDATION_LINK_FAILURE\";\nexport const SELECT_LOYALTYCARD = \"SELECT_LOYALTYCARD\";\nexport const CHANGE_QRMODE = \"CHANGE_QRMODE\";\nexport const SET_CURRENT_ID_CAMPAIGN = \"SET_CURRENT_ID_CAMPAIGN\";\nexport const SET_MENU_TARGET = \"SET_MENU_TARGET\";\nexport const ADD_STAMP_BY_VALIDATION_LINK_WITH_GIFT_SUCCESS = \"ADD_STAMP_BY_VALIDATION_LINK_WITH_GIFT_SUCCESS\";\nexport const addInitCard = () => ({\n  type: ADD_INIT_CARD\n});\nexport const fetchCachedCard = () => ({\n  type: FETCH_CACHED_CARD\n});\n\nconst fetchLoyaltyCardRequest = () => {\n  return {\n    type: FETCH_LOYALTYCARD_REQUEST\n  };\n};\n\nconst fetchStampRequest = () => {\n  return {\n    type: FETCH_STAMP_REQUEST\n  };\n};\n\nconst fetchStampSuccess = payload => {\n  return {\n    type: FETCH_STAMP_SUCCESS,\n    payload: payload\n  };\n};\n\nconst fetchRewardsSuccess = payload => {\n  return {\n    type: FETCH_REWARDS_SUCCESS,\n    payload: payload\n  };\n};\n\nconst fetchRewardsRequest = payload => {\n  return {\n    type: FETCH_REWARDS_REQUEST\n  };\n};\n\nconst fetchRewardsFailure = error => {\n  return {\n    type: FETCH_REWARDS_FAILURE,\n    payload: error\n  };\n};\n\nconst fetchStampFailure = error => {\n  return {\n    type: FETCH_STAMP_FAILURE,\n    payload: error\n  };\n};\n\nconst fetchLoyaltyCardSuccess = payload => {\n  return {\n    type: FETCH_LOYALTYCARD_SUCCESS,\n    payload: payload\n  };\n};\n\nconst fetchLoyaltyCardFailure = error => {\n  return {\n    type: FETCH_LOYALTYCARD_FAILURE,\n    error: error\n  };\n};\n\nexport function generateCardRequest() {\n  return {\n    type: GENERATE_CARD_REQUEST\n  };\n}\nexport function generateCardSuccess(payload) {\n  return {\n    type: GENERATE_CARD_SUCCESS,\n    payload: payload\n  };\n}\nexport function generateCardFailure(error) {\n  return {\n    type: GENERATE_CARD_FAILURE,\n    error: error\n  };\n}\nexport function loadRewardsRequest() {\n  return {\n    type: LOAD_REWARDS_REQUEST\n  };\n}\nexport function loadRewardsSuccess(payload) {\n  return {\n    type: LOAD_REWARDS_SUCCESS,\n    payload: payload\n  };\n}\nexport function loadRewardsFailure(error) {\n  return {\n    type: LOAD_REWARDS_FAILURE,\n    error: error\n  };\n}\nexport function loadLoyaltyCardsRequest() {\n  return {\n    type: LOAD_LOYALTYCARDS_REQUEST\n  };\n}\nexport function loadLoyaltyCardsSuccess(payload) {\n  return {\n    type: LOAD_LOYALTYCARDS_SUCCESS,\n    payload: payload\n  };\n}\nexport function loadLoyaltyCardsFailure(error) {\n  return {\n    type: LOAD_LOYALTYCARDS_FAILURE,\n    error: error\n  };\n}\nexport function selectLoyaltyCard(payload) {\n  return {\n    type: SELECT_LOYALTYCARD,\n    payload: payload\n  };\n}\nexport function addStampByValidationLinkReset() {\n  return {\n    type: ADD_STAMP_BY_VALIDATION_LINK_RESET\n  };\n}\nexport function addStampByValidationLinkSuccess(payload) {\n  return {\n    type: ADD_STAMP_BY_VALIDATION_LINK_SUCCESS,\n    payload: payload\n  };\n}\nexport function addStampByValidationLinkWithGiftSuccess(payload) {\n  return {\n    type: ADD_STAMP_BY_VALIDATION_LINK_WITH_GIFT_SUCCESS,\n    payload: payload\n  };\n}\nexport function addStampByValidationLinkFailure(error) {\n  return {\n    type: ADD_STAMP_BY_VALIDATION_LINK_FAILURE,\n    error: error\n  };\n}\nexport const loadCachedLoyaltyCard = token => {\n  return dispatch => {\n    dispatch(fetchLoyaltyCardRequest());\n    getCard().then(card => dispatch(fetchLoyaltyCardSuccess(card))).catch(err => dispatch(fetchLoyaltyCardFailure(err)));\n  };\n};\nexport function changeQrMode(payload) {\n  return {\n    type: CHANGE_QRMODE,\n    payload\n  };\n}\nexport function setCurrentIdCampaign(payload) {\n  return {\n    type: SET_CURRENT_ID_CAMPAIGN,\n    payload\n  };\n}\nexport function addBadgeToMenu(payload) {\n  return {\n    type: SET_MENU_TARGET,\n    payload\n  };\n}\nexport const fetchInitLoyaltyCard = token => {\n  return dispatch => {\n    dispatch(fetchLoyaltyCardRequest());\n    Cloud.run(\"loadLoyaltyCard\", {\n      token: token\n    }).then(card => {\n      // // alert(\"the saveCard value: \" + token)\n      let cardJson = card.toJSON();\n      initManifest(cardJson);\n      saveCardId(cardJson.token);\n      saveCard(card.toJSON()).then(res => {\n        dispatch(fetchLoyaltyCardSuccess(cardJson));\n        setAsRun(token);\n        setClientManifest();\n        return cardJson.token;\n      }).then(cardGuid => {\n        // // alert(\"the loadStamps value: \" + token)\n        Cloud.run(\"loadStamps\", {\n          cardId: cardGuid\n        }).then(stamps => {\n          dispatch(fetchStampSuccess(stamps));\n        }); // // alert(\"the loadRewardSteps value: \" + token)\n\n        Cloud.run(\"loadRewardSteps\", {\n          cardId: cardGuid\n        }).then(rewardSteps => {\n          dispatch(fetchRewardsSuccess(rewardSteps));\n        });\n      });\n    }).catch(err => {\n      dispatch(fetchLoyaltyCardFailure(err)); // // alert(JSON.stringify(err))\n    });\n  };\n};\nexport const restartCard = token => {\n  return dispatch => {\n    dispatch(fetchLoyaltyCardRequest());\n    getCardId().then(cardGuid => {\n      Cloud.run(\"restartCard\", {\n        token: cardGuid\n      }).then(card => {\n        const cardJson = card.toJSON();\n        saveCard(cardJson).then(res => {\n          dispatch(fetchLoyaltyCardSuccess(cardJson));\n          loadRewards(cardJson.newRewards);\n          return cardJson.objectId;\n        });\n      }).then(getCardId().then(cardGuid => {\n        Cloud.run(\"loadStamps\", {\n          cardId: cardGuid\n        }).then(stamps => {\n          dispatch(fetchStampSuccess(stamps));\n        });\n        Cloud.run(\"loadRewardSteps\", {\n          cardId: cardGuid\n        }).then(rewardSteps => {\n          dispatch(fetchRewardsSuccess(rewardSteps));\n        });\n      })).catch(err => dispatch(fetchLoyaltyCardFailure(err)));\n    });\n  };\n};\nexport const loadLoyaltyCard = token => {\n  return dispatch => {\n    dispatch(fetchLoyaltyCardRequest());\n    dispatch(fetchStampRequest());\n    getCardId().then(cardGuid => {\n      Cloud.run(\"loadLoyaltyCard\", {\n        token: token || cardGuid\n      }).then(card => {\n        const cardJson = card.toJSON();\n        if (!isManifestSetted()) initManifest(cardJson);\n        saveCard(cardJson).then(res => {\n          dispatch(fetchLoyaltyCardSuccess(cardJson));\n          loadRewards(cardJson.newRewards);\n          return cardJson.objectId; // dispatch(loadRewardsRequest());\n          //   Cloud.run(\"loadRewards\", { cardId : cardJson.token})\n          //     .then(rewards => {\n          //       dispatch(loadRewardsSuccess(rewards));\n          //     })\n          //     .catch(err => dispatch(loadRewardsFailure(err)));\n        });\n      }).then(getCardId().then(cardGuid => {\n        Cloud.run(\"loadStamps\", {\n          cardId: cardGuid\n        }).then(stamps => {\n          dispatch(fetchStampSuccess(stamps));\n        });\n        Cloud.run(\"loadRewardSteps\", {\n          cardId: cardGuid\n        }).then(rewardSteps => {\n          dispatch(fetchRewardsSuccess(rewardSteps));\n        }); // Cloud.run(\"loadRewardTemplate\", {loyaltyCardTemplateid:'S8lunn2sJv'})\n        // .then(\n        //   rewardTemplates => {\n        //     //dispatch(fetchRewardsSuccess(rewards))\n        //     console.log(rewardTemplates)\n        // })\n      })).catch(err => {\n        if (err.code === 100) {\n          getCard().then(card => dispatch(fetchLoyaltyCardSuccess(card))).catch(err => dispatch(fetchLoyaltyCardFailure(err)));\n        }\n      });\n    });\n  };\n};\nexport const loadCurrentLoyaltyCard = token => {\n  return dispatch => {\n    dispatch(fetchLoyaltyCardRequest());\n    dispatch(fetchStampRequest());\n    getCardId().then(cardGuid => {\n      Cloud.run(\"loadLoyaltyCard\", {\n        token: token || cardGuid\n      }).then(card => {\n        const cardJson = card.toJSON();\n        if (!isManifestSetted()) initManifest(cardJson);\n        saveCard(cardJson).then(res => {\n          dispatch(fetchLoyaltyCardSuccess(cardJson));\n          loadRewards(cardJson.newRewards);\n          return cardJson.objectId; // dispatch(loadRewardsRequest());\n          //   Cloud.run(\"loadRewards\", { cardId : cardJson.token})\n          //     .then(rewards => {\n          //       dispatch(loadRewardsSuccess(rewards));\n          //     })\n          //     .catch(err => dispatch(loadRewardsFailure(err)));\n        });\n      }).then(getCardId().then(cardGuid => {\n        Cloud.run(\"loadStamps\", {\n          cardId: cardGuid\n        }).then(stamps => {\n          dispatch(fetchStampSuccess(stamps));\n        });\n        Cloud.run(\"loadRewardSteps\", {\n          cardId: cardGuid\n        }).then(rewardSteps => {\n          dispatch(fetchRewardsSuccess(rewardSteps));\n        }); // Cloud.run(\"loadRewardTemplate\", {loyaltyCardTemplateid:'S8lunn2sJv'})\n        // .then(\n        //   rewardTemplates => {\n        //     //dispatch(fetchRewardsSuccess(rewards))\n        //     console.log(rewardTemplates)\n        // })\n      })).catch(err => {\n        if (err.code === 100) {\n          getCard().then(card => dispatch(fetchLoyaltyCardSuccess(card))).catch(err => dispatch(fetchLoyaltyCardFailure(err)));\n        }\n      });\n    });\n  };\n};\nexport const loadStamps = (cardId, dispatch) => {\n  return dispatch => {\n    dispatch(fetchStampRequest());\n    Cloud.run(\"loadStamps\", {\n      cardId: cardId\n    }).then(stamps => {\n      dispatch(fetchStampSuccess(stamps));\n    }).catch(err => dispatch(fetchStampFailure(err)));\n  };\n};\nexport const loadRewardSteps = templateCardId => {\n  return dispatch => {\n    dispatch(fetchRewardsRequest());\n    Cloud.run(\"loadRewardStep\", {\n      cardId: templateCardId\n    }).then(rewardSteps => {\n      dispatch(fetchRewardsSuccess(rewardSteps));\n    }).catch(err => dispatch(fetchRewardsFailure(err)));\n  };\n};\nexport const loadLoyaltyFakeCard = token => {\n  return dispatch => {\n    dispatch(fetchLoyaltyCardRequest());\n    Cloud.run(\"loadFakeLoyaltyCard\", {\n      token: token\n    }).then(card => {\n      dispatch(fetchLoyaltyCardSuccess(card.toJSON()));\n    }).catch(err => dispatch(fetchLoyaltyCardFailure(err)));\n  };\n};\nexport const setInitializeIdCampaign = id => {\n  return dispatch => {\n    saveCurrentInitializeIdCampaign(id);\n  };\n};\nexport const generateCard = templateId => {\n  return dispatch => {\n    dispatch(generateCardRequest());\n    let profileToken = getProfileToken();\n    Cloud.run(\"generateCard\", {\n      templateId,\n      profileToken\n    }).then(card => {\n      let cardJson = card.toJSON();\n      saveCardId(cardJson.token).then(res => {\n        dispatch(generateCardSuccess(cardJson.token));\n      });\n    }).catch(err => dispatch(generateCardFailure(err)));\n  };\n};\nexport const loadRewards = cardId => {\n  return dispatch => {\n    dispatch(loadRewardsRequest());\n    return Cloud.run(\"loadRewards\", {\n      cardId\n    }).then(rewards => {\n      dispatch(loadRewardsSuccess(rewards));\n    }).catch(err => dispatch(loadRewardsFailure(err)));\n  };\n};\nexport const loadLoyaltyCards = user => {\n  return dispatch => {\n    dispatch(loadLoyaltyCardsRequest());\n    let queryUserCards = user.relation(\"cards\").query();\n    return queryUserCards.find().then(cards => {\n      const cardElments = [];\n      dispatch(loadLoyaltyCardsSuccess({\n        cards,\n        cardElments\n      }));\n      return cards.length - 1;\n    }).catch(err => dispatch(loadLoyaltyCardsFailure(err)));\n  };\n};\nexport const loadLoyaltyCardsWithAnonymousUser = token => {\n  return dispatch => {\n    getCardId().then(cardGuid => {\n      Cloud.run(\"loadLoyaltyCardsWithAnonymousUser\", {\n        token: token\n      }).then(cards => {\n        const cardElments = [];\n        dispatch(loadLoyaltyCardsSuccess({\n          cards,\n          cardElments\n        }));\n      }).catch(err => {\n        if (err.code === 100) {\n          loadLoyaltyCardsFailure(err); // getCard()\n          //   .then(card => dispatch(fetchLoyaltyCardSuccess(card)))\n          //   .catch(err => dispatch(fetchLoyaltyCardFailure(err)));\n        }\n      });\n    });\n  };\n};\nexport const selectAndChangeCardId = index => {\n  return (dispatch, getState) => {\n    if (!getState().home.cards[index]) return;\n    const cardAsJson = getState().home.cards[index].toJSON();\n    saveCard(cardAsJson).then(res => {\n      Cloud.run(\"loadLoyaltyCard\", {\n        token: cardAsJson.token\n      }).then(card => {\n        const cardJson = card.toJSON();\n        setCurrentCardIndex(index);\n        if (!isManifestSetted()) initManifest(cardJson);\n        saveCard(cardJson).then(res => {\n          dispatch(fetchLoyaltyCardSuccess(cardJson));\n          loadRewards(cardJson.newRewards); // dispatch(loadRewardsRequest());\n          //   Cloud.run(\"loadRewards\", { cardId : cardJson.token})\n          //     .then(rewards => {\n          //       dispatch(loadRewardsSuccess(rewards));\n          //     })\n          //     .catch(err => dispatch(loadRewardsFailure(err)));\n        });\n      }).then(getCardId().then(cardGuid => {\n        Cloud.run(\"loadStamps\", {\n          cardId: cardGuid\n        }).then(stamps => {\n          dispatch(fetchStampSuccess(stamps));\n        });\n        Cloud.run(\"loadRewardSteps\", {\n          cardId: cardGuid\n        }).then(rewardSteps => {\n          dispatch(fetchRewardsSuccess(rewardSteps));\n        }); // Cloud.run(\"loadRewardTemplate\", {loyaltyCardTemplateid:'S8lunn2sJv'})\n        // .then(\n        //   rewardTemplates => {\n        //     //dispatch(fetchRewardsSuccess(rewards))\n        //     console.log(rewardTemplates)\n        // })\n      })).catch(err => fetchLoyaltyCardFailure(err));\n    });\n    saveCardId(cardAsJson.token);\n  };\n};\n\nconst initManifest = cardAsJson => {\n  if (window) {\n    var myDynamicManifest = {\n      name: \"Hello Voucher\",\n      short_name: \"Hello Voucher\",\n      theme_color: \"#F1C40F\",\n      background_color: \"#37a0e6\",\n      display: \"standalone\",\n      Scope: \"/\",\n      start_url: window.PUBLIC_URL + \"/\" + cardAsJson.token,\n      icons: [{\n        src: window.PUBLIC_URL + \"/images/icons/icon-72x72.png\",\n        sizes: \"72x72\",\n        type: \"image/png\"\n      }, {\n        src: window.PUBLIC_URL + \"/images/icons/icon-96x96.png\",\n        sizes: \"96x96\",\n        type: \"image/png\"\n      }, {\n        src: window.PUBLIC_URL + \"/images/icons/icon-128x128.png\",\n        sizes: \"128x128\",\n        type: \"image/png\"\n      }, {\n        src: window.PUBLIC_URL + \"/images/icons/icon-144x144.png\",\n        sizes: \"144x144\",\n        type: \"image/png\"\n      }, {\n        src: window.PUBLIC_URL + \"/images/icons/icon-152x152.png\",\n        sizes: \"152x152\",\n        type: \"image/png\"\n      }, {\n        src: window.PUBLIC_URL + \"/images/icons/icon-192x192.png\",\n        sizes: \"192x192\",\n        type: \"image/png\"\n      }, {\n        src: window.PUBLIC_URL + \"/images/icons/icon-384x384.png\",\n        sizes: \"384x384\",\n        type: \"image/png\"\n      }, {\n        src: window.PUBLIC_URL + \"/images/icons/icon-512x512.png\",\n        sizes: \"512x512\",\n        type: \"image/png\"\n      }],\n      splash_pages: null\n    };\n    const stringManifest = JSON.stringify(myDynamicManifest);\n    const blob = new Blob([stringManifest], {\n      type: \"application/javascript\"\n    });\n    const manifestURL = URL.createObjectURL(blob);\n    document.title = \"Hello Voucher\";\n    document.querySelector(\"#my-manifest-placeholder\").setAttribute(\"href\", manifestURL);\n    setClientManifest();\n  }\n};\n\nexport const addStampByValidationLink = (validationToken, history) => {\n  return dispatch => {\n    dispatch(addStampByValidationLinkReset());\n    return getCardId().then(cardGuid => {\n      Cloud.run(\"addStampByValidationLink\", {\n        token: cardGuid,\n        validationToken: validationToken\n      }).then(result => {\n        // here last modification\n        if (result === \"SUCCESS_WITH_REWARD\") {\n          dispatch(addBadgeToMenu(\"offer\"));\n          dispatch(addStampByValidationLinkWithGiftSuccess(result));\n          addBadgeToMenu(true);\n        } else {\n          dispatch(addStampByValidationLinkSuccess(result));\n        }\n      }).catch(err => dispatch(addStampByValidationLinkFailure(err)));\n    });\n  };\n};\nexport const addStampByMagicStamp = data => {\n  return dispatch => {\n    dispatch(addStampByValidationLinkReset());\n    return getCardId().then(cardGuid => {\n      Cloud.run(\"addStampByMagicStamp\", {\n        token: cardGuid,\n        dataStamp: data\n      }).then(result => {\n        if (result === \"SUCCESS_WITH_REWARD\") {\n          dispatch(addBadgeToMenu(\"offer\"));\n          dispatch(addStampByValidationLinkWithGiftSuccess(result));\n          addBadgeToMenu(true);\n        } else {\n          dispatch(addStampByValidationLinkSuccess(result));\n        }\n      }).catch(err => dispatch(addStampByValidationLinkFailure(err)));\n    });\n  };\n};\nexport const closeValidationModal = () => {\n  return dispatch => {\n    dispatch(addStampByValidationLinkReset());\n  };\n};","map":{"version":3,"sources":["/Users/blackjmxx/Devs/LiskRide/src/modules/home/actions.js"],"names":["Cloud","getCard","saveCard","setAsRun","saveCardId","getCardId","isManifestSetted","setClientManifest","getProfileToken","saveCurrentInitializeIdCampaign","setCurrentCardIndex","FETCH_LOYALTYCARD_REQUEST","FETCH_LOYALTYCARD_SUCCESS","FETCH_LOYALTYCARD_FAILURE","RECEIVE_CACHED_CARD","GENERATE_CARD_REQUEST","GENERATE_CARD_SUCCESS","GENERATE_CARD_FAILURE","FETCH_STAMP_SUCCESS","FETCH_STAMP_REQUEST","FETCH_STAMP_FAILURE","FETCH_REWARDS_SUCCESS","FETCH_REWARDS_REQUEST","FETCH_REWARDS_FAILURE","LOAD_REWARDS_REQUEST","LOAD_REWARDS_SUCCESS","LOAD_REWARDS_FAILURE","ADD_INIT_CARD","FETCH_CACHED_CARD","LOAD_LOYALTYCARDS_REQUEST","LOAD_LOYALTYCARDS_SUCCESS","LOAD_LOYALTYCARDS_FAILURE","RESTART_CARD_REQUEST","RESTART_CARD_SUCCESS","RESTART_CARD_FAILURE","ADD_STAMP_BY_VALIDATION_LINK_RESET","ADD_STAMP_BY_VALIDATION_LINK_SUCCESS","ADD_STAMP_BY_VALIDATION_LINK_FAILURE","SELECT_LOYALTYCARD","CHANGE_QRMODE","SET_CURRENT_ID_CAMPAIGN","SET_MENU_TARGET","ADD_STAMP_BY_VALIDATION_LINK_WITH_GIFT_SUCCESS","addInitCard","type","fetchCachedCard","fetchLoyaltyCardRequest","fetchStampRequest","fetchStampSuccess","payload","fetchRewardsSuccess","fetchRewardsRequest","fetchRewardsFailure","error","fetchStampFailure","fetchLoyaltyCardSuccess","fetchLoyaltyCardFailure","generateCardRequest","generateCardSuccess","generateCardFailure","loadRewardsRequest","loadRewardsSuccess","loadRewardsFailure","loadLoyaltyCardsRequest","loadLoyaltyCardsSuccess","loadLoyaltyCardsFailure","selectLoyaltyCard","addStampByValidationLinkReset","addStampByValidationLinkSuccess","addStampByValidationLinkWithGiftSuccess","addStampByValidationLinkFailure","loadCachedLoyaltyCard","token","dispatch","then","card","catch","err","changeQrMode","setCurrentIdCampaign","addBadgeToMenu","fetchInitLoyaltyCard","run","cardJson","toJSON","initManifest","res","cardGuid","cardId","stamps","rewardSteps","restartCard","loadRewards","newRewards","objectId","loadLoyaltyCard","code","loadCurrentLoyaltyCard","loadStamps","loadRewardSteps","templateCardId","loadLoyaltyFakeCard","setInitializeIdCampaign","id","generateCard","templateId","profileToken","rewards","loadLoyaltyCards","user","queryUserCards","relation","query","find","cards","cardElments","length","loadLoyaltyCardsWithAnonymousUser","selectAndChangeCardId","index","getState","home","cardAsJson","window","myDynamicManifest","name","short_name","theme_color","background_color","display","Scope","start_url","PUBLIC_URL","icons","src","sizes","splash_pages","stringManifest","JSON","stringify","blob","Blob","manifestURL","URL","createObjectURL","document","title","querySelector","setAttribute","addStampByValidationLink","validationToken","history","result","addStampByMagicStamp","data","dataStamp","closeValidationModal"],"mappings":"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","sourcesContent":["import { Cloud } from \"parse\";\nimport {\n  getCard,\n  saveCard,\n  setAsRun,\n  saveCardId,\n  getCardId,\n  isManifestSetted,\n  setClientManifest,\n  getProfileToken,\n  saveCurrentInitializeIdCampaign,\n  setCurrentCardIndex\n} from \"../../utils/storage\";\n\n// Constants\nexport const FETCH_LOYALTYCARD_REQUEST = \"FETCH_LOYALTYCARD_REQUEST\";\nexport const FETCH_LOYALTYCARD_SUCCESS = \"FETCH_LOYALTYCARD_SUCCESS\";\nexport const FETCH_LOYALTYCARD_FAILURE = \"FETCH_LOYALTYCARD_FAILURE\";\nexport const RECEIVE_CACHED_CARD = \"RECEIVE_CACHED_CARD\";\nexport const GENERATE_CARD_REQUEST = \"GENERATE_CARD_REQUEST\";\nexport const GENERATE_CARD_SUCCESS = \"GENERATE_CARD_SUCCESS\";\nexport const GENERATE_CARD_FAILURE = \"GENERATE_CARD_FAILURE\";\n\nexport const FETCH_STAMP_SUCCESS = \"FETCH_STAMP_SUCCESS\";\nexport const FETCH_STAMP_REQUEST = \"FETCH_STAMP_REQUEST\";\nexport const FETCH_STAMP_FAILURE = \"FETCH_STAMP_FAILURE\";\n\nexport const FETCH_REWARDS_SUCCESS = \"FETCH_REWARDS_SUCCESS\";\nexport const FETCH_REWARDS_REQUEST = \"FETCH_REWARDS_REQUEST\";\nexport const FETCH_REWARDS_FAILURE = \"FETCH_REWARDS_FAILURE\";\n\nexport const LOAD_REWARDS_REQUEST = \"LOAD_REWARDS_REQUEST\";\nexport const LOAD_REWARDS_SUCCESS = \"LOAD_REWARDS_SUCCESS\";\nexport const LOAD_REWARDS_FAILURE = \"LOAD_REWARDS_FAILURE\";\n\nexport const ADD_INIT_CARD = \"ADD_INIT_CARD\";\nexport const FETCH_CACHED_CARD = \"FETCH_CACHED_CARD\";\n\nexport const LOAD_LOYALTYCARDS_REQUEST = \"LOAD_LOYALTYCARDS_REQUEST\";\nexport const LOAD_LOYALTYCARDS_SUCCESS = \"LOAD_LOYALTYCARDS_SUCCESS\";\nexport const LOAD_LOYALTYCARDS_FAILURE = \"LOAD_LOYALTYCARDS_FAILURE\";\n\nexport const RESTART_CARD_REQUEST = \"RESTART_CARD_REQUEST\";\nexport const RESTART_CARD_SUCCESS = \"RESTART_CARD_SUCCESS\";\nexport const RESTART_CARD_FAILURE = \"RESTART_CARD_FAILURE\";\n\nexport const ADD_STAMP_BY_VALIDATION_LINK_RESET =\n  \"ADD_STAMP_BY_VALIDATION_LINK_RESET\";\nexport const ADD_STAMP_BY_VALIDATION_LINK_SUCCESS =\n  \"ADD_STAMP_BY_VALIDATION_LINK_SUCCESS\";\nexport const ADD_STAMP_BY_VALIDATION_LINK_FAILURE =\n  \"ADD_STAMP_BY_VALIDATION_LINK_FAILURE\";\n\nexport const SELECT_LOYALTYCARD = \"SELECT_LOYALTYCARD\";\n\nexport const CHANGE_QRMODE = \"CHANGE_QRMODE\";\nexport const SET_CURRENT_ID_CAMPAIGN = \"SET_CURRENT_ID_CAMPAIGN\";\nexport const SET_MENU_TARGET = \"SET_MENU_TARGET\";\nexport const ADD_STAMP_BY_VALIDATION_LINK_WITH_GIFT_SUCCESS =\n  \"ADD_STAMP_BY_VALIDATION_LINK_WITH_GIFT_SUCCESS\";\n\nexport const addInitCard = () => ({ type: ADD_INIT_CARD });\nexport const fetchCachedCard = () => ({ type: FETCH_CACHED_CARD });\n\nconst fetchLoyaltyCardRequest = () => {\n  return {\n    type: FETCH_LOYALTYCARD_REQUEST\n  };\n};\n\nconst fetchStampRequest = () => {\n  return {\n    type: FETCH_STAMP_REQUEST\n  };\n};\n\nconst fetchStampSuccess = payload => {\n  return {\n    type: FETCH_STAMP_SUCCESS,\n    payload: payload\n  };\n};\n\nconst fetchRewardsSuccess = payload => {\n  return {\n    type: FETCH_REWARDS_SUCCESS,\n    payload: payload\n  };\n};\n\nconst fetchRewardsRequest = payload => {\n  return {\n    type: FETCH_REWARDS_REQUEST\n  };\n};\n\nconst fetchRewardsFailure = error => {\n  return {\n    type: FETCH_REWARDS_FAILURE,\n    payload: error\n  };\n};\n\nconst fetchStampFailure = error => {\n  return {\n    type: FETCH_STAMP_FAILURE,\n    payload: error\n  };\n};\n\nconst fetchLoyaltyCardSuccess = payload => {\n  return {\n    type: FETCH_LOYALTYCARD_SUCCESS,\n    payload: payload\n  };\n};\n\nconst fetchLoyaltyCardFailure = error => {\n  return {\n    type: FETCH_LOYALTYCARD_FAILURE,\n    error: error\n  };\n};\n\nexport function generateCardRequest() {\n  return {\n    type: GENERATE_CARD_REQUEST\n  };\n}\n\nexport function generateCardSuccess(payload) {\n  return {\n    type: GENERATE_CARD_SUCCESS,\n    payload: payload\n  };\n}\n\nexport function generateCardFailure(error) {\n  return {\n    type: GENERATE_CARD_FAILURE,\n    error: error\n  };\n}\n\nexport function loadRewardsRequest() {\n  return {\n    type: LOAD_REWARDS_REQUEST\n  };\n}\n\nexport function loadRewardsSuccess(payload) {\n  return {\n    type: LOAD_REWARDS_SUCCESS,\n    payload: payload\n  };\n}\n\nexport function loadRewardsFailure(error) {\n  return {\n    type: LOAD_REWARDS_FAILURE,\n    error: error\n  };\n}\n\nexport function loadLoyaltyCardsRequest() {\n  return {\n    type: LOAD_LOYALTYCARDS_REQUEST\n  };\n}\n\nexport function loadLoyaltyCardsSuccess(payload) {\n  return {\n    type: LOAD_LOYALTYCARDS_SUCCESS,\n    payload: payload\n  };\n}\n\nexport function loadLoyaltyCardsFailure(error) {\n  return {\n    type: LOAD_LOYALTYCARDS_FAILURE,\n    error: error\n  };\n}\n\nexport function selectLoyaltyCard(payload) {\n  return {\n    type: SELECT_LOYALTYCARD,\n    payload: payload\n  };\n}\n\nexport function addStampByValidationLinkReset() {\n  return {\n    type: ADD_STAMP_BY_VALIDATION_LINK_RESET\n  };\n}\n\nexport function addStampByValidationLinkSuccess(payload) {\n  return {\n    type: ADD_STAMP_BY_VALIDATION_LINK_SUCCESS,\n    payload: payload\n  };\n}\n\nexport function addStampByValidationLinkWithGiftSuccess(payload) {\n  return {\n    type: ADD_STAMP_BY_VALIDATION_LINK_WITH_GIFT_SUCCESS,\n    payload: payload\n  };\n}\n\nexport function addStampByValidationLinkFailure(error) {\n  return {\n    type: ADD_STAMP_BY_VALIDATION_LINK_FAILURE,\n    error: error\n  };\n}\n\nexport const loadCachedLoyaltyCard = token => {\n  return dispatch => {\n    dispatch(fetchLoyaltyCardRequest());\n    getCard()\n      .then(card => dispatch(fetchLoyaltyCardSuccess(card)))\n      .catch(err => dispatch(fetchLoyaltyCardFailure(err)));\n  };\n};\n\nexport function changeQrMode(payload) {\n  return {\n    type: CHANGE_QRMODE,\n    payload\n  };\n}\n\nexport function setCurrentIdCampaign(payload) {\n  return {\n    type: SET_CURRENT_ID_CAMPAIGN,\n    payload\n  };\n}\n\nexport function addBadgeToMenu(payload) {\n  return {\n    type: SET_MENU_TARGET,\n    payload\n  };\n}\n\nexport const fetchInitLoyaltyCard = token => {\n  return dispatch => {\n    dispatch(fetchLoyaltyCardRequest());\n    Cloud.run(\"loadLoyaltyCard\", { token: token })\n      .then(card => {\n        // // alert(\"the saveCard value: \" + token)\n        let cardJson = card.toJSON();\n        initManifest(cardJson);\n        saveCardId(cardJson.token);\n        saveCard(card.toJSON())\n          .then(res => {\n            dispatch(fetchLoyaltyCardSuccess(cardJson));\n            setAsRun(token);\n            setClientManifest();\n            return cardJson.token;\n          })\n          .then(cardGuid => {\n            // // alert(\"the loadStamps value: \" + token)\n            Cloud.run(\"loadStamps\", { cardId: cardGuid }).then(stamps => {\n              dispatch(fetchStampSuccess(stamps));\n            });\n            // // alert(\"the loadRewardSteps value: \" + token)\n            Cloud.run(\"loadRewardSteps\", { cardId: cardGuid }).then(\n              rewardSteps => {\n                dispatch(fetchRewardsSuccess(rewardSteps));\n              }\n            );\n          });\n      })\n      .catch(err => {\n        dispatch(fetchLoyaltyCardFailure(err));\n        // // alert(JSON.stringify(err))\n      });\n  };\n};\n\nexport const restartCard = token => {\n  return dispatch => {\n    dispatch(fetchLoyaltyCardRequest());\n    getCardId().then(cardGuid => {\n      Cloud.run(\"restartCard\", { token: cardGuid })\n        .then(card => {\n          const cardJson = card.toJSON();\n          saveCard(cardJson).then(res => {\n            dispatch(fetchLoyaltyCardSuccess(cardJson));\n            loadRewards(cardJson.newRewards);\n            return cardJson.objectId;\n          });\n        })\n        .then(\n          getCardId().then(cardGuid => {\n            Cloud.run(\"loadStamps\", { cardId: cardGuid }).then(stamps => {\n              dispatch(fetchStampSuccess(stamps));\n            });\n            Cloud.run(\"loadRewardSteps\", { cardId: cardGuid }).then(\n              rewardSteps => {\n                dispatch(fetchRewardsSuccess(rewardSteps));\n              }\n            );\n          })\n        )\n        .catch(err => dispatch(fetchLoyaltyCardFailure(err)));\n    });\n  };\n};\n\nexport const loadLoyaltyCard = token => {\n  return dispatch => {\n    dispatch(fetchLoyaltyCardRequest());\n    dispatch(fetchStampRequest());\n    getCardId().then(cardGuid => {\n      Cloud.run(\"loadLoyaltyCard\", { token: token || cardGuid })\n        .then(card => {\n          const cardJson = card.toJSON();\n          if (!isManifestSetted()) initManifest(cardJson);\n          saveCard(cardJson).then(res => {\n            dispatch(fetchLoyaltyCardSuccess(cardJson));\n            loadRewards(cardJson.newRewards);\n            return cardJson.objectId;\n            // dispatch(loadRewardsRequest());\n            //   Cloud.run(\"loadRewards\", { cardId : cardJson.token})\n            //     .then(rewards => {\n            //       dispatch(loadRewardsSuccess(rewards));\n            //     })\n            //     .catch(err => dispatch(loadRewardsFailure(err)));\n          });\n        })\n        .then(\n          getCardId().then(cardGuid => {\n            Cloud.run(\"loadStamps\", { cardId: cardGuid }).then(stamps => {\n              dispatch(fetchStampSuccess(stamps));\n            });\n            Cloud.run(\"loadRewardSteps\", { cardId: cardGuid }).then(\n              rewardSteps => {\n                dispatch(fetchRewardsSuccess(rewardSteps));\n              }\n            );\n            // Cloud.run(\"loadRewardTemplate\", {loyaltyCardTemplateid:'S8lunn2sJv'})\n            // .then(\n            //   rewardTemplates => {\n            //     //dispatch(fetchRewardsSuccess(rewards))\n            //     console.log(rewardTemplates)\n            // })\n          })\n        )\n        .catch(err => {\n          if (err.code === 100) {\n            getCard()\n              .then(card => dispatch(fetchLoyaltyCardSuccess(card)))\n              .catch(err => dispatch(fetchLoyaltyCardFailure(err)));\n          }\n        });\n    });\n  };\n};\n\nexport const loadCurrentLoyaltyCard = token => {\n  return dispatch => {\n    dispatch(fetchLoyaltyCardRequest());\n    dispatch(fetchStampRequest());\n    getCardId().then(cardGuid => {\n      Cloud.run(\"loadLoyaltyCard\", { token: token || cardGuid })\n        .then(card => {\n          const cardJson = card.toJSON();\n          if (!isManifestSetted()) initManifest(cardJson);\n          saveCard(cardJson).then(res => {\n            dispatch(fetchLoyaltyCardSuccess(cardJson));\n            loadRewards(cardJson.newRewards);\n            return cardJson.objectId;\n            // dispatch(loadRewardsRequest());\n            //   Cloud.run(\"loadRewards\", { cardId : cardJson.token})\n            //     .then(rewards => {\n            //       dispatch(loadRewardsSuccess(rewards));\n            //     })\n            //     .catch(err => dispatch(loadRewardsFailure(err)));\n          });\n        })\n        .then(\n          getCardId().then(cardGuid => {\n            Cloud.run(\"loadStamps\", { cardId: cardGuid }).then(stamps => {\n              dispatch(fetchStampSuccess(stamps));\n            });\n            Cloud.run(\"loadRewardSteps\", { cardId: cardGuid }).then(\n              rewardSteps => {\n                dispatch(fetchRewardsSuccess(rewardSteps));\n              }\n            );\n            // Cloud.run(\"loadRewardTemplate\", {loyaltyCardTemplateid:'S8lunn2sJv'})\n            // .then(\n            //   rewardTemplates => {\n            //     //dispatch(fetchRewardsSuccess(rewards))\n            //     console.log(rewardTemplates)\n            // })\n          })\n        )\n        .catch(err => {\n          if (err.code === 100) {\n            getCard()\n              .then(card => dispatch(fetchLoyaltyCardSuccess(card)))\n              .catch(err => dispatch(fetchLoyaltyCardFailure(err)));\n          }\n        });\n    });\n  };\n};\n\nexport const loadStamps = (cardId, dispatch) => {\n  return dispatch => {\n    dispatch(fetchStampRequest());\n    Cloud.run(\"loadStamps\", { cardId: cardId })\n      .then(stamps => {\n        dispatch(fetchStampSuccess(stamps));\n      })\n      .catch(err => dispatch(fetchStampFailure(err)));\n  };\n};\n\nexport const loadRewardSteps = templateCardId => {\n  return dispatch => {\n    dispatch(fetchRewardsRequest());\n    Cloud.run(\"loadRewardStep\", { cardId: templateCardId })\n      .then(rewardSteps => {\n        dispatch(fetchRewardsSuccess(rewardSteps));\n      })\n      .catch(err => dispatch(fetchRewardsFailure(err)));\n  };\n};\n\nexport const loadLoyaltyFakeCard = token => {\n  return dispatch => {\n    dispatch(fetchLoyaltyCardRequest());\n    Cloud.run(\"loadFakeLoyaltyCard\", { token: token })\n      .then(card => {\n        dispatch(fetchLoyaltyCardSuccess(card.toJSON()));\n      })\n      .catch(err => dispatch(fetchLoyaltyCardFailure(err)));\n  };\n};\n\nexport const setInitializeIdCampaign = id => {\n  return dispatch => {\n    saveCurrentInitializeIdCampaign(id);\n  };\n};\n\nexport const generateCard = templateId => {\n  return dispatch => {\n    dispatch(generateCardRequest());\n    let profileToken = getProfileToken();\n    Cloud.run(\"generateCard\", { templateId, profileToken })\n      .then(card => {\n        let cardJson = card.toJSON();\n        saveCardId(cardJson.token).then(res => {\n          dispatch(generateCardSuccess(cardJson.token));\n        });\n      })\n      .catch(err => dispatch(generateCardFailure(err)));\n  };\n};\n\nexport const loadRewards = cardId => {\n  return dispatch => {\n    dispatch(loadRewardsRequest());\n    return Cloud.run(\"loadRewards\", { cardId })\n      .then(rewards => {\n        dispatch(loadRewardsSuccess(rewards));\n      })\n      .catch(err => dispatch(loadRewardsFailure(err)));\n  };\n};\n\nexport const loadLoyaltyCards = user => {\n  return dispatch => {\n    dispatch(loadLoyaltyCardsRequest());\n\n    let queryUserCards = user.relation(\"cards\").query();\n\n    return queryUserCards\n      .find()\n      .then(cards => {\n        const cardElments = [];\n        dispatch(loadLoyaltyCardsSuccess({ cards, cardElments }));\n        return cards.length - 1;\n      })\n      .catch(err => dispatch(loadLoyaltyCardsFailure(err)));\n  };\n};\n\nexport const loadLoyaltyCardsWithAnonymousUser = token => {\n  return dispatch => {\n    getCardId().then(cardGuid => {\n      Cloud.run(\"loadLoyaltyCardsWithAnonymousUser\", { token: token })\n        .then(cards => {\n          const cardElments = [];\n          dispatch(loadLoyaltyCardsSuccess({ cards, cardElments }));\n        })\n        .catch(err => {\n          if (err.code === 100) {\n            loadLoyaltyCardsFailure(err);\n            // getCard()\n            //   .then(card => dispatch(fetchLoyaltyCardSuccess(card)))\n            //   .catch(err => dispatch(fetchLoyaltyCardFailure(err)));\n          }\n        });\n    });\n  };\n};\n\nexport const selectAndChangeCardId = index => {\n  return (dispatch, getState) => {\n    if (!getState().home.cards[index]) return;\n    const cardAsJson = getState().home.cards[index].toJSON();\n    saveCard(cardAsJson).then(res => {\n      Cloud.run(\"loadLoyaltyCard\", { token: cardAsJson.token })\n        .then(card => {\n          const cardJson = card.toJSON();\n          setCurrentCardIndex(index);\n          if (!isManifestSetted()) initManifest(cardJson);\n          saveCard(cardJson).then(res => {\n            dispatch(fetchLoyaltyCardSuccess(cardJson));\n            loadRewards(cardJson.newRewards);\n            // dispatch(loadRewardsRequest());\n            //   Cloud.run(\"loadRewards\", { cardId : cardJson.token})\n            //     .then(rewards => {\n            //       dispatch(loadRewardsSuccess(rewards));\n            //     })\n            //     .catch(err => dispatch(loadRewardsFailure(err)));\n          });\n        })\n        .then(\n          getCardId().then(cardGuid => {\n            Cloud.run(\"loadStamps\", { cardId: cardGuid }).then(stamps => {\n              dispatch(fetchStampSuccess(stamps));\n            });\n            Cloud.run(\"loadRewardSteps\", { cardId: cardGuid }).then(\n              rewardSteps => {\n                dispatch(fetchRewardsSuccess(rewardSteps));\n              }\n            );\n            // Cloud.run(\"loadRewardTemplate\", {loyaltyCardTemplateid:'S8lunn2sJv'})\n            // .then(\n            //   rewardTemplates => {\n            //     //dispatch(fetchRewardsSuccess(rewards))\n            //     console.log(rewardTemplates)\n            // })\n          })\n        )\n        .catch(err => fetchLoyaltyCardFailure(err));\n    });\n    saveCardId(cardAsJson.token);\n  };\n};\n\nconst initManifest = cardAsJson => {\n  if (window) {\n    var myDynamicManifest = {\n      name: \"Hello Voucher\",\n      short_name: \"Hello Voucher\",\n      theme_color: \"#F1C40F\",\n      background_color: \"#37a0e6\",\n      display: \"standalone\",\n      Scope: \"/\",\n      start_url: window.PUBLIC_URL + \"/\" + cardAsJson.token,\n      icons: [\n        {\n          src: window.PUBLIC_URL + \"/images/icons/icon-72x72.png\",\n          sizes: \"72x72\",\n          type: \"image/png\"\n        },\n        {\n          src: window.PUBLIC_URL + \"/images/icons/icon-96x96.png\",\n          sizes: \"96x96\",\n          type: \"image/png\"\n        },\n        {\n          src: window.PUBLIC_URL + \"/images/icons/icon-128x128.png\",\n          sizes: \"128x128\",\n          type: \"image/png\"\n        },\n        {\n          src: window.PUBLIC_URL + \"/images/icons/icon-144x144.png\",\n          sizes: \"144x144\",\n          type: \"image/png\"\n        },\n        {\n          src: window.PUBLIC_URL + \"/images/icons/icon-152x152.png\",\n          sizes: \"152x152\",\n          type: \"image/png\"\n        },\n        {\n          src: window.PUBLIC_URL + \"/images/icons/icon-192x192.png\",\n          sizes: \"192x192\",\n          type: \"image/png\"\n        },\n        {\n          src: window.PUBLIC_URL + \"/images/icons/icon-384x384.png\",\n          sizes: \"384x384\",\n          type: \"image/png\"\n        },\n        {\n          src: window.PUBLIC_URL + \"/images/icons/icon-512x512.png\",\n          sizes: \"512x512\",\n          type: \"image/png\"\n        }\n      ],\n      splash_pages: null\n    };\n\n    const stringManifest = JSON.stringify(myDynamicManifest);\n    const blob = new Blob([stringManifest], { type: \"application/javascript\" });\n    const manifestURL = URL.createObjectURL(blob);\n    document.title = \"Hello Voucher\";\n    document\n      .querySelector(\"#my-manifest-placeholder\")\n      .setAttribute(\"href\", manifestURL);\n    setClientManifest();\n  }\n};\n\nexport const addStampByValidationLink = (validationToken, history) => {\n  return dispatch => {\n    dispatch(addStampByValidationLinkReset());\n    return getCardId().then(cardGuid => {\n      Cloud.run(\"addStampByValidationLink\", {\n        token: cardGuid,\n        validationToken: validationToken\n      })\n        .then(result => {\n          // here last modification\n          if (result === \"SUCCESS_WITH_REWARD\") {\n            dispatch(addBadgeToMenu(\"offer\"));\n            dispatch(addStampByValidationLinkWithGiftSuccess(result));\n            addBadgeToMenu(true);\n          } else {\n            dispatch(addStampByValidationLinkSuccess(result));\n          }\n        })\n        .catch(err => dispatch(addStampByValidationLinkFailure(err)));\n    });\n  };\n};\n\nexport const addStampByMagicStamp = (data) => {\n  return dispatch => {\n    dispatch(addStampByValidationLinkReset());\n    return getCardId().then(cardGuid => {\n      Cloud.run(\"addStampByMagicStamp\", {\n        token: cardGuid,\n        dataStamp:data\n      })\n        .then(result => {\n          if (result === \"SUCCESS_WITH_REWARD\") {\n            dispatch(addBadgeToMenu(\"offer\"));\n            dispatch(addStampByValidationLinkWithGiftSuccess(result));\n            addBadgeToMenu(true);\n          } else {\n            dispatch(addStampByValidationLinkSuccess(result));\n          }\n        })\n        .catch(err => dispatch(addStampByValidationLinkFailure(err)));\n    });\n  };\n};\n\nexport const closeValidationModal = () => {\n  return dispatch => {\n    dispatch(addStampByValidationLinkReset());\n  };\n};\n"]},"metadata":{},"sourceType":"module"}